{"version":3,"file":"api-endpoints.js","sourceRoot":"","sources":["../../src/api-endpoints.ts"],"names":[],"mappings":";AAAA,sBAAsB;AACtB,+CAA+C;;;AAq8O/C;;GAEG;AACU,QAAA,OAAO,GAAG;IACrB,MAAM,EAAE,KAAK;IACb,UAAU,EAAE,EAAE;IACd,WAAW,EAAE,EAAE;IACf,UAAU,EAAE,EAAE;IAEd,IAAI,EAAE,GAAW,EAAE,CAAC,UAAU;CACtB,CAAA;AAUV;;GAEG;AACU,QAAA,OAAO,GAAG;IACrB,MAAM,EAAE,KAAK;IACb,UAAU,EAAE,CAAC,SAAS,CAAC;IACvB,WAAW,EAAE,EAAE;IACf,UAAU,EAAE,EAAE;IAEd,IAAI,EAAE,CAAC,CAAwB,EAAU,EAAE,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE;CACxD,CAAA;AAkBV;;GAEG;AACU,QAAA,SAAS,GAAG;IACvB,MAAM,EAAE,KAAK;IACb,UAAU,EAAE,EAAE;IACd,WAAW,EAAE,CAAC,cAAc,EAAE,WAAW,CAAC;IAC1C,UAAU,EAAE,EAAE;IAEd,IAAI,EAAE,GAAW,EAAE,CAAC,OAAO;CACnB,CAAA;AA4FV;;GAEG;AACU,QAAA,UAAU,GAAG;IACxB,MAAM,EAAE,MAAM;IACd,UAAU,EAAE,EAAE;IACd,WAAW,EAAE,EAAE;IACf,UAAU,EAAE,CAAC,QAAQ,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU,CAAC;IAE5E,IAAI,EAAE,GAAW,EAAE,CAAC,OAAO;CACnB,CAAA;AAcV;;GAEG;AACU,QAAA,OAAO,GAAG;IACrB,MAAM,EAAE,KAAK;IACb,UAAU,EAAE,CAAC,SAAS,CAAC;IACvB,WAAW,EAAE,CAAC,mBAAmB,CAAC;IAClC,UAAU,EAAE,EAAE;IAEd,IAAI,EAAE,CAAC,CAAwB,EAAU,EAAE,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE;CACxD,CAAA;AA+FV;;GAEG;AACU,QAAA,UAAU,GAAG;IACxB,MAAM,EAAE,OAAO;IACf,UAAU,EAAE,CAAC,SAAS,CAAC;IACvB,WAAW,EAAE,EAAE;IACf,UAAU,EAAE;QACV,YAAY;QACZ,MAAM;QACN,OAAO;QACP,WAAW;QACX,UAAU;QACV,UAAU;KACX;IAED,IAAI,EAAE,CAAC,CAA2B,EAAU,EAAE,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE;CAC3D,CAAA;AAmBV;;GAEG;AACU,QAAA,eAAe,GAAG;IAC7B,MAAM,EAAE,KAAK;IACb,UAAU,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;IACtC,WAAW,EAAE,CAAC,cAAc,EAAE,WAAW,CAAC;IAC1C,UAAU,EAAE,EAAE;IAEd,IAAI,EAAE,CAAC,CAAgC,EAAU,EAAE,CACjD,SAAS,CAAC,CAAC,OAAO,eAAe,CAAC,CAAC,WAAW,EAAE;CAC1C,CAAA;AAUV;;GAEG;AACU,QAAA,QAAQ,GAAG;IACtB,MAAM,EAAE,KAAK;IACb,UAAU,EAAE,CAAC,UAAU,CAAC;IACxB,WAAW,EAAE,EAAE;IACf,UAAU,EAAE,EAAE;IAEd,IAAI,EAAE,CAAC,CAAyB,EAAU,EAAE,CAAC,UAAU,CAAC,CAAC,QAAQ,EAAE;CAC3D,CAAA;AA6MV;;GAEG;AACU,QAAA,WAAW,GAAG;IACzB,MAAM,EAAE,OAAO;IACf,UAAU,EAAE,CAAC,UAAU,CAAC;IACxB,WAAW,EAAE,EAAE;IACf,UAAU,EAAE;QACV,OAAO;QACP,MAAM;QACN,UAAU;QACV,UAAU;QACV,UAAU;QACV,OAAO;QACP,OAAO;QACP,KAAK;QACL,MAAM;QACN,OAAO;QACP,MAAM;QACN,UAAU;QACV,SAAS;QACT,YAAY;QACZ,mBAAmB;QACnB,cAAc;QACd,WAAW;QACX,WAAW;QACX,WAAW;QACX,WAAW;QACX,WAAW;QACX,oBAAoB;QACpB,oBAAoB;QACpB,OAAO;QACP,OAAO;QACP,QAAQ;QACR,UAAU;QACV,SAAS;QACT,cAAc;QACd,OAAO;QACP,QAAQ;KACT;IAED,IAAI,EAAE,CAAC,CAA4B,EAAU,EAAE,CAAC,UAAU,CAAC,CAAC,QAAQ,EAAE;CAC9D,CAAA;AAYV;;GAEG;AACU,QAAA,WAAW,GAAG;IACzB,MAAM,EAAE,QAAQ;IAChB,UAAU,EAAE,CAAC,UAAU,CAAC;IACxB,WAAW,EAAE,EAAE;IACf,UAAU,EAAE,EAAE;IAEd,IAAI,EAAE,CAAC,CAA4B,EAAU,EAAE,CAAC,UAAU,CAAC,CAAC,QAAQ,EAAE;CAC9D,CAAA;AAuBV;;GAEG;AACU,QAAA,iBAAiB,GAAG;IAC/B,MAAM,EAAE,KAAK;IACb,UAAU,EAAE,CAAC,UAAU,CAAC;IACxB,WAAW,EAAE,CAAC,cAAc,EAAE,WAAW,CAAC;IAC1C,UAAU,EAAE,EAAE;IAEd,IAAI,EAAE,CAAC,CAAkC,EAAU,EAAE,CACnD,UAAU,CAAC,CAAC,QAAQ,WAAW;CACzB,CAAA;AAuBV;;GAEG;AACU,QAAA,mBAAmB,GAAG;IACjC,MAAM,EAAE,OAAO;IACf,UAAU,EAAE,CAAC,UAAU,CAAC;IACxB,WAAW,EAAE,EAAE;IACf,UAAU,EAAE,CAAC,UAAU,EAAE,OAAO,CAAC;IAEjC,IAAI,EAAE,CAAC,CAAoC,EAAU,EAAE,CACrD,UAAU,CAAC,CAAC,QAAQ,WAAW;CACzB,CAAA;AAaV;;GAEG;AACU,QAAA,aAAa,GAAG;IAC3B,MAAM,EAAE,KAAK;IACb,UAAU,EAAE,CAAC,gBAAgB,CAAC;IAC9B,WAAW,EAAE,EAAE;IACf,UAAU,EAAE,EAAE;IAEd,IAAI,EAAE,CAAC,CAA8B,EAAU,EAAE,CAC/C,gBAAgB,CAAC,CAAC,cAAc,EAAE;CAC5B,CAAA;AA4LV;;GAEG;AACU,QAAA,gBAAgB,GAAG;IAC9B,MAAM,EAAE,OAAO;IACf,UAAU,EAAE,CAAC,gBAAgB,CAAC;IAC9B,WAAW,EAAE,EAAE;IACf,UAAU,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,CAAC;IAE7E,IAAI,EAAE,CAAC,CAAiC,EAAU,EAAE,CAClD,gBAAgB,CAAC,CAAC,cAAc,EAAE;CAC5B,CAAA;AA+CV;;GAEG;AACU,QAAA,eAAe,GAAG;IAC7B,MAAM,EAAE,MAAM;IACd,UAAU,EAAE,CAAC,gBAAgB,CAAC;IAC9B,WAAW,EAAE,CAAC,mBAAmB,CAAC;IAClC,UAAU,EAAE;QACV,OAAO;QACP,QAAQ;QACR,cAAc;QACd,WAAW;QACX,UAAU;QACV,UAAU;KACX;IAED,IAAI,EAAE,CAAC,CAAgC,EAAU,EAAE,CACjD,gBAAgB,CAAC,CAAC,cAAc,QAAQ;CAClC,CAAA;AAmBV;;GAEG;AACU,QAAA,gBAAgB,GAAG;IAC9B,MAAM,EAAE,MAAM;IACd,UAAU,EAAE,EAAE;IACd,WAAW,EAAE,EAAE;IACf,UAAU,EAAE,CAAC,QAAQ,EAAE,YAAY,EAAE,OAAO,EAAE,MAAM,CAAC;IAErD,IAAI,EAAE,GAAW,EAAE,CAAC,cAAc;CAC1B,CAAA;AAaV;;GAEG;AACU,QAAA,WAAW,GAAG;IACzB,MAAM,EAAE,KAAK;IACb,UAAU,EAAE,CAAC,aAAa,CAAC;IAC3B,WAAW,EAAE,EAAE;IACf,UAAU,EAAE,EAAE;IAEd,IAAI,EAAE,CAAC,CAA4B,EAAU,EAAE,CAAC,aAAa,CAAC,CAAC,WAAW,EAAE;CACpE,CAAA;AAwDV;;GAEG;AACU,QAAA,cAAc,GAAG;IAC5B,MAAM,EAAE,OAAO;IACf,UAAU,EAAE,CAAC,aAAa,CAAC;IAC3B,WAAW,EAAE,EAAE;IACf,UAAU,EAAE;QACV,QAAQ;QACR,OAAO;QACP,aAAa;QACb,WAAW;QACX,MAAM;QACN,OAAO;QACP,UAAU;QACV,WAAW;KACZ;IAED,IAAI,EAAE,CAAC,CAA+B,EAAU,EAAE,CAChD,aAAa,CAAC,CAAC,WAAW,EAAE;CACtB,CAAA;AAwCV;;GAEG;AACU,QAAA,cAAc,GAAG;IAC5B,MAAM,EAAE,MAAM;IACd,UAAU,EAAE,EAAE;IACd,WAAW,EAAE,EAAE;IACf,UAAU,EAAE;QACV,QAAQ;QACR,OAAO;QACP,aAAa;QACb,WAAW;QACX,qBAAqB;QACrB,MAAM;QACN,OAAO;KACR;IAED,IAAI,EAAE,GAAW,EAAE,CAAC,WAAW;CACvB,CAAA;AA6BV;;GAEG;AACU,QAAA,MAAM,GAAG;IACpB,MAAM,EAAE,MAAM;IACd,UAAU,EAAE,EAAE;IACd,WAAW,EAAE,EAAE;IACf,UAAU,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,cAAc,EAAE,WAAW,EAAE,QAAQ,CAAC;IAEpE,IAAI,EAAE,GAAW,EAAE,CAAC,QAAQ;CACpB,CAAA;AA6DV;;GAEG;AACU,QAAA,aAAa,GAAG;IAC3B,MAAM,EAAE,MAAM;IACd,UAAU,EAAE,EAAE;IACd,WAAW,EAAE,EAAE;IACf,UAAU,EAAE;QACV,WAAW;QACX,aAAa;QACb,cAAc;QACd,QAAQ;QACR,eAAe;KAChB;IAED,IAAI,EAAE,GAAW,EAAE,CAAC,UAAU;CACtB,CAAA;AAyBV;;GAEG;AACU,QAAA,YAAY,GAAG;IAC1B,MAAM,EAAE,KAAK;IACb,UAAU,EAAE,EAAE;IACd,WAAW,EAAE,CAAC,UAAU,EAAE,cAAc,EAAE,WAAW,CAAC;IACtD,UAAU,EAAE,EAAE;IAEd,IAAI,EAAE,GAAW,EAAE,CAAC,UAAU;CACtB,CAAA;AAaV;;GAEG;AACU,QAAA,UAAU,GAAG;IACxB,MAAM,EAAE,KAAK;IACb,UAAU,EAAE,CAAC,YAAY,CAAC;IAC1B,WAAW,EAAE,EAAE;IACf,UAAU,EAAE,EAAE;IAEd,IAAI,EAAE,CAAC,CAA2B,EAAU,EAAE,CAAC,YAAY,CAAC,CAAC,UAAU,EAAE;CACjE,CAAA;AA2BV;;GAEG;AACU,QAAA,gBAAgB,GAAG;IAC9B,MAAM,EAAE,MAAM;IACd,UAAU,EAAE,EAAE;IACd,WAAW,EAAE,EAAE;IACf,UAAU,EAAE;QACV,MAAM;QACN,UAAU;QACV,cAAc;QACd,iBAAiB;QACjB,cAAc;KACf;IAED,IAAI,EAAE,GAAW,EAAE,CAAC,cAAc;CAC1B,CAAA;AAyBV;;GAEG;AACU,QAAA,eAAe,GAAG;IAC7B,MAAM,EAAE,KAAK;IACb,UAAU,EAAE,EAAE;IACd,WAAW,EAAE,CAAC,QAAQ,EAAE,cAAc,EAAE,WAAW,CAAC;IACpD,UAAU,EAAE,EAAE;IAEd,IAAI,EAAE,GAAW,EAAE,CAAC,cAAc;CAC1B,CAAA;AAiBV;;GAEG;AACU,QAAA,cAAc,GAAG;IAC5B,MAAM,EAAE,MAAM;IACd,UAAU,EAAE,CAAC,gBAAgB,CAAC;IAC9B,WAAW,EAAE,EAAE;IACf,UAAU,EAAE,EAAE;IACd,cAAc,EAAE,CAAC,MAAM,EAAE,aAAa,CAAC;IACvC,IAAI,EAAE,CAAC,CAA+B,EAAU,EAAE,CAChD,gBAAgB,CAAC,CAAC,cAAc,OAAO;CACjC,CAAA;AAWV;;GAEG;AACU,QAAA,kBAAkB,GAAG;IAChC,MAAM,EAAE,MAAM;IACd,UAAU,EAAE,CAAC,gBAAgB,CAAC;IAC9B,WAAW,EAAE,EAAE;IACf,UAAU,EAAE,EAAE;IAEd,IAAI,EAAE,CAAC,CAAmC,EAAU,EAAE,CACpD,gBAAgB,CAAC,CAAC,cAAc,WAAW;CACrC,CAAA;AAWV;;GAEG;AACU,QAAA,aAAa,GAAG;IAC3B,MAAM,EAAE,KAAK;IACb,UAAU,EAAE,CAAC,gBAAgB,CAAC;IAC9B,WAAW,EAAE,EAAE;IACf,UAAU,EAAE,EAAE;IAEd,IAAI,EAAE,CAAC,CAA8B,EAAU,EAAE,CAC/C,gBAAgB,CAAC,CAAC,cAAc,EAAE;CAC5B,CAAA;AAwCV;;GAEG;AACU,QAAA,UAAU,GAAG;IACxB,MAAM,EAAE,MAAM;IACd,UAAU,EAAE,EAAE;IACd,WAAW,EAAE,EAAE;IACf,UAAU,EAAE;QACV,YAAY;QACZ,MAAM;QACN,cAAc;QACd,kBAAkB;QAClB,eAAe;KAChB;IAED,IAAI,EAAE,GAAW,EAAE,CAAC,aAAa;CACzB,CAAA;AAQV;;GAEG;AACU,QAAA,WAAW,GAAG;IACzB,MAAM,EAAE,MAAM;IACd,UAAU,EAAE,EAAE;IACd,WAAW,EAAE,EAAE;IACf,UAAU,EAAE,CAAC,OAAO,CAAC;IAErB,IAAI,EAAE,GAAW,EAAE,CAAC,cAAc;CAC1B,CAAA;AAaV;;GAEG;AACU,QAAA,eAAe,GAAG;IAC7B,MAAM,EAAE,MAAM;IACd,UAAU,EAAE,EAAE;IACd,WAAW,EAAE,EAAE;IACf,UAAU,EAAE,CAAC,OAAO,CAAC;IAErB,IAAI,EAAE,GAAW,EAAE,CAAC,kBAAkB;CAC9B,CAAA","sourcesContent":["// cspell:disable-file\n// Note: This is a generated file. DO NOT EDIT!\n\ntype IdRequest = string\n\nexport type PersonUserObjectResponse = {\n  // Indicates this user is a person.\n  type: \"person\"\n  // Details about the person, when the `type` of the user is `person`.\n  person: {\n    // The email of the person.\n    email?: string\n  }\n}\n\ntype EmptyObject = Record<string, never>\n\nexport type PartialUserObjectResponse = {\n  id: IdResponse\n  // Always `user`\n  object: \"user\"\n}\n\ntype BotInfoResponse = {\n  // Details about the owner of the bot.\n  owner:\n    | {\n        // Always `user`\n        type: \"user\"\n        // Details about the owner of the bot, when the `type` of the owner is `user`. This means\n        // the bot is for a integration.\n        user:\n          | {\n              // The ID of the user.\n              id: IdResponse\n              // The user object type name.\n              object: \"user\"\n              // The name of the user.\n              name: string | null\n              // The avatar URL of the user.\n              avatar_url: string | null\n              // The type of the user.\n              type: \"person\"\n              // The person info of the user.\n              person: {\n                // The email of the person.\n                email?: string\n              }\n            }\n          | PartialUserObjectResponse\n      }\n    | {\n        // Always `workspace`\n        type: \"workspace\"\n        // Details about the owner of the bot, when the `type` of the owner is `workspace`. This\n        // means the bot is for an internal integration.\n        workspace: true\n      }\n  // The name of the bot's workspace.\n  workspace_name: string | null\n  // Limits and restrictions that apply to the bot's workspace\n  workspace_limits: {\n    // The maximum allowable size of a file upload, in bytes\n    max_file_upload_size_in_bytes: number\n  }\n}\n\nexport type BotUserObjectResponse = {\n  // Indicates this user is a bot.\n  type: \"bot\"\n  // Details about the bot, when the `type` of the user is `bot`.\n  bot: EmptyObject | BotInfoResponse\n}\n\nexport type UserObjectResponse = UserObjectResponseCommon &\n  (PersonUserObjectResponse | BotUserObjectResponse)\n\nexport type GroupObjectResponse = {\n  name: string | null\n  id: IdRequest\n  object: \"group\"\n}\n\ntype DatabaseParentResponse = {\n  // The parent type.\n  type: \"database_id\"\n  // The ID of the parent database.\n  database_id: IdResponse\n}\n\ntype DataSourceIdParentForBlockBasedObjectResponse = {\n  type: \"data_source_id\"\n  data_source_id: string\n  database_id: string\n}\n\ntype PageIdParentForBlockBasedObjectResponse = {\n  // The parent type.\n  type: \"page_id\"\n  // The ID of the parent page.\n  page_id: IdResponse\n}\n\ntype BlockIdParentForBlockBasedObjectResponse = {\n  // The parent type.\n  type: \"block_id\"\n  // The ID of the parent block.\n  block_id: IdResponse\n}\n\ntype WorkspaceParentForBlockBasedObjectResponse = {\n  // The parent type.\n  type: \"workspace\"\n  // Always true for workspace parent.\n  workspace: true\n}\n\ntype ParentForBlockBasedObjectResponse =\n  | DatabaseParentResponse\n  | DataSourceIdParentForBlockBasedObjectResponse\n  | PageIdParentForBlockBasedObjectResponse\n  | BlockIdParentForBlockBasedObjectResponse\n  | WorkspaceParentForBlockBasedObjectResponse\n\n/**\n * One of: `default`, `gray`, `brown`, `orange`, `yellow`, `green`, `blue`, `purple`,\n * `pink`, `red`\n */\ntype SelectColor =\n  | \"default\"\n  | \"gray\"\n  | \"brown\"\n  | \"orange\"\n  | \"yellow\"\n  | \"green\"\n  | \"blue\"\n  | \"purple\"\n  | \"pink\"\n  | \"red\"\n\ntype PartialSelectResponse = { id: string; name: string; color: SelectColor }\n\ntype TimeZoneRequest =\n  | \"Africa/Abidjan\"\n  | \"Africa/Accra\"\n  | \"Africa/Addis_Ababa\"\n  | \"Africa/Algiers\"\n  | \"Africa/Asmara\"\n  | \"Africa/Asmera\"\n  | \"Africa/Bamako\"\n  | \"Africa/Bangui\"\n  | \"Africa/Banjul\"\n  | \"Africa/Bissau\"\n  | \"Africa/Blantyre\"\n  | \"Africa/Brazzaville\"\n  | \"Africa/Bujumbura\"\n  | \"Africa/Cairo\"\n  | \"Africa/Casablanca\"\n  | \"Africa/Ceuta\"\n  | \"Africa/Conakry\"\n  | \"Africa/Dakar\"\n  | \"Africa/Dar_es_Salaam\"\n  | \"Africa/Djibouti\"\n  | \"Africa/Douala\"\n  | \"Africa/El_Aaiun\"\n  | \"Africa/Freetown\"\n  | \"Africa/Gaborone\"\n  | \"Africa/Harare\"\n  | \"Africa/Johannesburg\"\n  | \"Africa/Juba\"\n  | \"Africa/Kampala\"\n  | \"Africa/Khartoum\"\n  | \"Africa/Kigali\"\n  | \"Africa/Kinshasa\"\n  | \"Africa/Lagos\"\n  | \"Africa/Libreville\"\n  | \"Africa/Lome\"\n  | \"Africa/Luanda\"\n  | \"Africa/Lubumbashi\"\n  | \"Africa/Lusaka\"\n  | \"Africa/Malabo\"\n  | \"Africa/Maputo\"\n  | \"Africa/Maseru\"\n  | \"Africa/Mbabane\"\n  | \"Africa/Mogadishu\"\n  | \"Africa/Monrovia\"\n  | \"Africa/Nairobi\"\n  | \"Africa/Ndjamena\"\n  | \"Africa/Niamey\"\n  | \"Africa/Nouakchott\"\n  | \"Africa/Ouagadougou\"\n  | \"Africa/Porto-Novo\"\n  | \"Africa/Sao_Tome\"\n  | \"Africa/Timbuktu\"\n  | \"Africa/Tripoli\"\n  | \"Africa/Tunis\"\n  | \"Africa/Windhoek\"\n  | \"America/Adak\"\n  | \"America/Anchorage\"\n  | \"America/Anguilla\"\n  | \"America/Antigua\"\n  | \"America/Araguaina\"\n  | \"America/Argentina/Buenos_Aires\"\n  | \"America/Argentina/Catamarca\"\n  | \"America/Argentina/ComodRivadavia\"\n  | \"America/Argentina/Cordoba\"\n  | \"America/Argentina/Jujuy\"\n  | \"America/Argentina/La_Rioja\"\n  | \"America/Argentina/Mendoza\"\n  | \"America/Argentina/Rio_Gallegos\"\n  | \"America/Argentina/Salta\"\n  | \"America/Argentina/San_Juan\"\n  | \"America/Argentina/San_Luis\"\n  | \"America/Argentina/Tucuman\"\n  | \"America/Argentina/Ushuaia\"\n  | \"America/Aruba\"\n  | \"America/Asuncion\"\n  | \"America/Atikokan\"\n  | \"America/Atka\"\n  | \"America/Bahia\"\n  | \"America/Bahia_Banderas\"\n  | \"America/Barbados\"\n  | \"America/Belem\"\n  | \"America/Belize\"\n  | \"America/Blanc-Sablon\"\n  | \"America/Boa_Vista\"\n  | \"America/Bogota\"\n  | \"America/Boise\"\n  | \"America/Buenos_Aires\"\n  | \"America/Cambridge_Bay\"\n  | \"America/Campo_Grande\"\n  | \"America/Cancun\"\n  | \"America/Caracas\"\n  | \"America/Catamarca\"\n  | \"America/Cayenne\"\n  | \"America/Cayman\"\n  | \"America/Chicago\"\n  | \"America/Chihuahua\"\n  | \"America/Ciudad_Juarez\"\n  | \"America/Coral_Harbour\"\n  | \"America/Cordoba\"\n  | \"America/Costa_Rica\"\n  | \"America/Creston\"\n  | \"America/Cuiaba\"\n  | \"America/Curacao\"\n  | \"America/Danmarkshavn\"\n  | \"America/Dawson\"\n  | \"America/Dawson_Creek\"\n  | \"America/Denver\"\n  | \"America/Detroit\"\n  | \"America/Dominica\"\n  | \"America/Edmonton\"\n  | \"America/Eirunepe\"\n  | \"America/El_Salvador\"\n  | \"America/Ensenada\"\n  | \"America/Fort_Nelson\"\n  | \"America/Fort_Wayne\"\n  | \"America/Fortaleza\"\n  | \"America/Glace_Bay\"\n  | \"America/Godthab\"\n  | \"America/Goose_Bay\"\n  | \"America/Grand_Turk\"\n  | \"America/Grenada\"\n  | \"America/Guadeloupe\"\n  | \"America/Guatemala\"\n  | \"America/Guayaquil\"\n  | \"America/Guyana\"\n  | \"America/Halifax\"\n  | \"America/Havana\"\n  | \"America/Hermosillo\"\n  | \"America/Indiana/Indianapolis\"\n  | \"America/Indiana/Knox\"\n  | \"America/Indiana/Marengo\"\n  | \"America/Indiana/Petersburg\"\n  | \"America/Indiana/Tell_City\"\n  | \"America/Indiana/Vevay\"\n  | \"America/Indiana/Vincennes\"\n  | \"America/Indiana/Winamac\"\n  | \"America/Indianapolis\"\n  | \"America/Inuvik\"\n  | \"America/Iqaluit\"\n  | \"America/Jamaica\"\n  | \"America/Jujuy\"\n  | \"America/Juneau\"\n  | \"America/Kentucky/Louisville\"\n  | \"America/Kentucky/Monticello\"\n  | \"America/Knox_IN\"\n  | \"America/Kralendijk\"\n  | \"America/La_Paz\"\n  | \"America/Lima\"\n  | \"America/Los_Angeles\"\n  | \"America/Louisville\"\n  | \"America/Lower_Princes\"\n  | \"America/Maceio\"\n  | \"America/Managua\"\n  | \"America/Manaus\"\n  | \"America/Marigot\"\n  | \"America/Martinique\"\n  | \"America/Matamoros\"\n  | \"America/Mazatlan\"\n  | \"America/Mendoza\"\n  | \"America/Menominee\"\n  | \"America/Merida\"\n  | \"America/Metlakatla\"\n  | \"America/Mexico_City\"\n  | \"America/Miquelon\"\n  | \"America/Moncton\"\n  | \"America/Monterrey\"\n  | \"America/Montevideo\"\n  | \"America/Montreal\"\n  | \"America/Montserrat\"\n  | \"America/Nassau\"\n  | \"America/New_York\"\n  | \"America/Nipigon\"\n  | \"America/Nome\"\n  | \"America/Noronha\"\n  | \"America/North_Dakota/Beulah\"\n  | \"America/North_Dakota/Center\"\n  | \"America/North_Dakota/New_Salem\"\n  | \"America/Nuuk\"\n  | \"America/Ojinaga\"\n  | \"America/Panama\"\n  | \"America/Pangnirtung\"\n  | \"America/Paramaribo\"\n  | \"America/Phoenix\"\n  | \"America/Port-au-Prince\"\n  | \"America/Port_of_Spain\"\n  | \"America/Porto_Acre\"\n  | \"America/Porto_Velho\"\n  | \"America/Puerto_Rico\"\n  | \"America/Punta_Arenas\"\n  | \"America/Rainy_River\"\n  | \"America/Rankin_Inlet\"\n  | \"America/Recife\"\n  | \"America/Regina\"\n  | \"America/Resolute\"\n  | \"America/Rio_Branco\"\n  | \"America/Rosario\"\n  | \"America/Santa_Isabel\"\n  | \"America/Santarem\"\n  | \"America/Santiago\"\n  | \"America/Santo_Domingo\"\n  | \"America/Sao_Paulo\"\n  | \"America/Scoresbysund\"\n  | \"America/Shiprock\"\n  | \"America/Sitka\"\n  | \"America/St_Barthelemy\"\n  | \"America/St_Johns\"\n  | \"America/St_Kitts\"\n  | \"America/St_Lucia\"\n  | \"America/St_Thomas\"\n  | \"America/St_Vincent\"\n  | \"America/Swift_Current\"\n  | \"America/Tegucigalpa\"\n  | \"America/Thule\"\n  | \"America/Thunder_Bay\"\n  | \"America/Tijuana\"\n  | \"America/Toronto\"\n  | \"America/Tortola\"\n  | \"America/Vancouver\"\n  | \"America/Virgin\"\n  | \"America/Whitehorse\"\n  | \"America/Winnipeg\"\n  | \"America/Yakutat\"\n  | \"America/Yellowknife\"\n  | \"Antarctica/Casey\"\n  | \"Antarctica/Davis\"\n  | \"Antarctica/DumontDUrville\"\n  | \"Antarctica/Macquarie\"\n  | \"Antarctica/Mawson\"\n  | \"Antarctica/McMurdo\"\n  | \"Antarctica/Palmer\"\n  | \"Antarctica/Rothera\"\n  | \"Antarctica/South_Pole\"\n  | \"Antarctica/Syowa\"\n  | \"Antarctica/Troll\"\n  | \"Antarctica/Vostok\"\n  | \"Arctic/Longyearbyen\"\n  | \"Asia/Aden\"\n  | \"Asia/Almaty\"\n  | \"Asia/Amman\"\n  | \"Asia/Anadyr\"\n  | \"Asia/Aqtau\"\n  | \"Asia/Aqtobe\"\n  | \"Asia/Ashgabat\"\n  | \"Asia/Ashkhabad\"\n  | \"Asia/Atyrau\"\n  | \"Asia/Baghdad\"\n  | \"Asia/Bahrain\"\n  | \"Asia/Baku\"\n  | \"Asia/Bangkok\"\n  | \"Asia/Barnaul\"\n  | \"Asia/Beirut\"\n  | \"Asia/Bishkek\"\n  | \"Asia/Brunei\"\n  | \"Asia/Calcutta\"\n  | \"Asia/Chita\"\n  | \"Asia/Choibalsan\"\n  | \"Asia/Chongqing\"\n  | \"Asia/Chungking\"\n  | \"Asia/Colombo\"\n  | \"Asia/Dacca\"\n  | \"Asia/Damascus\"\n  | \"Asia/Dhaka\"\n  | \"Asia/Dili\"\n  | \"Asia/Dubai\"\n  | \"Asia/Dushanbe\"\n  | \"Asia/Famagusta\"\n  | \"Asia/Gaza\"\n  | \"Asia/Harbin\"\n  | \"Asia/Hebron\"\n  | \"Asia/Ho_Chi_Minh\"\n  | \"Asia/Hong_Kong\"\n  | \"Asia/Hovd\"\n  | \"Asia/Irkutsk\"\n  | \"Asia/Istanbul\"\n  | \"Asia/Jakarta\"\n  | \"Asia/Jayapura\"\n  | \"Asia/Jerusalem\"\n  | \"Asia/Kabul\"\n  | \"Asia/Kamchatka\"\n  | \"Asia/Karachi\"\n  | \"Asia/Kashgar\"\n  | \"Asia/Kathmandu\"\n  | \"Asia/Katmandu\"\n  | \"Asia/Khandyga\"\n  | \"Asia/Kolkata\"\n  | \"Asia/Krasnoyarsk\"\n  | \"Asia/Kuala_Lumpur\"\n  | \"Asia/Kuching\"\n  | \"Asia/Kuwait\"\n  | \"Asia/Macao\"\n  | \"Asia/Macau\"\n  | \"Asia/Magadan\"\n  | \"Asia/Makassar\"\n  | \"Asia/Manila\"\n  | \"Asia/Muscat\"\n  | \"Asia/Nicosia\"\n  | \"Asia/Novokuznetsk\"\n  | \"Asia/Novosibirsk\"\n  | \"Asia/Omsk\"\n  | \"Asia/Oral\"\n  | \"Asia/Phnom_Penh\"\n  | \"Asia/Pontianak\"\n  | \"Asia/Pyongyang\"\n  | \"Asia/Qatar\"\n  | \"Asia/Qostanay\"\n  | \"Asia/Qyzylorda\"\n  | \"Asia/Rangoon\"\n  | \"Asia/Riyadh\"\n  | \"Asia/Saigon\"\n  | \"Asia/Sakhalin\"\n  | \"Asia/Samarkand\"\n  | \"Asia/Seoul\"\n  | \"Asia/Shanghai\"\n  | \"Asia/Singapore\"\n  | \"Asia/Srednekolymsk\"\n  | \"Asia/Taipei\"\n  | \"Asia/Tashkent\"\n  | \"Asia/Tbilisi\"\n  | \"Asia/Tehran\"\n  | \"Asia/Tel_Aviv\"\n  | \"Asia/Thimbu\"\n  | \"Asia/Thimphu\"\n  | \"Asia/Tokyo\"\n  | \"Asia/Tomsk\"\n  | \"Asia/Ujung_Pandang\"\n  | \"Asia/Ulaanbaatar\"\n  | \"Asia/Ulan_Bator\"\n  | \"Asia/Urumqi\"\n  | \"Asia/Ust-Nera\"\n  | \"Asia/Vientiane\"\n  | \"Asia/Vladivostok\"\n  | \"Asia/Yakutsk\"\n  | \"Asia/Yangon\"\n  | \"Asia/Yekaterinburg\"\n  | \"Asia/Yerevan\"\n  | \"Atlantic/Azores\"\n  | \"Atlantic/Bermuda\"\n  | \"Atlantic/Canary\"\n  | \"Atlantic/Cape_Verde\"\n  | \"Atlantic/Faeroe\"\n  | \"Atlantic/Faroe\"\n  | \"Atlantic/Jan_Mayen\"\n  | \"Atlantic/Madeira\"\n  | \"Atlantic/Reykjavik\"\n  | \"Atlantic/South_Georgia\"\n  | \"Atlantic/St_Helena\"\n  | \"Atlantic/Stanley\"\n  | \"Australia/ACT\"\n  | \"Australia/Adelaide\"\n  | \"Australia/Brisbane\"\n  | \"Australia/Broken_Hill\"\n  | \"Australia/Canberra\"\n  | \"Australia/Currie\"\n  | \"Australia/Darwin\"\n  | \"Australia/Eucla\"\n  | \"Australia/Hobart\"\n  | \"Australia/LHI\"\n  | \"Australia/Lindeman\"\n  | \"Australia/Lord_Howe\"\n  | \"Australia/Melbourne\"\n  | \"Australia/NSW\"\n  | \"Australia/North\"\n  | \"Australia/Perth\"\n  | \"Australia/Queensland\"\n  | \"Australia/South\"\n  | \"Australia/Sydney\"\n  | \"Australia/Tasmania\"\n  | \"Australia/Victoria\"\n  | \"Australia/West\"\n  | \"Australia/Yancowinna\"\n  | \"Brazil/Acre\"\n  | \"Brazil/DeNoronha\"\n  | \"Brazil/East\"\n  | \"Brazil/West\"\n  | \"CET\"\n  | \"CST6CDT\"\n  | \"Canada/Atlantic\"\n  | \"Canada/Central\"\n  | \"Canada/Eastern\"\n  | \"Canada/Mountain\"\n  | \"Canada/Newfoundland\"\n  | \"Canada/Pacific\"\n  | \"Canada/Saskatchewan\"\n  | \"Canada/Yukon\"\n  | \"Chile/Continental\"\n  | \"Chile/EasterIsland\"\n  | \"Cuba\"\n  | \"EET\"\n  | \"EST\"\n  | \"EST5EDT\"\n  | \"Egypt\"\n  | \"Eire\"\n  | \"Etc/GMT\"\n  | \"Etc/GMT+0\"\n  | \"Etc/GMT+1\"\n  | \"Etc/GMT+10\"\n  | \"Etc/GMT+11\"\n  | \"Etc/GMT+12\"\n  | \"Etc/GMT+2\"\n  | \"Etc/GMT+3\"\n  | \"Etc/GMT+4\"\n  | \"Etc/GMT+5\"\n  | \"Etc/GMT+6\"\n  | \"Etc/GMT+7\"\n  | \"Etc/GMT+8\"\n  | \"Etc/GMT+9\"\n  | \"Etc/GMT-0\"\n  | \"Etc/GMT-1\"\n  | \"Etc/GMT-10\"\n  | \"Etc/GMT-11\"\n  | \"Etc/GMT-12\"\n  | \"Etc/GMT-13\"\n  | \"Etc/GMT-14\"\n  | \"Etc/GMT-2\"\n  | \"Etc/GMT-3\"\n  | \"Etc/GMT-4\"\n  | \"Etc/GMT-5\"\n  | \"Etc/GMT-6\"\n  | \"Etc/GMT-7\"\n  | \"Etc/GMT-8\"\n  | \"Etc/GMT-9\"\n  | \"Etc/GMT0\"\n  | \"Etc/Greenwich\"\n  | \"Etc/UCT\"\n  | \"Etc/UTC\"\n  | \"Etc/Universal\"\n  | \"Etc/Zulu\"\n  | \"Europe/Amsterdam\"\n  | \"Europe/Andorra\"\n  | \"Europe/Astrakhan\"\n  | \"Europe/Athens\"\n  | \"Europe/Belfast\"\n  | \"Europe/Belgrade\"\n  | \"Europe/Berlin\"\n  | \"Europe/Bratislava\"\n  | \"Europe/Brussels\"\n  | \"Europe/Bucharest\"\n  | \"Europe/Budapest\"\n  | \"Europe/Busingen\"\n  | \"Europe/Chisinau\"\n  | \"Europe/Copenhagen\"\n  | \"Europe/Dublin\"\n  | \"Europe/Gibraltar\"\n  | \"Europe/Guernsey\"\n  | \"Europe/Helsinki\"\n  | \"Europe/Isle_of_Man\"\n  | \"Europe/Istanbul\"\n  | \"Europe/Jersey\"\n  | \"Europe/Kaliningrad\"\n  | \"Europe/Kiev\"\n  | \"Europe/Kirov\"\n  | \"Europe/Kyiv\"\n  | \"Europe/Lisbon\"\n  | \"Europe/Ljubljana\"\n  | \"Europe/London\"\n  | \"Europe/Luxembourg\"\n  | \"Europe/Madrid\"\n  | \"Europe/Malta\"\n  | \"Europe/Mariehamn\"\n  | \"Europe/Minsk\"\n  | \"Europe/Monaco\"\n  | \"Europe/Moscow\"\n  | \"Europe/Nicosia\"\n  | \"Europe/Oslo\"\n  | \"Europe/Paris\"\n  | \"Europe/Podgorica\"\n  | \"Europe/Prague\"\n  | \"Europe/Riga\"\n  | \"Europe/Rome\"\n  | \"Europe/Samara\"\n  | \"Europe/San_Marino\"\n  | \"Europe/Sarajevo\"\n  | \"Europe/Saratov\"\n  | \"Europe/Simferopol\"\n  | \"Europe/Skopje\"\n  | \"Europe/Sofia\"\n  | \"Europe/Stockholm\"\n  | \"Europe/Tallinn\"\n  | \"Europe/Tirane\"\n  | \"Europe/Tiraspol\"\n  | \"Europe/Ulyanovsk\"\n  | \"Europe/Uzhgorod\"\n  | \"Europe/Vaduz\"\n  | \"Europe/Vatican\"\n  | \"Europe/Vienna\"\n  | \"Europe/Vilnius\"\n  | \"Europe/Volgograd\"\n  | \"Europe/Warsaw\"\n  | \"Europe/Zagreb\"\n  | \"Europe/Zaporozhye\"\n  | \"Europe/Zurich\"\n  | \"GB\"\n  | \"GB-Eire\"\n  | \"GMT\"\n  | \"GMT+0\"\n  | \"GMT-0\"\n  | \"GMT0\"\n  | \"Greenwich\"\n  | \"HST\"\n  | \"Hongkong\"\n  | \"Iceland\"\n  | \"Indian/Antananarivo\"\n  | \"Indian/Chagos\"\n  | \"Indian/Christmas\"\n  | \"Indian/Cocos\"\n  | \"Indian/Comoro\"\n  | \"Indian/Kerguelen\"\n  | \"Indian/Mahe\"\n  | \"Indian/Maldives\"\n  | \"Indian/Mauritius\"\n  | \"Indian/Mayotte\"\n  | \"Indian/Reunion\"\n  | \"Iran\"\n  | \"Israel\"\n  | \"Jamaica\"\n  | \"Japan\"\n  | \"Kwajalein\"\n  | \"Libya\"\n  | \"MET\"\n  | \"MST\"\n  | \"MST7MDT\"\n  | \"Mexico/BajaNorte\"\n  | \"Mexico/BajaSur\"\n  | \"Mexico/General\"\n  | \"NZ\"\n  | \"NZ-CHAT\"\n  | \"Navajo\"\n  | \"PRC\"\n  | \"PST8PDT\"\n  | \"Pacific/Apia\"\n  | \"Pacific/Auckland\"\n  | \"Pacific/Bougainville\"\n  | \"Pacific/Chatham\"\n  | \"Pacific/Chuuk\"\n  | \"Pacific/Easter\"\n  | \"Pacific/Efate\"\n  | \"Pacific/Enderbury\"\n  | \"Pacific/Fakaofo\"\n  | \"Pacific/Fiji\"\n  | \"Pacific/Funafuti\"\n  | \"Pacific/Galapagos\"\n  | \"Pacific/Gambier\"\n  | \"Pacific/Guadalcanal\"\n  | \"Pacific/Guam\"\n  | \"Pacific/Honolulu\"\n  | \"Pacific/Johnston\"\n  | \"Pacific/Kanton\"\n  | \"Pacific/Kiritimati\"\n  | \"Pacific/Kosrae\"\n  | \"Pacific/Kwajalein\"\n  | \"Pacific/Majuro\"\n  | \"Pacific/Marquesas\"\n  | \"Pacific/Midway\"\n  | \"Pacific/Nauru\"\n  | \"Pacific/Niue\"\n  | \"Pacific/Norfolk\"\n  | \"Pacific/Noumea\"\n  | \"Pacific/Pago_Pago\"\n  | \"Pacific/Palau\"\n  | \"Pacific/Pitcairn\"\n  | \"Pacific/Pohnpei\"\n  | \"Pacific/Ponape\"\n  | \"Pacific/Port_Moresby\"\n  | \"Pacific/Rarotonga\"\n  | \"Pacific/Saipan\"\n  | \"Pacific/Samoa\"\n  | \"Pacific/Tahiti\"\n  | \"Pacific/Tarawa\"\n  | \"Pacific/Tongatapu\"\n  | \"Pacific/Truk\"\n  | \"Pacific/Wake\"\n  | \"Pacific/Wallis\"\n  | \"Pacific/Yap\"\n  | \"Poland\"\n  | \"Portugal\"\n  | \"ROC\"\n  | \"ROK\"\n  | \"Singapore\"\n  | \"Turkey\"\n  | \"UCT\"\n  | \"US/Alaska\"\n  | \"US/Aleutian\"\n  | \"US/Arizona\"\n  | \"US/Central\"\n  | \"US/East-Indiana\"\n  | \"US/Eastern\"\n  | \"US/Hawaii\"\n  | \"US/Indiana-Starke\"\n  | \"US/Michigan\"\n  | \"US/Mountain\"\n  | \"US/Pacific\"\n  | \"US/Pacific-New\"\n  | \"US/Samoa\"\n  | \"UTC\"\n  | \"Universal\"\n  | \"W-SU\"\n  | \"WET\"\n  | \"Zulu\"\n\ntype DateResponse = {\n  // The start date of the date object.\n  start: string\n  // The end date of the date object, if any.\n  end: string | null\n  // The time zone of the date object.\n  time_zone: TimeZoneRequest | null\n}\n\ntype InternalFileResponse = {\n  // The URL of the file.\n  url: string\n  // The time when the URL will expire.\n  expiry_time: string\n}\n\ntype StringRequest = string\n\ntype TextRequest = string\n\ntype StringFormulaPropertyResponse = { type: \"string\"; string: string | null }\n\ntype DateFormulaPropertyResponse = { type: \"date\"; date: DateResponse | null }\n\ntype NumberFormulaPropertyResponse = { type: \"number\"; number: number | null }\n\ntype BooleanFormulaPropertyResponse = {\n  type: \"boolean\"\n  boolean: boolean | null\n}\n\ntype FormulaPropertyResponse =\n  | StringFormulaPropertyResponse\n  | DateFormulaPropertyResponse\n  | NumberFormulaPropertyResponse\n  | BooleanFormulaPropertyResponse\n\ntype VerificationPropertyUnverifiedResponse = {\n  state: \"unverified\"\n  date: null\n  verified_by: null\n}\n\ntype PartialUserObjectRequest = {\n  // The ID of the user.\n  id: IdRequest\n  // The user object type name.\n  object?: \"user\"\n}\n\ntype VerificationPropertyResponse = {\n  state: \"verified\" | \"expired\"\n  date: DateResponse | null\n  verified_by: PartialUserObjectRequest | null\n}\n\ntype AnnotationResponse = {\n  bold: boolean\n  italic: boolean\n  strikethrough: boolean\n  underline: boolean\n  code: boolean\n  color: ApiColor\n}\n\nexport type TextRichTextItemResponse = {\n  // Always `text`\n  type: \"text\"\n  // If a rich text object's type value is `text`, then the corresponding text field\n  // contains an object including the text content and any inline link.\n  text: {\n    // The actual text content of the text.\n    content: string\n    // An object with information about any inline link in this text, if included.\n    link: {\n      // The URL of the link.\n      url: string\n    } | null\n  }\n}\n\ntype LinkPreviewMentionResponse = {\n  // The URL of the link preview mention.\n  url: string\n}\n\ntype LinkMentionResponse = {\n  // The href of the link mention.\n  href: string\n  // The title of the link.\n  title?: string\n  // The description of the link.\n  description?: string\n  // The author of the link.\n  link_author?: string\n  // The provider of the link.\n  link_provider?: string\n  // The thumbnail URL of the link.\n  thumbnail_url?: string\n  // The icon URL of the link.\n  icon_url?: string\n  // The iframe URL of the link.\n  iframe_url?: string\n  // The height of the link preview iframe.\n  height?: number\n  // The padding of the link preview iframe.\n  padding?: number\n  // The top padding of the link preview iframe.\n  padding_top?: number\n}\n\ntype TemplateMentionDateTemplateMentionResponse = {\n  // Always `template_mention_date`\n  type: \"template_mention_date\"\n  // The date of the template mention.\n  template_mention_date: \"today\" | \"now\"\n}\n\ntype TemplateMentionUserTemplateMentionResponse = {\n  // Always `template_mention_user`\n  type: \"template_mention_user\"\n  // The user of the template mention.\n  template_mention_user: \"me\"\n}\n\ntype TemplateMentionResponse =\n  | TemplateMentionDateTemplateMentionResponse\n  | TemplateMentionUserTemplateMentionResponse\n\ntype CustomEmojiResponse = {\n  // The ID of the custom emoji.\n  id: IdResponse\n  // The name of the custom emoji.\n  name: string\n  // The URL of the custom emoji.\n  url: string\n}\n\nexport type MentionRichTextItemResponse = {\n  // Always `mention`\n  type: \"mention\"\n  // Mention objects represent an inline mention of a database, date, link preview mention,\n  // page, template mention, or user. A mention is created in the Notion UI when a user\n  // types `@` followed by the name of the reference.\n  mention:\n    | {\n        // Always `user`\n        type: \"user\"\n        // Details of the user mention.\n        user: PartialUserObjectResponse | UserObjectResponse\n      }\n    | {\n        // Always `date`\n        type: \"date\"\n        // Details of the date mention.\n        date: DateResponse\n      }\n    | {\n        // Always `link_preview`\n        type: \"link_preview\"\n        // Details of the link preview mention.\n        link_preview: LinkPreviewMentionResponse\n      }\n    | {\n        // Always `link_mention`\n        type: \"link_mention\"\n        // Details of the link mention.\n        link_mention: LinkMentionResponse\n      }\n    | {\n        // Always `page`\n        type: \"page\"\n        // Details of the page mention.\n        page: {\n          // The ID of the page in the mention.\n          id: IdResponse\n        }\n      }\n    | {\n        // Always `database`\n        type: \"database\"\n        // Details of the database mention.\n        database: {\n          // The ID of the database in the mention.\n          id: IdResponse\n        }\n      }\n    | {\n        // Always `template_mention`\n        type: \"template_mention\"\n        // Details of the template mention.\n        template_mention: TemplateMentionResponse\n      }\n    | {\n        // Always `custom_emoji`\n        type: \"custom_emoji\"\n        // Details of the custom emoji mention.\n        custom_emoji: CustomEmojiResponse\n      }\n}\n\nexport type EquationRichTextItemResponse = {\n  // Always `equation`\n  type: \"equation\"\n  // Notion supports inline LaTeX equations as rich text objects with a type value of\n  // `equation`.\n  equation: {\n    // A KaTeX compatible string.\n    expression: string\n  }\n}\n\nexport type RichTextItemResponse = RichTextItemResponseCommon &\n  (\n    | TextRichTextItemResponse\n    | MentionRichTextItemResponse\n    | EquationRichTextItemResponse\n  )\n\ntype RollupFunction =\n  | \"count\"\n  | \"count_values\"\n  | \"empty\"\n  | \"not_empty\"\n  | \"unique\"\n  | \"show_unique\"\n  | \"percent_empty\"\n  | \"percent_not_empty\"\n  | \"sum\"\n  | \"average\"\n  | \"median\"\n  | \"min\"\n  | \"max\"\n  | \"range\"\n  | \"earliest_date\"\n  | \"latest_date\"\n  | \"date_range\"\n  | \"checked\"\n  | \"unchecked\"\n  | \"percent_checked\"\n  | \"percent_unchecked\"\n  | \"count_per_group\"\n  | \"percent_per_group\"\n  | \"show_original\"\n\ntype EmojiRequest =\n  | \"😀\"\n  | \"😃\"\n  | \"😄\"\n  | \"😁\"\n  | \"😆\"\n  | \"😅\"\n  | \"🤣\"\n  | \"😂\"\n  | \"🙂\"\n  | \"🙃\"\n  | \"🫠\"\n  | \"😉\"\n  | \"😊\"\n  | \"😇\"\n  | \"🥰\"\n  | \"😍\"\n  | \"🤩\"\n  | \"😘\"\n  | \"😗\"\n  | \"☺️\"\n  | \"☺\"\n  | \"😚\"\n  | \"😙\"\n  | \"🥲\"\n  | \"😋\"\n  | \"😛\"\n  | \"😜\"\n  | \"🤪\"\n  | \"😝\"\n  | \"🤑\"\n  | \"🤗\"\n  | \"🤭\"\n  | \"🫢\"\n  | \"🫣\"\n  | \"🤫\"\n  | \"🤔\"\n  | \"🫡\"\n  | \"🤐\"\n  | \"🤨\"\n  | \"😐\"\n  | \"😑\"\n  | \"😶\"\n  | \"🫥\"\n  | \"😶‍🌫️\"\n  | \"😶‍🌫\"\n  | \"😏\"\n  | \"😒\"\n  | \"🙄\"\n  | \"😬\"\n  | \"😮‍💨\"\n  | \"🤥\"\n  | \"😌\"\n  | \"😔\"\n  | \"😪\"\n  | \"🤤\"\n  | \"😴\"\n  | \"😷\"\n  | \"🤒\"\n  | \"🤕\"\n  | \"🤢\"\n  | \"🤮\"\n  | \"🤧\"\n  | \"🥵\"\n  | \"🥶\"\n  | \"🥴\"\n  | \"😵\"\n  | \"😵‍💫\"\n  | \"🤯\"\n  | \"🤠\"\n  | \"🥳\"\n  | \"🥸\"\n  | \"😎\"\n  | \"🤓\"\n  | \"🧐\"\n  | \"😕\"\n  | \"🫤\"\n  | \"😟\"\n  | \"🙁\"\n  | \"☹️\"\n  | \"☹\"\n  | \"😮\"\n  | \"😯\"\n  | \"😲\"\n  | \"😳\"\n  | \"🥺\"\n  | \"🥹\"\n  | \"😦\"\n  | \"😧\"\n  | \"😨\"\n  | \"😰\"\n  | \"😥\"\n  | \"😢\"\n  | \"😭\"\n  | \"😱\"\n  | \"😖\"\n  | \"😣\"\n  | \"😞\"\n  | \"😓\"\n  | \"😩\"\n  | \"😫\"\n  | \"🥱\"\n  | \"😤\"\n  | \"😡\"\n  | \"😠\"\n  | \"🤬\"\n  | \"😈\"\n  | \"👿\"\n  | \"💀\"\n  | \"☠️\"\n  | \"☠\"\n  | \"💩\"\n  | \"🤡\"\n  | \"👹\"\n  | \"👺\"\n  | \"👻\"\n  | \"👽\"\n  | \"👾\"\n  | \"🤖\"\n  | \"😺\"\n  | \"😸\"\n  | \"😹\"\n  | \"😻\"\n  | \"😼\"\n  | \"😽\"\n  | \"🙀\"\n  | \"😿\"\n  | \"😾\"\n  | \"🙈\"\n  | \"🙉\"\n  | \"🙊\"\n  | \"💋\"\n  | \"💌\"\n  | \"💘\"\n  | \"💝\"\n  | \"💖\"\n  | \"💗\"\n  | \"💓\"\n  | \"💞\"\n  | \"💕\"\n  | \"💟\"\n  | \"❣️\"\n  | \"❣\"\n  | \"💔\"\n  | \"❤️‍🔥\"\n  | \"❤‍🔥\"\n  | \"❤️‍🩹\"\n  | \"❤‍🩹\"\n  | \"❤️\"\n  | \"❤\"\n  | \"🧡\"\n  | \"💛\"\n  | \"💚\"\n  | \"💙\"\n  | \"💜\"\n  | \"🤎\"\n  | \"🖤\"\n  | \"🤍\"\n  | \"💯\"\n  | \"💢\"\n  | \"💥\"\n  | \"💫\"\n  | \"💦\"\n  | \"💨\"\n  | \"🕳️\"\n  | \"🕳\"\n  | \"💣\"\n  | \"💬\"\n  | \"👁️‍🗨️\"\n  | \"🗨️\"\n  | \"🗨\"\n  | \"🗯️\"\n  | \"🗯\"\n  | \"💭\"\n  | \"💤\"\n  | \"👋🏻\"\n  | \"👋🏼\"\n  | \"👋🏽\"\n  | \"👋🏾\"\n  | \"👋🏿\"\n  | \"👋\"\n  | \"🤚🏻\"\n  | \"🤚🏼\"\n  | \"🤚🏽\"\n  | \"🤚🏾\"\n  | \"🤚🏿\"\n  | \"🤚\"\n  | \"🖐🏻\"\n  | \"🖐🏼\"\n  | \"🖐🏽\"\n  | \"🖐🏾\"\n  | \"🖐🏿\"\n  | \"🖐️\"\n  | \"🖐\"\n  | \"✋🏻\"\n  | \"✋🏼\"\n  | \"✋🏽\"\n  | \"✋🏾\"\n  | \"✋🏿\"\n  | \"✋\"\n  | \"🖖🏻\"\n  | \"🖖🏼\"\n  | \"🖖🏽\"\n  | \"🖖🏾\"\n  | \"🖖🏿\"\n  | \"🖖\"\n  | \"🫱🏻\"\n  | \"🫱🏼\"\n  | \"🫱🏽\"\n  | \"🫱🏾\"\n  | \"🫱🏿\"\n  | \"🫱\"\n  | \"🫲🏻\"\n  | \"🫲🏼\"\n  | \"🫲🏽\"\n  | \"🫲🏾\"\n  | \"🫲🏿\"\n  | \"🫲\"\n  | \"🫳🏻\"\n  | \"🫳🏼\"\n  | \"🫳🏽\"\n  | \"🫳🏾\"\n  | \"🫳🏿\"\n  | \"🫳\"\n  | \"🫴🏻\"\n  | \"🫴🏼\"\n  | \"🫴🏽\"\n  | \"🫴🏾\"\n  | \"🫴🏿\"\n  | \"🫴\"\n  | \"👌🏻\"\n  | \"👌🏼\"\n  | \"👌🏽\"\n  | \"👌🏾\"\n  | \"👌🏿\"\n  | \"👌\"\n  | \"🤌🏻\"\n  | \"🤌🏼\"\n  | \"🤌🏽\"\n  | \"🤌🏾\"\n  | \"🤌🏿\"\n  | \"🤌\"\n  | \"🤏🏻\"\n  | \"🤏🏼\"\n  | \"🤏🏽\"\n  | \"🤏🏾\"\n  | \"🤏🏿\"\n  | \"🤏\"\n  | \"✌🏻\"\n  | \"✌🏼\"\n  | \"✌🏽\"\n  | \"✌🏾\"\n  | \"✌🏿\"\n  | \"✌️\"\n  | \"✌\"\n  | \"🤞🏻\"\n  | \"🤞🏼\"\n  | \"🤞🏽\"\n  | \"🤞🏾\"\n  | \"🤞🏿\"\n  | \"🤞\"\n  | \"🫰🏻\"\n  | \"🫰🏼\"\n  | \"🫰🏽\"\n  | \"🫰🏾\"\n  | \"🫰🏿\"\n  | \"🫰\"\n  | \"🤟🏻\"\n  | \"🤟🏼\"\n  | \"🤟🏽\"\n  | \"🤟🏾\"\n  | \"🤟🏿\"\n  | \"🤟\"\n  | \"🤘🏻\"\n  | \"🤘🏼\"\n  | \"🤘🏽\"\n  | \"🤘🏾\"\n  | \"🤘🏿\"\n  | \"🤘\"\n  | \"🤙🏻\"\n  | \"🤙🏼\"\n  | \"🤙🏽\"\n  | \"🤙🏾\"\n  | \"🤙🏿\"\n  | \"🤙\"\n  | \"👈🏻\"\n  | \"👈🏼\"\n  | \"👈🏽\"\n  | \"👈🏾\"\n  | \"👈🏿\"\n  | \"👈\"\n  | \"👉🏻\"\n  | \"👉🏼\"\n  | \"👉🏽\"\n  | \"👉🏾\"\n  | \"👉🏿\"\n  | \"👉\"\n  | \"👆🏻\"\n  | \"👆🏼\"\n  | \"👆🏽\"\n  | \"👆🏾\"\n  | \"👆🏿\"\n  | \"👆\"\n  | \"🖕🏻\"\n  | \"🖕🏼\"\n  | \"🖕🏽\"\n  | \"🖕🏾\"\n  | \"🖕🏿\"\n  | \"🖕\"\n  | \"👇🏻\"\n  | \"👇🏼\"\n  | \"👇🏽\"\n  | \"👇🏾\"\n  | \"👇🏿\"\n  | \"👇\"\n  | \"☝🏻\"\n  | \"☝🏼\"\n  | \"☝🏽\"\n  | \"☝🏾\"\n  | \"☝🏿\"\n  | \"☝️\"\n  | \"☝\"\n  | \"🫵🏻\"\n  | \"🫵🏼\"\n  | \"🫵🏽\"\n  | \"🫵🏾\"\n  | \"🫵🏿\"\n  | \"🫵\"\n  | \"👍🏻\"\n  | \"👍🏼\"\n  | \"👍🏽\"\n  | \"👍🏾\"\n  | \"👍🏿\"\n  | \"👍\"\n  | \"👎🏻\"\n  | \"👎🏼\"\n  | \"👎🏽\"\n  | \"👎🏾\"\n  | \"👎🏿\"\n  | \"👎\"\n  | \"✊🏻\"\n  | \"✊🏼\"\n  | \"✊🏽\"\n  | \"✊🏾\"\n  | \"✊🏿\"\n  | \"✊\"\n  | \"👊🏻\"\n  | \"👊🏼\"\n  | \"👊🏽\"\n  | \"👊🏾\"\n  | \"👊🏿\"\n  | \"👊\"\n  | \"🤛🏻\"\n  | \"🤛🏼\"\n  | \"🤛🏽\"\n  | \"🤛🏾\"\n  | \"🤛🏿\"\n  | \"🤛\"\n  | \"🤜🏻\"\n  | \"🤜🏼\"\n  | \"🤜🏽\"\n  | \"🤜🏾\"\n  | \"🤜🏿\"\n  | \"🤜\"\n  | \"👏🏻\"\n  | \"👏🏼\"\n  | \"👏🏽\"\n  | \"👏🏾\"\n  | \"👏🏿\"\n  | \"👏\"\n  | \"🙌🏻\"\n  | \"🙌🏼\"\n  | \"🙌🏽\"\n  | \"🙌🏾\"\n  | \"🙌🏿\"\n  | \"🙌\"\n  | \"🫶🏻\"\n  | \"🫶🏼\"\n  | \"🫶🏽\"\n  | \"🫶🏾\"\n  | \"🫶🏿\"\n  | \"🫶\"\n  | \"👐🏻\"\n  | \"👐🏼\"\n  | \"👐🏽\"\n  | \"👐🏾\"\n  | \"👐🏿\"\n  | \"👐\"\n  | \"🤲🏻\"\n  | \"🤲🏼\"\n  | \"🤲🏽\"\n  | \"🤲🏾\"\n  | \"🤲🏿\"\n  | \"🤲\"\n  | \"🤝🏻\"\n  | \"🤝🏼\"\n  | \"🤝🏽\"\n  | \"🤝🏾\"\n  | \"🤝🏿\"\n  | \"🫱🏻‍🫲🏼\"\n  | \"🫱🏻‍🫲🏽\"\n  | \"🫱🏻‍🫲🏾\"\n  | \"🫱🏻‍🫲🏿\"\n  | \"🫱🏼‍🫲🏻\"\n  | \"🫱🏼‍🫲🏽\"\n  | \"🫱🏼‍🫲🏾\"\n  | \"🫱🏼‍🫲🏿\"\n  | \"🫱🏽‍🫲🏻\"\n  | \"🫱🏽‍🫲🏼\"\n  | \"🫱🏽‍🫲🏾\"\n  | \"🫱🏽‍🫲🏿\"\n  | \"🫱🏾‍🫲🏻\"\n  | \"🫱🏾‍🫲🏼\"\n  | \"🫱🏾‍🫲🏽\"\n  | \"🫱🏾‍🫲🏿\"\n  | \"🫱🏿‍🫲🏻\"\n  | \"🫱🏿‍🫲🏼\"\n  | \"🫱🏿‍🫲🏽\"\n  | \"🫱🏿‍🫲🏾\"\n  | \"🤝\"\n  | \"🙏🏻\"\n  | \"🙏🏼\"\n  | \"🙏🏽\"\n  | \"🙏🏾\"\n  | \"🙏🏿\"\n  | \"🙏\"\n  | \"✍🏻\"\n  | \"✍🏼\"\n  | \"✍🏽\"\n  | \"✍🏾\"\n  | \"✍🏿\"\n  | \"✍️\"\n  | \"✍\"\n  | \"💅🏻\"\n  | \"💅🏼\"\n  | \"💅🏽\"\n  | \"💅🏾\"\n  | \"💅🏿\"\n  | \"💅\"\n  | \"🤳🏻\"\n  | \"🤳🏼\"\n  | \"🤳🏽\"\n  | \"🤳🏾\"\n  | \"🤳🏿\"\n  | \"🤳\"\n  | \"💪🏻\"\n  | \"💪🏼\"\n  | \"💪🏽\"\n  | \"💪🏾\"\n  | \"💪🏿\"\n  | \"💪\"\n  | \"🦾\"\n  | \"🦿\"\n  | \"🦵🏻\"\n  | \"🦵🏼\"\n  | \"🦵🏽\"\n  | \"🦵🏾\"\n  | \"🦵🏿\"\n  | \"🦵\"\n  | \"🦶🏻\"\n  | \"🦶🏼\"\n  | \"🦶🏽\"\n  | \"🦶🏾\"\n  | \"🦶🏿\"\n  | \"🦶\"\n  | \"👂🏻\"\n  | \"👂🏼\"\n  | \"👂🏽\"\n  | \"👂🏾\"\n  | \"👂🏿\"\n  | \"👂\"\n  | \"🦻🏻\"\n  | \"🦻🏼\"\n  | \"🦻🏽\"\n  | \"🦻🏾\"\n  | \"🦻🏿\"\n  | \"🦻\"\n  | \"👃🏻\"\n  | \"👃🏼\"\n  | \"👃🏽\"\n  | \"👃🏾\"\n  | \"👃🏿\"\n  | \"👃\"\n  | \"🧠\"\n  | \"🫀\"\n  | \"🫁\"\n  | \"🦷\"\n  | \"🦴\"\n  | \"👀\"\n  | \"👁️\"\n  | \"👁\"\n  | \"👅\"\n  | \"👄\"\n  | \"🫦\"\n  | \"👶🏻\"\n  | \"👶🏼\"\n  | \"👶🏽\"\n  | \"👶🏾\"\n  | \"👶🏿\"\n  | \"👶\"\n  | \"🧒🏻\"\n  | \"🧒🏼\"\n  | \"🧒🏽\"\n  | \"🧒🏾\"\n  | \"🧒🏿\"\n  | \"🧒\"\n  | \"👦🏻\"\n  | \"👦🏼\"\n  | \"👦🏽\"\n  | \"👦🏾\"\n  | \"👦🏿\"\n  | \"👦\"\n  | \"👧🏻\"\n  | \"👧🏼\"\n  | \"👧🏽\"\n  | \"👧🏾\"\n  | \"👧🏿\"\n  | \"👧\"\n  | \"🧑🏻\"\n  | \"🧑🏼\"\n  | \"🧑🏽\"\n  | \"🧑🏾\"\n  | \"🧑🏿\"\n  | \"🧑\"\n  | \"👱🏻\"\n  | \"👱🏼\"\n  | \"👱🏽\"\n  | \"👱🏾\"\n  | \"👱🏿\"\n  | \"👱\"\n  | \"👨🏻\"\n  | \"👨🏼\"\n  | \"👨🏽\"\n  | \"👨🏾\"\n  | \"👨🏿\"\n  | \"👨\"\n  | \"🧔🏻\"\n  | \"🧔🏼\"\n  | \"🧔🏽\"\n  | \"🧔🏾\"\n  | \"🧔🏿\"\n  | \"🧔\"\n  | \"🧔🏻‍♂️\"\n  | \"🧔🏼‍♂️\"\n  | \"🧔🏽‍♂️\"\n  | \"🧔🏾‍♂️\"\n  | \"🧔🏿‍♂️\"\n  | \"🧔‍♂️\"\n  | \"🧔‍♂\"\n  | \"🧔🏻‍♀️\"\n  | \"🧔🏼‍♀️\"\n  | \"🧔🏽‍♀️\"\n  | \"🧔🏾‍♀️\"\n  | \"🧔🏿‍♀️\"\n  | \"🧔‍♀️\"\n  | \"🧔‍♀\"\n  | \"👨🏻‍🦰\"\n  | \"👨🏼‍🦰\"\n  | \"👨🏽‍🦰\"\n  | \"👨🏾‍🦰\"\n  | \"👨🏿‍🦰\"\n  | \"👨‍🦰\"\n  | \"👨🏻‍🦱\"\n  | \"👨🏼‍🦱\"\n  | \"👨🏽‍🦱\"\n  | \"👨🏾‍🦱\"\n  | \"👨🏿‍🦱\"\n  | \"👨‍🦱\"\n  | \"👨🏻‍🦳\"\n  | \"👨🏼‍🦳\"\n  | \"👨🏽‍🦳\"\n  | \"👨🏾‍🦳\"\n  | \"👨🏿‍🦳\"\n  | \"👨‍🦳\"\n  | \"👨🏻‍🦲\"\n  | \"👨🏼‍🦲\"\n  | \"👨🏽‍🦲\"\n  | \"👨🏾‍🦲\"\n  | \"👨🏿‍🦲\"\n  | \"👨‍🦲\"\n  | \"👩🏻\"\n  | \"👩🏼\"\n  | \"👩🏽\"\n  | \"👩🏾\"\n  | \"👩🏿\"\n  | \"👩\"\n  | \"👩🏻‍🦰\"\n  | \"👩🏼‍🦰\"\n  | \"👩🏽‍🦰\"\n  | \"👩🏾‍🦰\"\n  | \"👩🏿‍🦰\"\n  | \"👩‍🦰\"\n  | \"🧑🏻‍🦰\"\n  | \"🧑🏼‍🦰\"\n  | \"🧑🏽‍🦰\"\n  | \"🧑🏾‍🦰\"\n  | \"🧑🏿‍🦰\"\n  | \"🧑‍🦰\"\n  | \"👩🏻‍🦱\"\n  | \"👩🏼‍🦱\"\n  | \"👩🏽‍🦱\"\n  | \"👩🏾‍🦱\"\n  | \"👩🏿‍🦱\"\n  | \"👩‍🦱\"\n  | \"🧑🏻‍🦱\"\n  | \"🧑🏼‍🦱\"\n  | \"🧑🏽‍🦱\"\n  | \"🧑🏾‍🦱\"\n  | \"🧑🏿‍🦱\"\n  | \"🧑‍🦱\"\n  | \"👩🏻‍🦳\"\n  | \"👩🏼‍🦳\"\n  | \"👩🏽‍🦳\"\n  | \"👩🏾‍🦳\"\n  | \"👩🏿‍🦳\"\n  | \"👩‍🦳\"\n  | \"🧑🏻‍🦳\"\n  | \"🧑🏼‍🦳\"\n  | \"🧑🏽‍🦳\"\n  | \"🧑🏾‍🦳\"\n  | \"🧑🏿‍🦳\"\n  | \"🧑‍🦳\"\n  | \"👩🏻‍🦲\"\n  | \"👩🏼‍🦲\"\n  | \"👩🏽‍🦲\"\n  | \"👩🏾‍🦲\"\n  | \"👩🏿‍🦲\"\n  | \"👩‍🦲\"\n  | \"🧑🏻‍🦲\"\n  | \"🧑🏼‍🦲\"\n  | \"🧑🏽‍🦲\"\n  | \"🧑🏾‍🦲\"\n  | \"🧑🏿‍🦲\"\n  | \"🧑‍🦲\"\n  | \"👱🏻‍♀️\"\n  | \"👱🏼‍♀️\"\n  | \"👱🏽‍♀️\"\n  | \"👱🏾‍♀️\"\n  | \"👱🏿‍♀️\"\n  | \"👱‍♀️\"\n  | \"👱‍♀\"\n  | \"👱🏻‍♂️\"\n  | \"👱🏼‍♂️\"\n  | \"👱🏽‍♂️\"\n  | \"👱🏾‍♂️\"\n  | \"👱🏿‍♂️\"\n  | \"👱‍♂️\"\n  | \"👱‍♂\"\n  | \"🧓🏻\"\n  | \"🧓🏼\"\n  | \"🧓🏽\"\n  | \"🧓🏾\"\n  | \"🧓🏿\"\n  | \"🧓\"\n  | \"👴🏻\"\n  | \"👴🏼\"\n  | \"👴🏽\"\n  | \"👴🏾\"\n  | \"👴🏿\"\n  | \"👴\"\n  | \"👵🏻\"\n  | \"👵🏼\"\n  | \"👵🏽\"\n  | \"👵🏾\"\n  | \"👵🏿\"\n  | \"👵\"\n  | \"🙍🏻\"\n  | \"🙍🏼\"\n  | \"🙍🏽\"\n  | \"🙍🏾\"\n  | \"🙍🏿\"\n  | \"🙍\"\n  | \"🙍🏻‍♂️\"\n  | \"🙍🏼‍♂️\"\n  | \"🙍🏽‍♂️\"\n  | \"🙍🏾‍♂️\"\n  | \"🙍🏿‍♂️\"\n  | \"🙍‍♂️\"\n  | \"🙍‍♂\"\n  | \"🙍🏻‍♀️\"\n  | \"🙍🏼‍♀️\"\n  | \"🙍🏽‍♀️\"\n  | \"🙍🏾‍♀️\"\n  | \"🙍🏿‍♀️\"\n  | \"🙍‍♀️\"\n  | \"🙍‍♀\"\n  | \"🙎🏻\"\n  | \"🙎🏼\"\n  | \"🙎🏽\"\n  | \"🙎🏾\"\n  | \"🙎🏿\"\n  | \"🙎\"\n  | \"🙎🏻‍♂️\"\n  | \"🙎🏼‍♂️\"\n  | \"🙎🏽‍♂️\"\n  | \"🙎🏾‍♂️\"\n  | \"🙎🏿‍♂️\"\n  | \"🙎‍♂️\"\n  | \"🙎‍♂\"\n  | \"🙎🏻‍♀️\"\n  | \"🙎🏼‍♀️\"\n  | \"🙎🏽‍♀️\"\n  | \"🙎🏾‍♀️\"\n  | \"🙎🏿‍♀️\"\n  | \"🙎‍♀️\"\n  | \"🙎‍♀\"\n  | \"🙅🏻\"\n  | \"🙅🏼\"\n  | \"🙅🏽\"\n  | \"🙅🏾\"\n  | \"🙅🏿\"\n  | \"🙅\"\n  | \"🙅🏻‍♂️\"\n  | \"🙅🏼‍♂️\"\n  | \"🙅🏽‍♂️\"\n  | \"🙅🏾‍♂️\"\n  | \"🙅🏿‍♂️\"\n  | \"🙅‍♂️\"\n  | \"🙅‍♂\"\n  | \"🙅🏻‍♀️\"\n  | \"🙅🏼‍♀️\"\n  | \"🙅🏽‍♀️\"\n  | \"🙅🏾‍♀️\"\n  | \"🙅🏿‍♀️\"\n  | \"🙅‍♀️\"\n  | \"🙅‍♀\"\n  | \"🙆🏻\"\n  | \"🙆🏼\"\n  | \"🙆🏽\"\n  | \"🙆🏾\"\n  | \"🙆🏿\"\n  | \"🙆\"\n  | \"🙆🏻‍♂️\"\n  | \"🙆🏼‍♂️\"\n  | \"🙆🏽‍♂️\"\n  | \"🙆🏾‍♂️\"\n  | \"🙆🏿‍♂️\"\n  | \"🙆‍♂️\"\n  | \"🙆‍♂\"\n  | \"🙆🏻‍♀️\"\n  | \"🙆🏼‍♀️\"\n  | \"🙆🏽‍♀️\"\n  | \"🙆🏾‍♀️\"\n  | \"🙆🏿‍♀️\"\n  | \"🙆‍♀️\"\n  | \"🙆‍♀\"\n  | \"💁🏻\"\n  | \"💁🏼\"\n  | \"💁🏽\"\n  | \"💁🏾\"\n  | \"💁🏿\"\n  | \"💁\"\n  | \"💁🏻‍♂️\"\n  | \"💁🏼‍♂️\"\n  | \"💁🏽‍♂️\"\n  | \"💁🏾‍♂️\"\n  | \"💁🏿‍♂️\"\n  | \"💁‍♂️\"\n  | \"💁‍♂\"\n  | \"💁🏻‍♀️\"\n  | \"💁🏼‍♀️\"\n  | \"💁🏽‍♀️\"\n  | \"💁🏾‍♀️\"\n  | \"💁🏿‍♀️\"\n  | \"💁‍♀️\"\n  | \"💁‍♀\"\n  | \"🙋🏻\"\n  | \"🙋🏼\"\n  | \"🙋🏽\"\n  | \"🙋🏾\"\n  | \"🙋🏿\"\n  | \"🙋\"\n  | \"🙋🏻‍♂️\"\n  | \"🙋🏼‍♂️\"\n  | \"🙋🏽‍♂️\"\n  | \"🙋🏾‍♂️\"\n  | \"🙋🏿‍♂️\"\n  | \"🙋‍♂️\"\n  | \"🙋‍♂\"\n  | \"🙋🏻‍♀️\"\n  | \"🙋🏼‍♀️\"\n  | \"🙋🏽‍♀️\"\n  | \"🙋🏾‍♀️\"\n  | \"🙋🏿‍♀️\"\n  | \"🙋‍♀️\"\n  | \"🙋‍♀\"\n  | \"🧏🏻\"\n  | \"🧏🏼\"\n  | \"🧏🏽\"\n  | \"🧏🏾\"\n  | \"🧏🏿\"\n  | \"🧏\"\n  | \"🧏🏻‍♂️\"\n  | \"🧏🏼‍♂️\"\n  | \"🧏🏽‍♂️\"\n  | \"🧏🏾‍♂️\"\n  | \"🧏🏿‍♂️\"\n  | \"🧏‍♂️\"\n  | \"🧏‍♂\"\n  | \"🧏🏻‍♀️\"\n  | \"🧏🏼‍♀️\"\n  | \"🧏🏽‍♀️\"\n  | \"🧏🏾‍♀️\"\n  | \"🧏🏿‍♀️\"\n  | \"🧏‍♀️\"\n  | \"🧏‍♀\"\n  | \"🙇🏻\"\n  | \"🙇🏼\"\n  | \"🙇🏽\"\n  | \"🙇🏾\"\n  | \"🙇🏿\"\n  | \"🙇\"\n  | \"🙇🏻‍♂️\"\n  | \"🙇🏼‍♂️\"\n  | \"🙇🏽‍♂️\"\n  | \"🙇🏾‍♂️\"\n  | \"🙇🏿‍♂️\"\n  | \"🙇‍♂️\"\n  | \"🙇‍♂\"\n  | \"🙇🏻‍♀️\"\n  | \"🙇🏼‍♀️\"\n  | \"🙇🏽‍♀️\"\n  | \"🙇🏾‍♀️\"\n  | \"🙇🏿‍♀️\"\n  | \"🙇‍♀️\"\n  | \"🙇‍♀\"\n  | \"🤦🏻\"\n  | \"🤦🏼\"\n  | \"🤦🏽\"\n  | \"🤦🏾\"\n  | \"🤦🏿\"\n  | \"🤦\"\n  | \"🤦🏻‍♂️\"\n  | \"🤦🏼‍♂️\"\n  | \"🤦🏽‍♂️\"\n  | \"🤦🏾‍♂️\"\n  | \"🤦🏿‍♂️\"\n  | \"🤦‍♂️\"\n  | \"🤦‍♂\"\n  | \"🤦🏻‍♀️\"\n  | \"🤦🏼‍♀️\"\n  | \"🤦🏽‍♀️\"\n  | \"🤦🏾‍♀️\"\n  | \"🤦🏿‍♀️\"\n  | \"🤦‍♀️\"\n  | \"🤦‍♀\"\n  | \"🤷🏻\"\n  | \"🤷🏼\"\n  | \"🤷🏽\"\n  | \"🤷🏾\"\n  | \"🤷🏿\"\n  | \"🤷\"\n  | \"🤷🏻‍♂️\"\n  | \"🤷🏼‍♂️\"\n  | \"🤷🏽‍♂️\"\n  | \"🤷🏾‍♂️\"\n  | \"🤷🏿‍♂️\"\n  | \"🤷‍♂️\"\n  | \"🤷‍♂\"\n  | \"🤷🏻‍♀️\"\n  | \"🤷🏼‍♀️\"\n  | \"🤷🏽‍♀️\"\n  | \"🤷🏾‍♀️\"\n  | \"🤷🏿‍♀️\"\n  | \"🤷‍♀️\"\n  | \"🤷‍♀\"\n  | \"🧑🏻‍⚕️\"\n  | \"🧑🏼‍⚕️\"\n  | \"🧑🏽‍⚕️\"\n  | \"🧑🏾‍⚕️\"\n  | \"🧑🏿‍⚕️\"\n  | \"🧑‍⚕️\"\n  | \"🧑‍⚕\"\n  | \"👨🏻‍⚕️\"\n  | \"👨🏼‍⚕️\"\n  | \"👨🏽‍⚕️\"\n  | \"👨🏾‍⚕️\"\n  | \"👨🏿‍⚕️\"\n  | \"👨‍⚕️\"\n  | \"👨‍⚕\"\n  | \"👩🏻‍⚕️\"\n  | \"👩🏼‍⚕️\"\n  | \"👩🏽‍⚕️\"\n  | \"👩🏾‍⚕️\"\n  | \"👩🏿‍⚕️\"\n  | \"👩‍⚕️\"\n  | \"👩‍⚕\"\n  | \"🧑🏻‍🎓\"\n  | \"🧑🏼‍🎓\"\n  | \"🧑🏽‍🎓\"\n  | \"🧑🏾‍🎓\"\n  | \"🧑🏿‍🎓\"\n  | \"🧑‍🎓\"\n  | \"👨🏻‍🎓\"\n  | \"👨🏼‍🎓\"\n  | \"👨🏽‍🎓\"\n  | \"👨🏾‍🎓\"\n  | \"👨🏿‍🎓\"\n  | \"👨‍🎓\"\n  | \"👩🏻‍🎓\"\n  | \"👩🏼‍🎓\"\n  | \"👩🏽‍🎓\"\n  | \"👩🏾‍🎓\"\n  | \"👩🏿‍🎓\"\n  | \"👩‍🎓\"\n  | \"🧑🏻‍🏫\"\n  | \"🧑🏼‍🏫\"\n  | \"🧑🏽‍🏫\"\n  | \"🧑🏾‍🏫\"\n  | \"🧑🏿‍🏫\"\n  | \"🧑‍🏫\"\n  | \"👨🏻‍🏫\"\n  | \"👨🏼‍🏫\"\n  | \"👨🏽‍🏫\"\n  | \"👨🏾‍🏫\"\n  | \"👨🏿‍🏫\"\n  | \"👨‍🏫\"\n  | \"👩🏻‍🏫\"\n  | \"👩🏼‍🏫\"\n  | \"👩🏽‍🏫\"\n  | \"👩🏾‍🏫\"\n  | \"👩🏿‍🏫\"\n  | \"👩‍🏫\"\n  | \"🧑🏻‍⚖️\"\n  | \"🧑🏼‍⚖️\"\n  | \"🧑🏽‍⚖️\"\n  | \"🧑🏾‍⚖️\"\n  | \"🧑🏿‍⚖️\"\n  | \"🧑‍⚖️\"\n  | \"🧑‍⚖\"\n  | \"👨🏻‍⚖️\"\n  | \"👨🏼‍⚖️\"\n  | \"👨🏽‍⚖️\"\n  | \"👨🏾‍⚖️\"\n  | \"👨🏿‍⚖️\"\n  | \"👨‍⚖️\"\n  | \"👨‍⚖\"\n  | \"👩🏻‍⚖️\"\n  | \"👩🏼‍⚖️\"\n  | \"👩🏽‍⚖️\"\n  | \"👩🏾‍⚖️\"\n  | \"👩🏿‍⚖️\"\n  | \"👩‍⚖️\"\n  | \"👩‍⚖\"\n  | \"🧑🏻‍🌾\"\n  | \"🧑🏼‍🌾\"\n  | \"🧑🏽‍🌾\"\n  | \"🧑🏾‍🌾\"\n  | \"🧑🏿‍🌾\"\n  | \"🧑‍🌾\"\n  | \"👨🏻‍🌾\"\n  | \"👨🏼‍🌾\"\n  | \"👨🏽‍🌾\"\n  | \"👨🏾‍🌾\"\n  | \"👨🏿‍🌾\"\n  | \"👨‍🌾\"\n  | \"👩🏻‍🌾\"\n  | \"👩🏼‍🌾\"\n  | \"👩🏽‍🌾\"\n  | \"👩🏾‍🌾\"\n  | \"👩🏿‍🌾\"\n  | \"👩‍🌾\"\n  | \"🧑🏻‍🍳\"\n  | \"🧑🏼‍🍳\"\n  | \"🧑🏽‍🍳\"\n  | \"🧑🏾‍🍳\"\n  | \"🧑🏿‍🍳\"\n  | \"🧑‍🍳\"\n  | \"👨🏻‍🍳\"\n  | \"👨🏼‍🍳\"\n  | \"👨🏽‍🍳\"\n  | \"👨🏾‍🍳\"\n  | \"👨🏿‍🍳\"\n  | \"👨‍🍳\"\n  | \"👩🏻‍🍳\"\n  | \"👩🏼‍🍳\"\n  | \"👩🏽‍🍳\"\n  | \"👩🏾‍🍳\"\n  | \"👩🏿‍🍳\"\n  | \"👩‍🍳\"\n  | \"🧑🏻‍🔧\"\n  | \"🧑🏼‍🔧\"\n  | \"🧑🏽‍🔧\"\n  | \"🧑🏾‍🔧\"\n  | \"🧑🏿‍🔧\"\n  | \"🧑‍🔧\"\n  | \"👨🏻‍🔧\"\n  | \"👨🏼‍🔧\"\n  | \"👨🏽‍🔧\"\n  | \"👨🏾‍🔧\"\n  | \"👨🏿‍🔧\"\n  | \"👨‍🔧\"\n  | \"👩🏻‍🔧\"\n  | \"👩🏼‍🔧\"\n  | \"👩🏽‍🔧\"\n  | \"👩🏾‍🔧\"\n  | \"👩🏿‍🔧\"\n  | \"👩‍🔧\"\n  | \"🧑🏻‍🏭\"\n  | \"🧑🏼‍🏭\"\n  | \"🧑🏽‍🏭\"\n  | \"🧑🏾‍🏭\"\n  | \"🧑🏿‍🏭\"\n  | \"🧑‍🏭\"\n  | \"👨🏻‍🏭\"\n  | \"👨🏼‍🏭\"\n  | \"👨🏽‍🏭\"\n  | \"👨🏾‍🏭\"\n  | \"👨🏿‍🏭\"\n  | \"👨‍🏭\"\n  | \"👩🏻‍🏭\"\n  | \"👩🏼‍🏭\"\n  | \"👩🏽‍🏭\"\n  | \"👩🏾‍🏭\"\n  | \"👩🏿‍🏭\"\n  | \"👩‍🏭\"\n  | \"🧑🏻‍💼\"\n  | \"🧑🏼‍💼\"\n  | \"🧑🏽‍💼\"\n  | \"🧑🏾‍💼\"\n  | \"🧑🏿‍💼\"\n  | \"🧑‍💼\"\n  | \"👨🏻‍💼\"\n  | \"👨🏼‍💼\"\n  | \"👨🏽‍💼\"\n  | \"👨🏾‍💼\"\n  | \"👨🏿‍💼\"\n  | \"👨‍💼\"\n  | \"👩🏻‍💼\"\n  | \"👩🏼‍💼\"\n  | \"👩🏽‍💼\"\n  | \"👩🏾‍💼\"\n  | \"👩🏿‍💼\"\n  | \"👩‍💼\"\n  | \"🧑🏻‍🔬\"\n  | \"🧑🏼‍🔬\"\n  | \"🧑🏽‍🔬\"\n  | \"🧑🏾‍🔬\"\n  | \"🧑🏿‍🔬\"\n  | \"🧑‍🔬\"\n  | \"👨🏻‍🔬\"\n  | \"👨🏼‍🔬\"\n  | \"👨🏽‍🔬\"\n  | \"👨🏾‍🔬\"\n  | \"👨🏿‍🔬\"\n  | \"👨‍🔬\"\n  | \"👩🏻‍🔬\"\n  | \"👩🏼‍🔬\"\n  | \"👩🏽‍🔬\"\n  | \"👩🏾‍🔬\"\n  | \"👩🏿‍🔬\"\n  | \"👩‍🔬\"\n  | \"🧑🏻‍💻\"\n  | \"🧑🏼‍💻\"\n  | \"🧑🏽‍💻\"\n  | \"🧑🏾‍💻\"\n  | \"🧑🏿‍💻\"\n  | \"🧑‍💻\"\n  | \"👨🏻‍💻\"\n  | \"👨🏼‍💻\"\n  | \"👨🏽‍💻\"\n  | \"👨🏾‍💻\"\n  | \"👨🏿‍💻\"\n  | \"👨‍💻\"\n  | \"👩🏻‍💻\"\n  | \"👩🏼‍💻\"\n  | \"👩🏽‍💻\"\n  | \"👩🏾‍💻\"\n  | \"👩🏿‍💻\"\n  | \"👩‍💻\"\n  | \"🧑🏻‍🎤\"\n  | \"🧑🏼‍🎤\"\n  | \"🧑🏽‍🎤\"\n  | \"🧑🏾‍🎤\"\n  | \"🧑🏿‍🎤\"\n  | \"🧑‍🎤\"\n  | \"👨🏻‍🎤\"\n  | \"👨🏼‍🎤\"\n  | \"👨🏽‍🎤\"\n  | \"👨🏾‍🎤\"\n  | \"👨🏿‍🎤\"\n  | \"👨‍🎤\"\n  | \"👩🏻‍🎤\"\n  | \"👩🏼‍🎤\"\n  | \"👩🏽‍🎤\"\n  | \"👩🏾‍🎤\"\n  | \"👩🏿‍🎤\"\n  | \"👩‍🎤\"\n  | \"🧑🏻‍🎨\"\n  | \"🧑🏼‍🎨\"\n  | \"🧑🏽‍🎨\"\n  | \"🧑🏾‍🎨\"\n  | \"🧑🏿‍🎨\"\n  | \"🧑‍🎨\"\n  | \"👨🏻‍🎨\"\n  | \"👨🏼‍🎨\"\n  | \"👨🏽‍🎨\"\n  | \"👨🏾‍🎨\"\n  | \"👨🏿‍🎨\"\n  | \"👨‍🎨\"\n  | \"👩🏻‍🎨\"\n  | \"👩🏼‍🎨\"\n  | \"👩🏽‍🎨\"\n  | \"👩🏾‍🎨\"\n  | \"👩🏿‍🎨\"\n  | \"👩‍🎨\"\n  | \"🧑🏻‍✈️\"\n  | \"🧑🏼‍✈️\"\n  | \"🧑🏽‍✈️\"\n  | \"🧑🏾‍✈️\"\n  | \"🧑🏿‍✈️\"\n  | \"🧑‍✈️\"\n  | \"🧑‍✈\"\n  | \"👨🏻‍✈️\"\n  | \"👨🏼‍✈️\"\n  | \"👨🏽‍✈️\"\n  | \"👨🏾‍✈️\"\n  | \"👨🏿‍✈️\"\n  | \"👨‍✈️\"\n  | \"👨‍✈\"\n  | \"👩🏻‍✈️\"\n  | \"👩🏼‍✈️\"\n  | \"👩🏽‍✈️\"\n  | \"👩🏾‍✈️\"\n  | \"👩🏿‍✈️\"\n  | \"👩‍✈️\"\n  | \"👩‍✈\"\n  | \"🧑🏻‍🚀\"\n  | \"🧑🏼‍🚀\"\n  | \"🧑🏽‍🚀\"\n  | \"🧑🏾‍🚀\"\n  | \"🧑🏿‍🚀\"\n  | \"🧑‍🚀\"\n  | \"👨🏻‍🚀\"\n  | \"👨🏼‍🚀\"\n  | \"👨🏽‍🚀\"\n  | \"👨🏾‍🚀\"\n  | \"👨🏿‍🚀\"\n  | \"👨‍🚀\"\n  | \"👩🏻‍🚀\"\n  | \"👩🏼‍🚀\"\n  | \"👩🏽‍🚀\"\n  | \"👩🏾‍🚀\"\n  | \"👩🏿‍🚀\"\n  | \"👩‍🚀\"\n  | \"🧑🏻‍🚒\"\n  | \"🧑🏼‍🚒\"\n  | \"🧑🏽‍🚒\"\n  | \"🧑🏾‍🚒\"\n  | \"🧑🏿‍🚒\"\n  | \"🧑‍🚒\"\n  | \"👨🏻‍🚒\"\n  | \"👨🏼‍🚒\"\n  | \"👨🏽‍🚒\"\n  | \"👨🏾‍🚒\"\n  | \"👨🏿‍🚒\"\n  | \"👨‍🚒\"\n  | \"👩🏻‍🚒\"\n  | \"👩🏼‍🚒\"\n  | \"👩🏽‍🚒\"\n  | \"👩🏾‍🚒\"\n  | \"👩🏿‍🚒\"\n  | \"👩‍🚒\"\n  | \"👮🏻\"\n  | \"👮🏼\"\n  | \"👮🏽\"\n  | \"👮🏾\"\n  | \"👮🏿\"\n  | \"👮\"\n  | \"👮🏻‍♂️\"\n  | \"👮🏼‍♂️\"\n  | \"👮🏽‍♂️\"\n  | \"👮🏾‍♂️\"\n  | \"👮🏿‍♂️\"\n  | \"👮‍♂️\"\n  | \"👮‍♂\"\n  | \"👮🏻‍♀️\"\n  | \"👮🏼‍♀️\"\n  | \"👮🏽‍♀️\"\n  | \"👮🏾‍♀️\"\n  | \"👮🏿‍♀️\"\n  | \"👮‍♀️\"\n  | \"👮‍♀\"\n  | \"🕵🏻\"\n  | \"🕵🏼\"\n  | \"🕵🏽\"\n  | \"🕵🏾\"\n  | \"🕵🏿\"\n  | \"🕵️\"\n  | \"🕵\"\n  | \"🕵🏻‍♂️\"\n  | \"🕵🏼‍♂️\"\n  | \"🕵🏽‍♂️\"\n  | \"🕵🏾‍♂️\"\n  | \"🕵🏿‍♂️\"\n  | \"🕵️‍♂️\"\n  | \"🕵🏻‍♀️\"\n  | \"🕵🏼‍♀️\"\n  | \"🕵🏽‍♀️\"\n  | \"🕵🏾‍♀️\"\n  | \"🕵🏿‍♀️\"\n  | \"🕵️‍♀️\"\n  | \"💂🏻\"\n  | \"💂🏼\"\n  | \"💂🏽\"\n  | \"💂🏾\"\n  | \"💂🏿\"\n  | \"💂\"\n  | \"💂🏻‍♂️\"\n  | \"💂🏼‍♂️\"\n  | \"💂🏽‍♂️\"\n  | \"💂🏾‍♂️\"\n  | \"💂🏿‍♂️\"\n  | \"💂‍♂️\"\n  | \"💂‍♂\"\n  | \"💂🏻‍♀️\"\n  | \"💂🏼‍♀️\"\n  | \"💂🏽‍♀️\"\n  | \"💂🏾‍♀️\"\n  | \"💂🏿‍♀️\"\n  | \"💂‍♀️\"\n  | \"💂‍♀\"\n  | \"🥷🏻\"\n  | \"🥷🏼\"\n  | \"🥷🏽\"\n  | \"🥷🏾\"\n  | \"🥷🏿\"\n  | \"🥷\"\n  | \"👷🏻\"\n  | \"👷🏼\"\n  | \"👷🏽\"\n  | \"👷🏾\"\n  | \"👷🏿\"\n  | \"👷\"\n  | \"👷🏻‍♂️\"\n  | \"👷🏼‍♂️\"\n  | \"👷🏽‍♂️\"\n  | \"👷🏾‍♂️\"\n  | \"👷🏿‍♂️\"\n  | \"👷‍♂️\"\n  | \"👷‍♂\"\n  | \"👷🏻‍♀️\"\n  | \"👷🏼‍♀️\"\n  | \"👷🏽‍♀️\"\n  | \"👷🏾‍♀️\"\n  | \"👷🏿‍♀️\"\n  | \"👷‍♀️\"\n  | \"👷‍♀\"\n  | \"🫅🏻\"\n  | \"🫅🏼\"\n  | \"🫅🏽\"\n  | \"🫅🏾\"\n  | \"🫅🏿\"\n  | \"🫅\"\n  | \"🤴🏻\"\n  | \"🤴🏼\"\n  | \"🤴🏽\"\n  | \"🤴🏾\"\n  | \"🤴🏿\"\n  | \"🤴\"\n  | \"👸🏻\"\n  | \"👸🏼\"\n  | \"👸🏽\"\n  | \"👸🏾\"\n  | \"👸🏿\"\n  | \"👸\"\n  | \"👳🏻\"\n  | \"👳🏼\"\n  | \"👳🏽\"\n  | \"👳🏾\"\n  | \"👳🏿\"\n  | \"👳\"\n  | \"👳🏻‍♂️\"\n  | \"👳🏼‍♂️\"\n  | \"👳🏽‍♂️\"\n  | \"👳🏾‍♂️\"\n  | \"👳🏿‍♂️\"\n  | \"👳‍♂️\"\n  | \"👳‍♂\"\n  | \"👳🏻‍♀️\"\n  | \"👳🏼‍♀️\"\n  | \"👳🏽‍♀️\"\n  | \"👳🏾‍♀️\"\n  | \"👳🏿‍♀️\"\n  | \"👳‍♀️\"\n  | \"👳‍♀\"\n  | \"👲🏻\"\n  | \"👲🏼\"\n  | \"👲🏽\"\n  | \"👲🏾\"\n  | \"👲🏿\"\n  | \"👲\"\n  | \"🧕🏻\"\n  | \"🧕🏼\"\n  | \"🧕🏽\"\n  | \"🧕🏾\"\n  | \"🧕🏿\"\n  | \"🧕\"\n  | \"🤵🏻\"\n  | \"🤵🏼\"\n  | \"🤵🏽\"\n  | \"🤵🏾\"\n  | \"🤵🏿\"\n  | \"🤵\"\n  | \"🤵🏻‍♂️\"\n  | \"🤵🏼‍♂️\"\n  | \"🤵🏽‍♂️\"\n  | \"🤵🏾‍♂️\"\n  | \"🤵🏿‍♂️\"\n  | \"🤵‍♂️\"\n  | \"🤵‍♂\"\n  | \"🤵🏻‍♀️\"\n  | \"🤵🏼‍♀️\"\n  | \"🤵🏽‍♀️\"\n  | \"🤵🏾‍♀️\"\n  | \"🤵🏿‍♀️\"\n  | \"🤵‍♀️\"\n  | \"🤵‍♀\"\n  | \"👰🏻\"\n  | \"👰🏼\"\n  | \"👰🏽\"\n  | \"👰🏾\"\n  | \"👰🏿\"\n  | \"👰\"\n  | \"👰🏻‍♂️\"\n  | \"👰🏼‍♂️\"\n  | \"👰🏽‍♂️\"\n  | \"👰🏾‍♂️\"\n  | \"👰🏿‍♂️\"\n  | \"👰‍♂️\"\n  | \"👰‍♂\"\n  | \"👰🏻‍♀️\"\n  | \"👰🏼‍♀️\"\n  | \"👰🏽‍♀️\"\n  | \"👰🏾‍♀️\"\n  | \"👰🏿‍♀️\"\n  | \"👰‍♀️\"\n  | \"👰‍♀\"\n  | \"🤰🏻\"\n  | \"🤰🏼\"\n  | \"🤰🏽\"\n  | \"🤰🏾\"\n  | \"🤰🏿\"\n  | \"🤰\"\n  | \"🫃🏻\"\n  | \"🫃🏼\"\n  | \"🫃🏽\"\n  | \"🫃🏾\"\n  | \"🫃🏿\"\n  | \"🫃\"\n  | \"🫄🏻\"\n  | \"🫄🏼\"\n  | \"🫄🏽\"\n  | \"🫄🏾\"\n  | \"🫄🏿\"\n  | \"🫄\"\n  | \"🤱🏻\"\n  | \"🤱🏼\"\n  | \"🤱🏽\"\n  | \"🤱🏾\"\n  | \"🤱🏿\"\n  | \"🤱\"\n  | \"👩🏻‍🍼\"\n  | \"👩🏼‍🍼\"\n  | \"👩🏽‍🍼\"\n  | \"👩🏾‍🍼\"\n  | \"👩🏿‍🍼\"\n  | \"👩‍🍼\"\n  | \"👨🏻‍🍼\"\n  | \"👨🏼‍🍼\"\n  | \"👨🏽‍🍼\"\n  | \"👨🏾‍🍼\"\n  | \"👨🏿‍🍼\"\n  | \"👨‍🍼\"\n  | \"🧑🏻‍🍼\"\n  | \"🧑🏼‍🍼\"\n  | \"🧑🏽‍🍼\"\n  | \"🧑🏾‍🍼\"\n  | \"🧑🏿‍🍼\"\n  | \"🧑‍🍼\"\n  | \"👼🏻\"\n  | \"👼🏼\"\n  | \"👼🏽\"\n  | \"👼🏾\"\n  | \"👼🏿\"\n  | \"👼\"\n  | \"🎅🏻\"\n  | \"🎅🏼\"\n  | \"🎅🏽\"\n  | \"🎅🏾\"\n  | \"🎅🏿\"\n  | \"🎅\"\n  | \"🤶🏻\"\n  | \"🤶🏼\"\n  | \"🤶🏽\"\n  | \"🤶🏾\"\n  | \"🤶🏿\"\n  | \"🤶\"\n  | \"🧑🏻‍🎄\"\n  | \"🧑🏼‍🎄\"\n  | \"🧑🏽‍🎄\"\n  | \"🧑🏾‍🎄\"\n  | \"🧑🏿‍🎄\"\n  | \"🧑‍🎄\"\n  | \"🦸🏻\"\n  | \"🦸🏼\"\n  | \"🦸🏽\"\n  | \"🦸🏾\"\n  | \"🦸🏿\"\n  | \"🦸\"\n  | \"🦸🏻‍♂️\"\n  | \"🦸🏼‍♂️\"\n  | \"🦸🏽‍♂️\"\n  | \"🦸🏾‍♂️\"\n  | \"🦸🏿‍♂️\"\n  | \"🦸‍♂️\"\n  | \"🦸‍♂\"\n  | \"🦸🏻‍♀️\"\n  | \"🦸🏼‍♀️\"\n  | \"🦸🏽‍♀️\"\n  | \"🦸🏾‍♀️\"\n  | \"🦸🏿‍♀️\"\n  | \"🦸‍♀️\"\n  | \"🦸‍♀\"\n  | \"🦹🏻\"\n  | \"🦹🏼\"\n  | \"🦹🏽\"\n  | \"🦹🏾\"\n  | \"🦹🏿\"\n  | \"🦹\"\n  | \"🦹🏻‍♂️\"\n  | \"🦹🏼‍♂️\"\n  | \"🦹🏽‍♂️\"\n  | \"🦹🏾‍♂️\"\n  | \"🦹🏿‍♂️\"\n  | \"🦹‍♂️\"\n  | \"🦹‍♂\"\n  | \"🦹🏻‍♀️\"\n  | \"🦹🏼‍♀️\"\n  | \"🦹🏽‍♀️\"\n  | \"🦹🏾‍♀️\"\n  | \"🦹🏿‍♀️\"\n  | \"🦹‍♀️\"\n  | \"🦹‍♀\"\n  | \"🧙🏻\"\n  | \"🧙🏼\"\n  | \"🧙🏽\"\n  | \"🧙🏾\"\n  | \"🧙🏿\"\n  | \"🧙\"\n  | \"🧙🏻‍♂️\"\n  | \"🧙🏼‍♂️\"\n  | \"🧙🏽‍♂️\"\n  | \"🧙🏾‍♂️\"\n  | \"🧙🏿‍♂️\"\n  | \"🧙‍♂️\"\n  | \"🧙‍♂\"\n  | \"🧙🏻‍♀️\"\n  | \"🧙🏼‍♀️\"\n  | \"🧙🏽‍♀️\"\n  | \"🧙🏾‍♀️\"\n  | \"🧙🏿‍♀️\"\n  | \"🧙‍♀️\"\n  | \"🧙‍♀\"\n  | \"🧚🏻\"\n  | \"🧚🏼\"\n  | \"🧚🏽\"\n  | \"🧚🏾\"\n  | \"🧚🏿\"\n  | \"🧚\"\n  | \"🧚🏻‍♂️\"\n  | \"🧚🏼‍♂️\"\n  | \"🧚🏽‍♂️\"\n  | \"🧚🏾‍♂️\"\n  | \"🧚🏿‍♂️\"\n  | \"🧚‍♂️\"\n  | \"🧚‍♂\"\n  | \"🧚🏻‍♀️\"\n  | \"🧚🏼‍♀️\"\n  | \"🧚🏽‍♀️\"\n  | \"🧚🏾‍♀️\"\n  | \"🧚🏿‍♀️\"\n  | \"🧚‍♀️\"\n  | \"🧚‍♀\"\n  | \"🧛🏻\"\n  | \"🧛🏼\"\n  | \"🧛🏽\"\n  | \"🧛🏾\"\n  | \"🧛🏿\"\n  | \"🧛\"\n  | \"🧛🏻‍♂️\"\n  | \"🧛🏼‍♂️\"\n  | \"🧛🏽‍♂️\"\n  | \"🧛🏾‍♂️\"\n  | \"🧛🏿‍♂️\"\n  | \"🧛‍♂️\"\n  | \"🧛‍♂\"\n  | \"🧛🏻‍♀️\"\n  | \"🧛🏼‍♀️\"\n  | \"🧛🏽‍♀️\"\n  | \"🧛🏾‍♀️\"\n  | \"🧛🏿‍♀️\"\n  | \"🧛‍♀️\"\n  | \"🧛‍♀\"\n  | \"🧜🏻\"\n  | \"🧜🏼\"\n  | \"🧜🏽\"\n  | \"🧜🏾\"\n  | \"🧜🏿\"\n  | \"🧜\"\n  | \"🧜🏻‍♂️\"\n  | \"🧜🏼‍♂️\"\n  | \"🧜🏽‍♂️\"\n  | \"🧜🏾‍♂️\"\n  | \"🧜🏿‍♂️\"\n  | \"🧜‍♂️\"\n  | \"🧜‍♂\"\n  | \"🧜🏻‍♀️\"\n  | \"🧜🏼‍♀️\"\n  | \"🧜🏽‍♀️\"\n  | \"🧜🏾‍♀️\"\n  | \"🧜🏿‍♀️\"\n  | \"🧜‍♀️\"\n  | \"🧜‍♀\"\n  | \"🧝🏻\"\n  | \"🧝🏼\"\n  | \"🧝🏽\"\n  | \"🧝🏾\"\n  | \"🧝🏿\"\n  | \"🧝\"\n  | \"🧝🏻‍♂️\"\n  | \"🧝🏼‍♂️\"\n  | \"🧝🏽‍♂️\"\n  | \"🧝🏾‍♂️\"\n  | \"🧝🏿‍♂️\"\n  | \"🧝‍♂️\"\n  | \"🧝‍♂\"\n  | \"🧝🏻‍♀️\"\n  | \"🧝🏼‍♀️\"\n  | \"🧝🏽‍♀️\"\n  | \"🧝🏾‍♀️\"\n  | \"🧝🏿‍♀️\"\n  | \"🧝‍♀️\"\n  | \"🧝‍♀\"\n  | \"🧞\"\n  | \"🧞‍♂️\"\n  | \"🧞‍♂\"\n  | \"🧞‍♀️\"\n  | \"🧞‍♀\"\n  | \"🧟\"\n  | \"🧟‍♂️\"\n  | \"🧟‍♂\"\n  | \"🧟‍♀️\"\n  | \"🧟‍♀\"\n  | \"🧌\"\n  | \"💆🏻\"\n  | \"💆🏼\"\n  | \"💆🏽\"\n  | \"💆🏾\"\n  | \"💆🏿\"\n  | \"💆\"\n  | \"💆🏻‍♂️\"\n  | \"💆🏼‍♂️\"\n  | \"💆🏽‍♂️\"\n  | \"💆🏾‍♂️\"\n  | \"💆🏿‍♂️\"\n  | \"💆‍♂️\"\n  | \"💆‍♂\"\n  | \"💆🏻‍♀️\"\n  | \"💆🏼‍♀️\"\n  | \"💆🏽‍♀️\"\n  | \"💆🏾‍♀️\"\n  | \"💆🏿‍♀️\"\n  | \"💆‍♀️\"\n  | \"💆‍♀\"\n  | \"💇🏻\"\n  | \"💇🏼\"\n  | \"💇🏽\"\n  | \"💇🏾\"\n  | \"💇🏿\"\n  | \"💇\"\n  | \"💇🏻‍♂️\"\n  | \"💇🏼‍♂️\"\n  | \"💇🏽‍♂️\"\n  | \"💇🏾‍♂️\"\n  | \"💇🏿‍♂️\"\n  | \"💇‍♂️\"\n  | \"💇‍♂\"\n  | \"💇🏻‍♀️\"\n  | \"💇🏼‍♀️\"\n  | \"💇🏽‍♀️\"\n  | \"💇🏾‍♀️\"\n  | \"💇🏿‍♀️\"\n  | \"💇‍♀️\"\n  | \"💇‍♀\"\n  | \"🚶🏻\"\n  | \"🚶🏼\"\n  | \"🚶🏽\"\n  | \"🚶🏾\"\n  | \"🚶🏿\"\n  | \"🚶\"\n  | \"🚶🏻‍♂️\"\n  | \"🚶🏼‍♂️\"\n  | \"🚶🏽‍♂️\"\n  | \"🚶🏾‍♂️\"\n  | \"🚶🏿‍♂️\"\n  | \"🚶‍♂️\"\n  | \"🚶‍♂\"\n  | \"🚶🏻‍♀️\"\n  | \"🚶🏼‍♀️\"\n  | \"🚶🏽‍♀️\"\n  | \"🚶🏾‍♀️\"\n  | \"🚶🏿‍♀️\"\n  | \"🚶‍♀️\"\n  | \"🚶‍♀\"\n  | \"🧍🏻\"\n  | \"🧍🏼\"\n  | \"🧍🏽\"\n  | \"🧍🏾\"\n  | \"🧍🏿\"\n  | \"🧍\"\n  | \"🧍🏻‍♂️\"\n  | \"🧍🏼‍♂️\"\n  | \"🧍🏽‍♂️\"\n  | \"🧍🏾‍♂️\"\n  | \"🧍🏿‍♂️\"\n  | \"🧍‍♂️\"\n  | \"🧍‍♂\"\n  | \"🧍🏻‍♀️\"\n  | \"🧍🏼‍♀️\"\n  | \"🧍🏽‍♀️\"\n  | \"🧍🏾‍♀️\"\n  | \"🧍🏿‍♀️\"\n  | \"🧍‍♀️\"\n  | \"🧍‍♀\"\n  | \"🧎🏻\"\n  | \"🧎🏼\"\n  | \"🧎🏽\"\n  | \"🧎🏾\"\n  | \"🧎🏿\"\n  | \"🧎\"\n  | \"🧎🏻‍♂️\"\n  | \"🧎🏼‍♂️\"\n  | \"🧎🏽‍♂️\"\n  | \"🧎🏾‍♂️\"\n  | \"🧎🏿‍♂️\"\n  | \"🧎‍♂️\"\n  | \"🧎‍♂\"\n  | \"🧎🏻‍♀️\"\n  | \"🧎🏼‍♀️\"\n  | \"🧎🏽‍♀️\"\n  | \"🧎🏾‍♀️\"\n  | \"🧎🏿‍♀️\"\n  | \"🧎‍♀️\"\n  | \"🧎‍♀\"\n  | \"🧑🏻‍🦯\"\n  | \"🧑🏼‍🦯\"\n  | \"🧑🏽‍🦯\"\n  | \"🧑🏾‍🦯\"\n  | \"🧑🏿‍🦯\"\n  | \"🧑‍🦯\"\n  | \"👨🏻‍🦯\"\n  | \"👨🏼‍🦯\"\n  | \"👨🏽‍🦯\"\n  | \"👨🏾‍🦯\"\n  | \"👨🏿‍🦯\"\n  | \"👨‍🦯\"\n  | \"👩🏻‍🦯\"\n  | \"👩🏼‍🦯\"\n  | \"👩🏽‍🦯\"\n  | \"👩🏾‍🦯\"\n  | \"👩🏿‍🦯\"\n  | \"👩‍🦯\"\n  | \"🧑🏻‍🦼\"\n  | \"🧑🏼‍🦼\"\n  | \"🧑🏽‍🦼\"\n  | \"🧑🏾‍🦼\"\n  | \"🧑🏿‍🦼\"\n  | \"🧑‍🦼\"\n  | \"👨🏻‍🦼\"\n  | \"👨🏼‍🦼\"\n  | \"👨🏽‍🦼\"\n  | \"👨🏾‍🦼\"\n  | \"👨🏿‍🦼\"\n  | \"👨‍🦼\"\n  | \"👩🏻‍🦼\"\n  | \"👩🏼‍🦼\"\n  | \"👩🏽‍🦼\"\n  | \"👩🏾‍🦼\"\n  | \"👩🏿‍🦼\"\n  | \"👩‍🦼\"\n  | \"🧑🏻‍🦽\"\n  | \"🧑🏼‍🦽\"\n  | \"🧑🏽‍🦽\"\n  | \"🧑🏾‍🦽\"\n  | \"🧑🏿‍🦽\"\n  | \"🧑‍🦽\"\n  | \"👨🏻‍🦽\"\n  | \"👨🏼‍🦽\"\n  | \"👨🏽‍🦽\"\n  | \"👨🏾‍🦽\"\n  | \"👨🏿‍🦽\"\n  | \"👨‍🦽\"\n  | \"👩🏻‍🦽\"\n  | \"👩🏼‍🦽\"\n  | \"👩🏽‍🦽\"\n  | \"👩🏾‍🦽\"\n  | \"👩🏿‍🦽\"\n  | \"👩‍🦽\"\n  | \"🏃🏻\"\n  | \"🏃🏼\"\n  | \"🏃🏽\"\n  | \"🏃🏾\"\n  | \"🏃🏿\"\n  | \"🏃\"\n  | \"🏃🏻‍♂️\"\n  | \"🏃🏼‍♂️\"\n  | \"🏃🏽‍♂️\"\n  | \"🏃🏾‍♂️\"\n  | \"🏃🏿‍♂️\"\n  | \"🏃‍♂️\"\n  | \"🏃‍♂\"\n  | \"🏃🏻‍♀️\"\n  | \"🏃🏼‍♀️\"\n  | \"🏃🏽‍♀️\"\n  | \"🏃🏾‍♀️\"\n  | \"🏃🏿‍♀️\"\n  | \"🏃‍♀️\"\n  | \"🏃‍♀\"\n  | \"💃🏻\"\n  | \"💃🏼\"\n  | \"💃🏽\"\n  | \"💃🏾\"\n  | \"💃🏿\"\n  | \"💃\"\n  | \"🕺🏻\"\n  | \"🕺🏼\"\n  | \"🕺🏽\"\n  | \"🕺🏾\"\n  | \"🕺🏿\"\n  | \"🕺\"\n  | \"🕴🏻\"\n  | \"🕴🏼\"\n  | \"🕴🏽\"\n  | \"🕴🏾\"\n  | \"🕴🏿\"\n  | \"🕴️\"\n  | \"🕴\"\n  | \"👯\"\n  | \"👯‍♂️\"\n  | \"👯‍♂\"\n  | \"👯‍♀️\"\n  | \"👯‍♀\"\n  | \"🧖🏻\"\n  | \"🧖🏼\"\n  | \"🧖🏽\"\n  | \"🧖🏾\"\n  | \"🧖🏿\"\n  | \"🧖\"\n  | \"🧖🏻‍♂️\"\n  | \"🧖🏼‍♂️\"\n  | \"🧖🏽‍♂️\"\n  | \"🧖🏾‍♂️\"\n  | \"🧖🏿‍♂️\"\n  | \"🧖‍♂️\"\n  | \"🧖‍♂\"\n  | \"🧖🏻‍♀️\"\n  | \"🧖🏼‍♀️\"\n  | \"🧖🏽‍♀️\"\n  | \"🧖🏾‍♀️\"\n  | \"🧖🏿‍♀️\"\n  | \"🧖‍♀️\"\n  | \"🧖‍♀\"\n  | \"🧗🏻\"\n  | \"🧗🏼\"\n  | \"🧗🏽\"\n  | \"🧗🏾\"\n  | \"🧗🏿\"\n  | \"🧗\"\n  | \"🧗🏻‍♂️\"\n  | \"🧗🏼‍♂️\"\n  | \"🧗🏽‍♂️\"\n  | \"🧗🏾‍♂️\"\n  | \"🧗🏿‍♂️\"\n  | \"🧗‍♂️\"\n  | \"🧗‍♂\"\n  | \"🧗🏻‍♀️\"\n  | \"🧗🏼‍♀️\"\n  | \"🧗🏽‍♀️\"\n  | \"🧗🏾‍♀️\"\n  | \"🧗🏿‍♀️\"\n  | \"🧗‍♀️\"\n  | \"🧗‍♀\"\n  | \"🤺\"\n  | \"🏇🏻\"\n  | \"🏇🏼\"\n  | \"🏇🏽\"\n  | \"🏇🏾\"\n  | \"🏇🏿\"\n  | \"🏇\"\n  | \"⛷️\"\n  | \"⛷\"\n  | \"🏂🏻\"\n  | \"🏂🏼\"\n  | \"🏂🏽\"\n  | \"🏂🏾\"\n  | \"🏂🏿\"\n  | \"🏂\"\n  | \"🏌🏻\"\n  | \"🏌🏼\"\n  | \"🏌🏽\"\n  | \"🏌🏾\"\n  | \"🏌🏿\"\n  | \"🏌️\"\n  | \"🏌\"\n  | \"🏌🏻‍♂️\"\n  | \"🏌🏼‍♂️\"\n  | \"🏌🏽‍♂️\"\n  | \"🏌🏾‍♂️\"\n  | \"🏌🏿‍♂️\"\n  | \"🏌️‍♂️\"\n  | \"🏌🏻‍♀️\"\n  | \"🏌🏼‍♀️\"\n  | \"🏌🏽‍♀️\"\n  | \"🏌🏾‍♀️\"\n  | \"🏌🏿‍♀️\"\n  | \"🏌️‍♀️\"\n  | \"🏄🏻\"\n  | \"🏄🏼\"\n  | \"🏄🏽\"\n  | \"🏄🏾\"\n  | \"🏄🏿\"\n  | \"🏄\"\n  | \"🏄🏻‍♂️\"\n  | \"🏄🏼‍♂️\"\n  | \"🏄🏽‍♂️\"\n  | \"🏄🏾‍♂️\"\n  | \"🏄🏿‍♂️\"\n  | \"🏄‍♂️\"\n  | \"🏄‍♂\"\n  | \"🏄🏻‍♀️\"\n  | \"🏄🏼‍♀️\"\n  | \"🏄🏽‍♀️\"\n  | \"🏄🏾‍♀️\"\n  | \"🏄🏿‍♀️\"\n  | \"🏄‍♀️\"\n  | \"🏄‍♀\"\n  | \"🚣🏻\"\n  | \"🚣🏼\"\n  | \"🚣🏽\"\n  | \"🚣🏾\"\n  | \"🚣🏿\"\n  | \"🚣\"\n  | \"🚣🏻‍♂️\"\n  | \"🚣🏼‍♂️\"\n  | \"🚣🏽‍♂️\"\n  | \"🚣🏾‍♂️\"\n  | \"🚣🏿‍♂️\"\n  | \"🚣‍♂️\"\n  | \"🚣‍♂\"\n  | \"🚣🏻‍♀️\"\n  | \"🚣🏼‍♀️\"\n  | \"🚣🏽‍♀️\"\n  | \"🚣🏾‍♀️\"\n  | \"🚣🏿‍♀️\"\n  | \"🚣‍♀️\"\n  | \"🚣‍♀\"\n  | \"🏊🏻\"\n  | \"🏊🏼\"\n  | \"🏊🏽\"\n  | \"🏊🏾\"\n  | \"🏊🏿\"\n  | \"🏊\"\n  | \"🏊🏻‍♂️\"\n  | \"🏊🏼‍♂️\"\n  | \"🏊🏽‍♂️\"\n  | \"🏊🏾‍♂️\"\n  | \"🏊🏿‍♂️\"\n  | \"🏊‍♂️\"\n  | \"🏊‍♂\"\n  | \"🏊🏻‍♀️\"\n  | \"🏊🏼‍♀️\"\n  | \"🏊🏽‍♀️\"\n  | \"🏊🏾‍♀️\"\n  | \"🏊🏿‍♀️\"\n  | \"🏊‍♀️\"\n  | \"🏊‍♀\"\n  | \"⛹🏻\"\n  | \"⛹🏼\"\n  | \"⛹🏽\"\n  | \"⛹🏾\"\n  | \"⛹🏿\"\n  | \"⛹️\"\n  | \"⛹\"\n  | \"⛹🏻‍♂️\"\n  | \"⛹🏼‍♂️\"\n  | \"⛹🏽‍♂️\"\n  | \"⛹🏾‍♂️\"\n  | \"⛹🏿‍♂️\"\n  | \"⛹️‍♂️\"\n  | \"⛹🏻‍♀️\"\n  | \"⛹🏼‍♀️\"\n  | \"⛹🏽‍♀️\"\n  | \"⛹🏾‍♀️\"\n  | \"⛹🏿‍♀️\"\n  | \"⛹️‍♀️\"\n  | \"🏋🏻\"\n  | \"🏋🏼\"\n  | \"🏋🏽\"\n  | \"🏋🏾\"\n  | \"🏋🏿\"\n  | \"🏋️\"\n  | \"🏋\"\n  | \"🏋🏻‍♂️\"\n  | \"🏋🏼‍♂️\"\n  | \"🏋🏽‍♂️\"\n  | \"🏋🏾‍♂️\"\n  | \"🏋🏿‍♂️\"\n  | \"🏋️‍♂️\"\n  | \"🏋🏻‍♀️\"\n  | \"🏋🏼‍♀️\"\n  | \"🏋🏽‍♀️\"\n  | \"🏋🏾‍♀️\"\n  | \"🏋🏿‍♀️\"\n  | \"🏋️‍♀️\"\n  | \"🚴🏻\"\n  | \"🚴🏼\"\n  | \"🚴🏽\"\n  | \"🚴🏾\"\n  | \"🚴🏿\"\n  | \"🚴\"\n  | \"🚴🏻‍♂️\"\n  | \"🚴🏼‍♂️\"\n  | \"🚴🏽‍♂️\"\n  | \"🚴🏾‍♂️\"\n  | \"🚴🏿‍♂️\"\n  | \"🚴‍♂️\"\n  | \"🚴‍♂\"\n  | \"🚴🏻‍♀️\"\n  | \"🚴🏼‍♀️\"\n  | \"🚴🏽‍♀️\"\n  | \"🚴🏾‍♀️\"\n  | \"🚴🏿‍♀️\"\n  | \"🚴‍♀️\"\n  | \"🚴‍♀\"\n  | \"🚵🏻\"\n  | \"🚵🏼\"\n  | \"🚵🏽\"\n  | \"🚵🏾\"\n  | \"🚵🏿\"\n  | \"🚵\"\n  | \"🚵🏻‍♂️\"\n  | \"🚵🏼‍♂️\"\n  | \"🚵🏽‍♂️\"\n  | \"🚵🏾‍♂️\"\n  | \"🚵🏿‍♂️\"\n  | \"🚵‍♂️\"\n  | \"🚵‍♂\"\n  | \"🚵🏻‍♀️\"\n  | \"🚵🏼‍♀️\"\n  | \"🚵🏽‍♀️\"\n  | \"🚵🏾‍♀️\"\n  | \"🚵🏿‍♀️\"\n  | \"🚵‍♀️\"\n  | \"🚵‍♀\"\n  | \"🤸🏻\"\n  | \"🤸🏼\"\n  | \"🤸🏽\"\n  | \"🤸🏾\"\n  | \"🤸🏿\"\n  | \"🤸\"\n  | \"🤸🏻‍♂️\"\n  | \"🤸🏼‍♂️\"\n  | \"🤸🏽‍♂️\"\n  | \"🤸🏾‍♂️\"\n  | \"🤸🏿‍♂️\"\n  | \"🤸‍♂️\"\n  | \"🤸‍♂\"\n  | \"🤸🏻‍♀️\"\n  | \"🤸🏼‍♀️\"\n  | \"🤸🏽‍♀️\"\n  | \"🤸🏾‍♀️\"\n  | \"🤸🏿‍♀️\"\n  | \"🤸‍♀️\"\n  | \"🤸‍♀\"\n  | \"🤼\"\n  | \"🤼‍♂️\"\n  | \"🤼‍♂\"\n  | \"🤼‍♀️\"\n  | \"🤼‍♀\"\n  | \"🤽🏻\"\n  | \"🤽🏼\"\n  | \"🤽🏽\"\n  | \"🤽🏾\"\n  | \"🤽🏿\"\n  | \"🤽\"\n  | \"🤽🏻‍♂️\"\n  | \"🤽🏼‍♂️\"\n  | \"🤽🏽‍♂️\"\n  | \"🤽🏾‍♂️\"\n  | \"🤽🏿‍♂️\"\n  | \"🤽‍♂️\"\n  | \"🤽‍♂\"\n  | \"🤽🏻‍♀️\"\n  | \"🤽🏼‍♀️\"\n  | \"🤽🏽‍♀️\"\n  | \"🤽🏾‍♀️\"\n  | \"🤽🏿‍♀️\"\n  | \"🤽‍♀️\"\n  | \"🤽‍♀\"\n  | \"🤾🏻\"\n  | \"🤾🏼\"\n  | \"🤾🏽\"\n  | \"🤾🏾\"\n  | \"🤾🏿\"\n  | \"🤾\"\n  | \"🤾🏻‍♂️\"\n  | \"🤾🏼‍♂️\"\n  | \"🤾🏽‍♂️\"\n  | \"🤾🏾‍♂️\"\n  | \"🤾🏿‍♂️\"\n  | \"🤾‍♂️\"\n  | \"🤾‍♂\"\n  | \"🤾🏻‍♀️\"\n  | \"🤾🏼‍♀️\"\n  | \"🤾🏽‍♀️\"\n  | \"🤾🏾‍♀️\"\n  | \"🤾🏿‍♀️\"\n  | \"🤾‍♀️\"\n  | \"🤾‍♀\"\n  | \"🤹🏻\"\n  | \"🤹🏼\"\n  | \"🤹🏽\"\n  | \"🤹🏾\"\n  | \"🤹🏿\"\n  | \"🤹\"\n  | \"🤹🏻‍♂️\"\n  | \"🤹🏼‍♂️\"\n  | \"🤹🏽‍♂️\"\n  | \"🤹🏾‍♂️\"\n  | \"🤹🏿‍♂️\"\n  | \"🤹‍♂️\"\n  | \"🤹‍♂\"\n  | \"🤹🏻‍♀️\"\n  | \"🤹🏼‍♀️\"\n  | \"🤹🏽‍♀️\"\n  | \"🤹🏾‍♀️\"\n  | \"🤹🏿‍♀️\"\n  | \"🤹‍♀️\"\n  | \"🤹‍♀\"\n  | \"🧘🏻\"\n  | \"🧘🏼\"\n  | \"🧘🏽\"\n  | \"🧘🏾\"\n  | \"🧘🏿\"\n  | \"🧘\"\n  | \"🧘🏻‍♂️\"\n  | \"🧘🏼‍♂️\"\n  | \"🧘🏽‍♂️\"\n  | \"🧘🏾‍♂️\"\n  | \"🧘🏿‍♂️\"\n  | \"🧘‍♂️\"\n  | \"🧘‍♂\"\n  | \"🧘🏻‍♀️\"\n  | \"🧘🏼‍♀️\"\n  | \"🧘🏽‍♀️\"\n  | \"🧘🏾‍♀️\"\n  | \"🧘🏿‍♀️\"\n  | \"🧘‍♀️\"\n  | \"🧘‍♀\"\n  | \"🛀🏻\"\n  | \"🛀🏼\"\n  | \"🛀🏽\"\n  | \"🛀🏾\"\n  | \"🛀🏿\"\n  | \"🛀\"\n  | \"🛌🏻\"\n  | \"🛌🏼\"\n  | \"🛌🏽\"\n  | \"🛌🏾\"\n  | \"🛌🏿\"\n  | \"🛌\"\n  | \"🧑🏻‍🤝‍🧑🏻\"\n  | \"🧑🏻‍🤝‍🧑🏼\"\n  | \"🧑🏻‍🤝‍🧑🏽\"\n  | \"🧑🏻‍🤝‍🧑🏾\"\n  | \"🧑🏻‍🤝‍🧑🏿\"\n  | \"🧑🏼‍🤝‍🧑🏻\"\n  | \"🧑🏼‍🤝‍🧑🏼\"\n  | \"🧑🏼‍🤝‍🧑🏽\"\n  | \"🧑🏼‍🤝‍🧑🏾\"\n  | \"🧑🏼‍🤝‍🧑🏿\"\n  | \"🧑🏽‍🤝‍🧑🏻\"\n  | \"🧑🏽‍🤝‍🧑🏼\"\n  | \"🧑🏽‍🤝‍🧑🏽\"\n  | \"🧑🏽‍🤝‍🧑🏾\"\n  | \"🧑🏽‍🤝‍🧑🏿\"\n  | \"🧑🏾‍🤝‍🧑🏻\"\n  | \"🧑🏾‍🤝‍🧑🏼\"\n  | \"🧑🏾‍🤝‍🧑🏽\"\n  | \"🧑🏾‍🤝‍🧑🏾\"\n  | \"🧑🏾‍🤝‍🧑🏿\"\n  | \"🧑🏿‍🤝‍🧑🏻\"\n  | \"🧑🏿‍🤝‍🧑🏼\"\n  | \"🧑🏿‍🤝‍🧑🏽\"\n  | \"🧑🏿‍🤝‍🧑🏾\"\n  | \"🧑🏿‍🤝‍🧑🏿\"\n  | \"🧑‍🤝‍🧑\"\n  | \"👭\"\n  | \"👫\"\n  | \"👬\"\n  | \"💏\"\n  | \"💑\"\n  | \"👪\"\n  | \"👨‍👩‍👦\"\n  | \"👨‍👩‍👧\"\n  | \"👨‍👩‍👧‍👦\"\n  | \"👨‍👩‍👦‍👦\"\n  | \"👨‍👩‍👧‍👧\"\n  | \"👨‍👨‍👦\"\n  | \"👨‍👨‍👧\"\n  | \"👨‍👨‍👧‍👦\"\n  | \"👨‍👨‍👦‍👦\"\n  | \"👨‍👨‍👧‍👧\"\n  | \"👩‍👩‍👦\"\n  | \"👩‍👩‍👧\"\n  | \"👩‍👩‍👧‍👦\"\n  | \"👩‍👩‍👦‍👦\"\n  | \"👩‍👩‍👧‍👧\"\n  | \"👨‍👦\"\n  | \"👨‍👦‍👦\"\n  | \"👨‍👧\"\n  | \"👨‍👧‍👦\"\n  | \"👨‍👧‍👧\"\n  | \"👩‍👦\"\n  | \"👩‍👦‍👦\"\n  | \"👩‍👧\"\n  | \"👩‍👧‍👦\"\n  | \"👩‍👧‍👧\"\n  | \"🗣️\"\n  | \"🗣\"\n  | \"👤\"\n  | \"👥\"\n  | \"🫂\"\n  | \"👣\"\n  | \"🐵\"\n  | \"🐒\"\n  | \"🦍\"\n  | \"🦧\"\n  | \"🐶\"\n  | \"🐕\"\n  | \"🦮\"\n  | \"🐕‍🦺\"\n  | \"🐩\"\n  | \"🐺\"\n  | \"🦊\"\n  | \"🦝\"\n  | \"🐱\"\n  | \"🐈\"\n  | \"🐈‍⬛\"\n  | \"🦁\"\n  | \"🐯\"\n  | \"🐅\"\n  | \"🐆\"\n  | \"🐴\"\n  | \"🐎\"\n  | \"🦄\"\n  | \"🦓\"\n  | \"🦌\"\n  | \"🦬\"\n  | \"🐮\"\n  | \"🐂\"\n  | \"🐃\"\n  | \"🐄\"\n  | \"🐷\"\n  | \"🐖\"\n  | \"🐗\"\n  | \"🐽\"\n  | \"🐏\"\n  | \"🐑\"\n  | \"🐐\"\n  | \"🐪\"\n  | \"🐫\"\n  | \"🦙\"\n  | \"🦒\"\n  | \"🐘\"\n  | \"🦣\"\n  | \"🦏\"\n  | \"🦛\"\n  | \"🐭\"\n  | \"🐁\"\n  | \"🐀\"\n  | \"🐹\"\n  | \"🐰\"\n  | \"🐇\"\n  | \"🐿️\"\n  | \"🐿\"\n  | \"🦫\"\n  | \"🦔\"\n  | \"🦇\"\n  | \"🐻\"\n  | \"🐻‍❄️\"\n  | \"🐻‍❄\"\n  | \"🐨\"\n  | \"🐼\"\n  | \"🦥\"\n  | \"🦦\"\n  | \"🦨\"\n  | \"🦘\"\n  | \"🦡\"\n  | \"🐾\"\n  | \"🦃\"\n  | \"🐔\"\n  | \"🐓\"\n  | \"🐣\"\n  | \"🐤\"\n  | \"🐥\"\n  | \"🐦\"\n  | \"🐧\"\n  | \"🕊️\"\n  | \"🕊\"\n  | \"🦅\"\n  | \"🦆\"\n  | \"🦢\"\n  | \"🦉\"\n  | \"🦤\"\n  | \"🪶\"\n  | \"🦩\"\n  | \"🦚\"\n  | \"🦜\"\n  | \"🐸\"\n  | \"🐊\"\n  | \"🐢\"\n  | \"🦎\"\n  | \"🐍\"\n  | \"🐲\"\n  | \"🐉\"\n  | \"🦕\"\n  | \"🦖\"\n  | \"🐳\"\n  | \"🐋\"\n  | \"🐬\"\n  | \"🦭\"\n  | \"🐟\"\n  | \"🐠\"\n  | \"🐡\"\n  | \"🦈\"\n  | \"🐙\"\n  | \"🐚\"\n  | \"🪸\"\n  | \"🐌\"\n  | \"🦋\"\n  | \"🐛\"\n  | \"🐜\"\n  | \"🐝\"\n  | \"🪲\"\n  | \"🐞\"\n  | \"🦗\"\n  | \"🪳\"\n  | \"🕷️\"\n  | \"🕷\"\n  | \"🕸️\"\n  | \"🕸\"\n  | \"🦂\"\n  | \"🦟\"\n  | \"🪰\"\n  | \"🪱\"\n  | \"🦠\"\n  | \"💐\"\n  | \"🌸\"\n  | \"💮\"\n  | \"🪷\"\n  | \"🏵️\"\n  | \"🏵\"\n  | \"🌹\"\n  | \"🥀\"\n  | \"🌺\"\n  | \"🌻\"\n  | \"🌼\"\n  | \"🌷\"\n  | \"🌱\"\n  | \"🪴\"\n  | \"🌲\"\n  | \"🌳\"\n  | \"🌴\"\n  | \"🌵\"\n  | \"🌾\"\n  | \"🌿\"\n  | \"☘️\"\n  | \"☘\"\n  | \"🍀\"\n  | \"🍁\"\n  | \"🍂\"\n  | \"🍃\"\n  | \"🪹\"\n  | \"🪺\"\n  | \"🍇\"\n  | \"🍈\"\n  | \"🍉\"\n  | \"🍊\"\n  | \"🍋\"\n  | \"🍌\"\n  | \"🍍\"\n  | \"🥭\"\n  | \"🍎\"\n  | \"🍏\"\n  | \"🍐\"\n  | \"🍑\"\n  | \"🍒\"\n  | \"🍓\"\n  | \"🫐\"\n  | \"🥝\"\n  | \"🍅\"\n  | \"🫒\"\n  | \"🥥\"\n  | \"🥑\"\n  | \"🍆\"\n  | \"🥔\"\n  | \"🥕\"\n  | \"🌽\"\n  | \"🌶️\"\n  | \"🌶\"\n  | \"🫑\"\n  | \"🥒\"\n  | \"🥬\"\n  | \"🥦\"\n  | \"🧄\"\n  | \"🧅\"\n  | \"🍄\"\n  | \"🥜\"\n  | \"🫘\"\n  | \"🌰\"\n  | \"🍞\"\n  | \"🥐\"\n  | \"🥖\"\n  | \"🫓\"\n  | \"🥨\"\n  | \"🥯\"\n  | \"🥞\"\n  | \"🧇\"\n  | \"🧀\"\n  | \"🍖\"\n  | \"🍗\"\n  | \"🥩\"\n  | \"🥓\"\n  | \"🍔\"\n  | \"🍟\"\n  | \"🍕\"\n  | \"🌭\"\n  | \"🥪\"\n  | \"🌮\"\n  | \"🌯\"\n  | \"🫔\"\n  | \"🥙\"\n  | \"🧆\"\n  | \"🥚\"\n  | \"🍳\"\n  | \"🥘\"\n  | \"🍲\"\n  | \"🫕\"\n  | \"🥣\"\n  | \"🥗\"\n  | \"🍿\"\n  | \"🧈\"\n  | \"🧂\"\n  | \"🥫\"\n  | \"🍱\"\n  | \"🍘\"\n  | \"🍙\"\n  | \"🍚\"\n  | \"🍛\"\n  | \"🍜\"\n  | \"🍝\"\n  | \"🍠\"\n  | \"🍢\"\n  | \"🍣\"\n  | \"🍤\"\n  | \"🍥\"\n  | \"🥮\"\n  | \"🍡\"\n  | \"🥟\"\n  | \"🥠\"\n  | \"🥡\"\n  | \"🦀\"\n  | \"🦞\"\n  | \"🦐\"\n  | \"🦑\"\n  | \"🦪\"\n  | \"🍦\"\n  | \"🍧\"\n  | \"🍨\"\n  | \"🍩\"\n  | \"🍪\"\n  | \"🎂\"\n  | \"🍰\"\n  | \"🧁\"\n  | \"🥧\"\n  | \"🍫\"\n  | \"🍬\"\n  | \"🍭\"\n  | \"🍮\"\n  | \"🍯\"\n  | \"🍼\"\n  | \"🥛\"\n  | \"☕\"\n  | \"🫖\"\n  | \"🍵\"\n  | \"🍶\"\n  | \"🍾\"\n  | \"🍷\"\n  | \"🍸\"\n  | \"🍹\"\n  | \"🍺\"\n  | \"🍻\"\n  | \"🥂\"\n  | \"🥃\"\n  | \"🫗\"\n  | \"🥤\"\n  | \"🧋\"\n  | \"🧃\"\n  | \"🧉\"\n  | \"🧊\"\n  | \"🥢\"\n  | \"🍽️\"\n  | \"🍽\"\n  | \"🍴\"\n  | \"🥄\"\n  | \"🔪\"\n  | \"🫙\"\n  | \"🏺\"\n  | \"🌍\"\n  | \"🌎\"\n  | \"🌏\"\n  | \"🌐\"\n  | \"🗺️\"\n  | \"🗺\"\n  | \"🗾\"\n  | \"🧭\"\n  | \"🏔️\"\n  | \"🏔\"\n  | \"⛰️\"\n  | \"⛰\"\n  | \"🌋\"\n  | \"🗻\"\n  | \"🏕️\"\n  | \"🏕\"\n  | \"🏖️\"\n  | \"🏖\"\n  | \"🏜️\"\n  | \"🏜\"\n  | \"🏝️\"\n  | \"🏝\"\n  | \"🏞️\"\n  | \"🏞\"\n  | \"🏟️\"\n  | \"🏟\"\n  | \"🏛️\"\n  | \"🏛\"\n  | \"🏗️\"\n  | \"🏗\"\n  | \"🧱\"\n  | \"🪨\"\n  | \"🪵\"\n  | \"🛖\"\n  | \"🏘️\"\n  | \"🏘\"\n  | \"🏚️\"\n  | \"🏚\"\n  | \"🏠\"\n  | \"🏡\"\n  | \"🏢\"\n  | \"🏣\"\n  | \"🏤\"\n  | \"🏥\"\n  | \"🏦\"\n  | \"🏨\"\n  | \"🏩\"\n  | \"🏪\"\n  | \"🏫\"\n  | \"🏬\"\n  | \"🏭\"\n  | \"🏯\"\n  | \"🏰\"\n  | \"💒\"\n  | \"🗼\"\n  | \"🗽\"\n  | \"⛪\"\n  | \"🕌\"\n  | \"🛕\"\n  | \"🕍\"\n  | \"⛩️\"\n  | \"⛩\"\n  | \"🕋\"\n  | \"⛲\"\n  | \"⛺\"\n  | \"🌁\"\n  | \"🌃\"\n  | \"🏙️\"\n  | \"🏙\"\n  | \"🌄\"\n  | \"🌅\"\n  | \"🌆\"\n  | \"🌇\"\n  | \"🌉\"\n  | \"♨️\"\n  | \"♨\"\n  | \"🎠\"\n  | \"🛝\"\n  | \"🎡\"\n  | \"🎢\"\n  | \"💈\"\n  | \"🎪\"\n  | \"🚂\"\n  | \"🚃\"\n  | \"🚄\"\n  | \"🚅\"\n  | \"🚆\"\n  | \"🚇\"\n  | \"🚈\"\n  | \"🚉\"\n  | \"🚊\"\n  | \"🚝\"\n  | \"🚞\"\n  | \"🚋\"\n  | \"🚌\"\n  | \"🚍\"\n  | \"🚎\"\n  | \"🚐\"\n  | \"🚑\"\n  | \"🚒\"\n  | \"🚓\"\n  | \"🚔\"\n  | \"🚕\"\n  | \"🚖\"\n  | \"🚗\"\n  | \"🚘\"\n  | \"🚙\"\n  | \"🛻\"\n  | \"🚚\"\n  | \"🚛\"\n  | \"🚜\"\n  | \"🏎️\"\n  | \"🏎\"\n  | \"🏍️\"\n  | \"🏍\"\n  | \"🛵\"\n  | \"🦽\"\n  | \"🦼\"\n  | \"🛺\"\n  | \"🚲\"\n  | \"🛴\"\n  | \"🛹\"\n  | \"🛼\"\n  | \"🚏\"\n  | \"🛣️\"\n  | \"🛣\"\n  | \"🛤️\"\n  | \"🛤\"\n  | \"🛢️\"\n  | \"🛢\"\n  | \"⛽\"\n  | \"🛞\"\n  | \"🚨\"\n  | \"🚥\"\n  | \"🚦\"\n  | \"🛑\"\n  | \"🚧\"\n  | \"⚓\"\n  | \"🛟\"\n  | \"⛵\"\n  | \"🛶\"\n  | \"🚤\"\n  | \"🛳️\"\n  | \"🛳\"\n  | \"⛴️\"\n  | \"⛴\"\n  | \"🛥️\"\n  | \"🛥\"\n  | \"🚢\"\n  | \"✈️\"\n  | \"✈\"\n  | \"🛩️\"\n  | \"🛩\"\n  | \"🛫\"\n  | \"🛬\"\n  | \"🪂\"\n  | \"💺\"\n  | \"🚁\"\n  | \"🚟\"\n  | \"🚠\"\n  | \"🚡\"\n  | \"🛰️\"\n  | \"🛰\"\n  | \"🚀\"\n  | \"🛸\"\n  | \"🛎️\"\n  | \"🛎\"\n  | \"🧳\"\n  | \"⌛\"\n  | \"⏳\"\n  | \"⌚\"\n  | \"⏰\"\n  | \"⏱️\"\n  | \"⏱\"\n  | \"⏲️\"\n  | \"⏲\"\n  | \"🕰️\"\n  | \"🕰\"\n  | \"🕛\"\n  | \"🕧\"\n  | \"🕐\"\n  | \"🕜\"\n  | \"🕑\"\n  | \"🕝\"\n  | \"🕒\"\n  | \"🕞\"\n  | \"🕓\"\n  | \"🕟\"\n  | \"🕔\"\n  | \"🕠\"\n  | \"🕕\"\n  | \"🕡\"\n  | \"🕖\"\n  | \"🕢\"\n  | \"🕗\"\n  | \"🕣\"\n  | \"🕘\"\n  | \"🕤\"\n  | \"🕙\"\n  | \"🕥\"\n  | \"🕚\"\n  | \"🕦\"\n  | \"🌑\"\n  | \"🌒\"\n  | \"🌓\"\n  | \"🌔\"\n  | \"🌕\"\n  | \"🌖\"\n  | \"🌗\"\n  | \"🌘\"\n  | \"🌙\"\n  | \"🌚\"\n  | \"🌛\"\n  | \"🌜\"\n  | \"🌡️\"\n  | \"🌡\"\n  | \"☀️\"\n  | \"☀\"\n  | \"🌝\"\n  | \"🌞\"\n  | \"🪐\"\n  | \"⭐\"\n  | \"🌟\"\n  | \"🌠\"\n  | \"🌌\"\n  | \"☁️\"\n  | \"☁\"\n  | \"⛅\"\n  | \"⛈️\"\n  | \"⛈\"\n  | \"🌤️\"\n  | \"🌤\"\n  | \"🌥️\"\n  | \"🌥\"\n  | \"🌦️\"\n  | \"🌦\"\n  | \"🌧️\"\n  | \"🌧\"\n  | \"🌨️\"\n  | \"🌨\"\n  | \"🌩️\"\n  | \"🌩\"\n  | \"🌪️\"\n  | \"🌪\"\n  | \"🌫️\"\n  | \"🌫\"\n  | \"🌬️\"\n  | \"🌬\"\n  | \"🌀\"\n  | \"🌈\"\n  | \"🌂\"\n  | \"☂️\"\n  | \"☂\"\n  | \"☔\"\n  | \"⛱️\"\n  | \"⛱\"\n  | \"⚡\"\n  | \"❄️\"\n  | \"❄\"\n  | \"☃️\"\n  | \"☃\"\n  | \"⛄\"\n  | \"☄️\"\n  | \"☄\"\n  | \"🔥\"\n  | \"💧\"\n  | \"🌊\"\n  | \"🎃\"\n  | \"🎄\"\n  | \"🎆\"\n  | \"🎇\"\n  | \"🧨\"\n  | \"✨\"\n  | \"🎈\"\n  | \"🎉\"\n  | \"🎊\"\n  | \"🎋\"\n  | \"🎍\"\n  | \"🎎\"\n  | \"🎏\"\n  | \"🎐\"\n  | \"🎑\"\n  | \"🧧\"\n  | \"🎀\"\n  | \"🎁\"\n  | \"🎗️\"\n  | \"🎗\"\n  | \"🎟️\"\n  | \"🎟\"\n  | \"🎫\"\n  | \"🎖️\"\n  | \"🎖\"\n  | \"🏆\"\n  | \"🏅\"\n  | \"🥇\"\n  | \"🥈\"\n  | \"🥉\"\n  | \"⚽\"\n  | \"⚾\"\n  | \"🥎\"\n  | \"🏀\"\n  | \"🏐\"\n  | \"🏈\"\n  | \"🏉\"\n  | \"🎾\"\n  | \"🥏\"\n  | \"🎳\"\n  | \"🏏\"\n  | \"🏑\"\n  | \"🏒\"\n  | \"🥍\"\n  | \"🏓\"\n  | \"🏸\"\n  | \"🥊\"\n  | \"🥋\"\n  | \"🥅\"\n  | \"⛳\"\n  | \"⛸️\"\n  | \"⛸\"\n  | \"🎣\"\n  | \"🤿\"\n  | \"🎽\"\n  | \"🎿\"\n  | \"🛷\"\n  | \"🥌\"\n  | \"🎯\"\n  | \"🪀\"\n  | \"🪁\"\n  | \"🎱\"\n  | \"🔮\"\n  | \"🪄\"\n  | \"🧿\"\n  | \"🪬\"\n  | \"🎮\"\n  | \"🕹️\"\n  | \"🕹\"\n  | \"🎰\"\n  | \"🎲\"\n  | \"🧩\"\n  | \"🧸\"\n  | \"🪅\"\n  | \"🪩\"\n  | \"🪆\"\n  | \"♠️\"\n  | \"♠\"\n  | \"♥️\"\n  | \"♥\"\n  | \"♦️\"\n  | \"♦\"\n  | \"♣️\"\n  | \"♣\"\n  | \"♟️\"\n  | \"♟\"\n  | \"🃏\"\n  | \"🀄\"\n  | \"🎴\"\n  | \"🎭\"\n  | \"🖼️\"\n  | \"🖼\"\n  | \"🎨\"\n  | \"🧵\"\n  | \"🪡\"\n  | \"🧶\"\n  | \"🪢\"\n  | \"👓\"\n  | \"🕶️\"\n  | \"🕶\"\n  | \"🥽\"\n  | \"🥼\"\n  | \"🦺\"\n  | \"👔\"\n  | \"👕\"\n  | \"👖\"\n  | \"🧣\"\n  | \"🧤\"\n  | \"🧥\"\n  | \"🧦\"\n  | \"👗\"\n  | \"👘\"\n  | \"🥻\"\n  | \"🩱\"\n  | \"🩲\"\n  | \"🩳\"\n  | \"👙\"\n  | \"👚\"\n  | \"👛\"\n  | \"👜\"\n  | \"👝\"\n  | \"🛍️\"\n  | \"🛍\"\n  | \"🎒\"\n  | \"🩴\"\n  | \"👞\"\n  | \"👟\"\n  | \"🥾\"\n  | \"🥿\"\n  | \"👠\"\n  | \"👡\"\n  | \"🩰\"\n  | \"👢\"\n  | \"👑\"\n  | \"👒\"\n  | \"🎩\"\n  | \"🎓\"\n  | \"🧢\"\n  | \"🪖\"\n  | \"⛑️\"\n  | \"⛑\"\n  | \"📿\"\n  | \"💄\"\n  | \"💍\"\n  | \"💎\"\n  | \"🔇\"\n  | \"🔈\"\n  | \"🔉\"\n  | \"🔊\"\n  | \"📢\"\n  | \"📣\"\n  | \"📯\"\n  | \"🔔\"\n  | \"🔕\"\n  | \"🎼\"\n  | \"🎵\"\n  | \"🎶\"\n  | \"🎙️\"\n  | \"🎙\"\n  | \"🎚️\"\n  | \"🎚\"\n  | \"🎛️\"\n  | \"🎛\"\n  | \"🎤\"\n  | \"🎧\"\n  | \"📻\"\n  | \"🎷\"\n  | \"🪗\"\n  | \"🎸\"\n  | \"🎹\"\n  | \"🎺\"\n  | \"🎻\"\n  | \"🪕\"\n  | \"🥁\"\n  | \"🪘\"\n  | \"📱\"\n  | \"📲\"\n  | \"☎️\"\n  | \"☎\"\n  | \"📞\"\n  | \"📟\"\n  | \"📠\"\n  | \"🔋\"\n  | \"🪫\"\n  | \"🔌\"\n  | \"💻\"\n  | \"🖥️\"\n  | \"🖥\"\n  | \"🖨️\"\n  | \"🖨\"\n  | \"⌨️\"\n  | \"⌨\"\n  | \"🖱️\"\n  | \"🖱\"\n  | \"🖲️\"\n  | \"🖲\"\n  | \"💽\"\n  | \"💾\"\n  | \"💿\"\n  | \"📀\"\n  | \"🧮\"\n  | \"🎥\"\n  | \"🎞️\"\n  | \"🎞\"\n  | \"📽️\"\n  | \"📽\"\n  | \"🎬\"\n  | \"📺\"\n  | \"📷\"\n  | \"📸\"\n  | \"📹\"\n  | \"📼\"\n  | \"🔍\"\n  | \"🔎\"\n  | \"🕯️\"\n  | \"🕯\"\n  | \"💡\"\n  | \"🔦\"\n  | \"🏮\"\n  | \"🪔\"\n  | \"📔\"\n  | \"📕\"\n  | \"📖\"\n  | \"📗\"\n  | \"📘\"\n  | \"📙\"\n  | \"📚\"\n  | \"📓\"\n  | \"📒\"\n  | \"📃\"\n  | \"📜\"\n  | \"📄\"\n  | \"📰\"\n  | \"🗞️\"\n  | \"🗞\"\n  | \"📑\"\n  | \"🔖\"\n  | \"🏷️\"\n  | \"🏷\"\n  | \"💰\"\n  | \"🪙\"\n  | \"💴\"\n  | \"💵\"\n  | \"💶\"\n  | \"💷\"\n  | \"💸\"\n  | \"💳\"\n  | \"🧾\"\n  | \"💹\"\n  | \"✉️\"\n  | \"✉\"\n  | \"📧\"\n  | \"📨\"\n  | \"📩\"\n  | \"📤\"\n  | \"📥\"\n  | \"📦\"\n  | \"📫\"\n  | \"📪\"\n  | \"📬\"\n  | \"📭\"\n  | \"📮\"\n  | \"🗳️\"\n  | \"🗳\"\n  | \"✏️\"\n  | \"✏\"\n  | \"✒️\"\n  | \"✒\"\n  | \"🖋️\"\n  | \"🖋\"\n  | \"🖊️\"\n  | \"🖊\"\n  | \"🖌️\"\n  | \"🖌\"\n  | \"🖍️\"\n  | \"🖍\"\n  | \"📝\"\n  | \"💼\"\n  | \"📁\"\n  | \"📂\"\n  | \"🗂️\"\n  | \"🗂\"\n  | \"📅\"\n  | \"📆\"\n  | \"🗒️\"\n  | \"🗒\"\n  | \"🗓️\"\n  | \"🗓\"\n  | \"📇\"\n  | \"📈\"\n  | \"📉\"\n  | \"📊\"\n  | \"📋\"\n  | \"📌\"\n  | \"📍\"\n  | \"📎\"\n  | \"🖇️\"\n  | \"🖇\"\n  | \"📏\"\n  | \"📐\"\n  | \"✂️\"\n  | \"✂\"\n  | \"🗃️\"\n  | \"🗃\"\n  | \"🗄️\"\n  | \"🗄\"\n  | \"🗑️\"\n  | \"🗑\"\n  | \"🔒\"\n  | \"🔓\"\n  | \"🔏\"\n  | \"🔐\"\n  | \"🔑\"\n  | \"🗝️\"\n  | \"🗝\"\n  | \"🔨\"\n  | \"🪓\"\n  | \"⛏️\"\n  | \"⛏\"\n  | \"⚒️\"\n  | \"⚒\"\n  | \"🛠️\"\n  | \"🛠\"\n  | \"🗡️\"\n  | \"🗡\"\n  | \"⚔️\"\n  | \"⚔\"\n  | \"🔫\"\n  | \"🪃\"\n  | \"🏹\"\n  | \"🛡️\"\n  | \"🛡\"\n  | \"🪚\"\n  | \"🔧\"\n  | \"🪛\"\n  | \"🔩\"\n  | \"⚙️\"\n  | \"⚙\"\n  | \"🗜️\"\n  | \"🗜\"\n  | \"⚖️\"\n  | \"⚖\"\n  | \"🦯\"\n  | \"🔗\"\n  | \"⛓️\"\n  | \"⛓\"\n  | \"🪝\"\n  | \"🧰\"\n  | \"🧲\"\n  | \"🪜\"\n  | \"⚗️\"\n  | \"⚗\"\n  | \"🧪\"\n  | \"🧫\"\n  | \"🧬\"\n  | \"🔬\"\n  | \"🔭\"\n  | \"📡\"\n  | \"💉\"\n  | \"🩸\"\n  | \"💊\"\n  | \"🩹\"\n  | \"🩼\"\n  | \"🩺\"\n  | \"🩻\"\n  | \"🚪\"\n  | \"🛗\"\n  | \"🪞\"\n  | \"🪟\"\n  | \"🛏️\"\n  | \"🛏\"\n  | \"🛋️\"\n  | \"🛋\"\n  | \"🪑\"\n  | \"🚽\"\n  | \"🪠\"\n  | \"🚿\"\n  | \"🛁\"\n  | \"🪤\"\n  | \"🪒\"\n  | \"🧴\"\n  | \"🧷\"\n  | \"🧹\"\n  | \"🧺\"\n  | \"🧻\"\n  | \"🪣\"\n  | \"🧼\"\n  | \"🫧\"\n  | \"🪥\"\n  | \"🧽\"\n  | \"🧯\"\n  | \"🛒\"\n  | \"🚬\"\n  | \"⚰️\"\n  | \"⚰\"\n  | \"🪦\"\n  | \"⚱️\"\n  | \"⚱\"\n  | \"🗿\"\n  | \"🪧\"\n  | \"🪪\"\n  | \"🏧\"\n  | \"🚮\"\n  | \"🚰\"\n  | \"♿\"\n  | \"🚹\"\n  | \"🚺\"\n  | \"🚻\"\n  | \"🚼\"\n  | \"🚾\"\n  | \"🛂\"\n  | \"🛃\"\n  | \"🛄\"\n  | \"🛅\"\n  | \"⚠️\"\n  | \"⚠\"\n  | \"🚸\"\n  | \"⛔\"\n  | \"🚫\"\n  | \"🚳\"\n  | \"🚭\"\n  | \"🚯\"\n  | \"🚱\"\n  | \"🚷\"\n  | \"📵\"\n  | \"🔞\"\n  | \"☢️\"\n  | \"☢\"\n  | \"☣️\"\n  | \"☣\"\n  | \"⬆️\"\n  | \"⬆\"\n  | \"↗️\"\n  | \"↗\"\n  | \"➡️\"\n  | \"➡\"\n  | \"↘️\"\n  | \"↘\"\n  | \"⬇️\"\n  | \"⬇\"\n  | \"↙️\"\n  | \"↙\"\n  | \"⬅️\"\n  | \"⬅\"\n  | \"↖️\"\n  | \"↖\"\n  | \"↕️\"\n  | \"↕\"\n  | \"↔️\"\n  | \"↩️\"\n  | \"↩\"\n  | \"↪️\"\n  | \"↪\"\n  | \"⤴️\"\n  | \"⤴\"\n  | \"⤵️\"\n  | \"⤵\"\n  | \"🔃\"\n  | \"🔄\"\n  | \"🔙\"\n  | \"🔚\"\n  | \"🔛\"\n  | \"🔜\"\n  | \"🔝\"\n  | \"🛐\"\n  | \"⚛️\"\n  | \"⚛\"\n  | \"🕉️\"\n  | \"🕉\"\n  | \"✡️\"\n  | \"✡\"\n  | \"☸️\"\n  | \"☸\"\n  | \"☯️\"\n  | \"☯\"\n  | \"✝️\"\n  | \"✝\"\n  | \"☦️\"\n  | \"☦\"\n  | \"☪️\"\n  | \"☪\"\n  | \"☮️\"\n  | \"☮\"\n  | \"🕎\"\n  | \"🔯\"\n  | \"♈\"\n  | \"♉\"\n  | \"♊\"\n  | \"♋\"\n  | \"♌\"\n  | \"♍\"\n  | \"♎\"\n  | \"♏\"\n  | \"♐\"\n  | \"♑\"\n  | \"♒\"\n  | \"♓\"\n  | \"⛎\"\n  | \"🔀\"\n  | \"🔁\"\n  | \"🔂\"\n  | \"▶️\"\n  | \"⏩\"\n  | \"⏭️\"\n  | \"⏭\"\n  | \"⏯️\"\n  | \"⏯\"\n  | \"◀️\"\n  | \"⏪\"\n  | \"⏮️\"\n  | \"⏮\"\n  | \"🔼\"\n  | \"⏫\"\n  | \"🔽\"\n  | \"⏬\"\n  | \"⏸️\"\n  | \"⏸\"\n  | \"⏹️\"\n  | \"⏹\"\n  | \"⏺️\"\n  | \"⏺\"\n  | \"⏏️\"\n  | \"⏏\"\n  | \"🎦\"\n  | \"🔅\"\n  | \"🔆\"\n  | \"📶\"\n  | \"📳\"\n  | \"📴\"\n  | \"♀️\"\n  | \"♀\"\n  | \"♂️\"\n  | \"♂\"\n  | \"⚧️\"\n  | \"⚧\"\n  | \"✖️\"\n  | \"✖\"\n  | \"➕\"\n  | \"➖\"\n  | \"➗\"\n  | \"🟰\"\n  | \"♾️\"\n  | \"♾\"\n  | \"‼️\"\n  | \"‼\"\n  | \"⁉️\"\n  | \"⁉\"\n  | \"❓\"\n  | \"❔\"\n  | \"❕\"\n  | \"❗\"\n  | \"〰️\"\n  | \"〰\"\n  | \"💱\"\n  | \"💲\"\n  | \"⚕️\"\n  | \"⚕\"\n  | \"♻️\"\n  | \"♻\"\n  | \"⚜️\"\n  | \"⚜\"\n  | \"🔱\"\n  | \"📛\"\n  | \"🔰\"\n  | \"⭕\"\n  | \"✅\"\n  | \"☑️\"\n  | \"☑\"\n  | \"✔️\"\n  | \"✔\"\n  | \"❌\"\n  | \"❎\"\n  | \"➰\"\n  | \"➿\"\n  | \"〽️\"\n  | \"〽\"\n  | \"✳️\"\n  | \"✳\"\n  | \"✴️\"\n  | \"✴\"\n  | \"❇️\"\n  | \"❇\"\n  | \"©️\"\n  | \"©\"\n  | \"®️\"\n  | \"®\"\n  | \"™️\"\n  | \"#️⃣\"\n  | \"#⃣\"\n  | \"*️⃣\"\n  | \"*⃣\"\n  | \"0️⃣\"\n  | \"0⃣\"\n  | \"1️⃣\"\n  | \"1⃣\"\n  | \"2️⃣\"\n  | \"2⃣\"\n  | \"3️⃣\"\n  | \"3⃣\"\n  | \"4️⃣\"\n  | \"4⃣\"\n  | \"5️⃣\"\n  | \"5⃣\"\n  | \"6️⃣\"\n  | \"6⃣\"\n  | \"7️⃣\"\n  | \"7⃣\"\n  | \"8️⃣\"\n  | \"8⃣\"\n  | \"9️⃣\"\n  | \"9⃣\"\n  | \"🔟\"\n  | \"🔠\"\n  | \"🔡\"\n  | \"🔢\"\n  | \"🔣\"\n  | \"🔤\"\n  | \"🅰️\"\n  | \"🅰\"\n  | \"🆎\"\n  | \"🅱️\"\n  | \"🅱\"\n  | \"🆑\"\n  | \"🆒\"\n  | \"🆓\"\n  | \"ℹ️\"\n  | \"ℹ\"\n  | \"🆔\"\n  | \"Ⓜ️\"\n  | \"Ⓜ\"\n  | \"🆕\"\n  | \"🆖\"\n  | \"🅾️\"\n  | \"🅾\"\n  | \"🆗\"\n  | \"🅿️\"\n  | \"🅿\"\n  | \"🆘\"\n  | \"🆙\"\n  | \"🆚\"\n  | \"🈁\"\n  | \"🈂️\"\n  | \"🈂\"\n  | \"🈷️\"\n  | \"🈷\"\n  | \"🈶\"\n  | \"🈯\"\n  | \"🉐\"\n  | \"🈹\"\n  | \"🈚\"\n  | \"🈲\"\n  | \"🉑\"\n  | \"🈸\"\n  | \"🈴\"\n  | \"🈳\"\n  | \"㊗️\"\n  | \"㊗\"\n  | \"㊙️\"\n  | \"㊙\"\n  | \"🈺\"\n  | \"🈵\"\n  | \"🔴\"\n  | \"🟠\"\n  | \"🟡\"\n  | \"🟢\"\n  | \"🔵\"\n  | \"🟣\"\n  | \"🟤\"\n  | \"⚫\"\n  | \"⚪\"\n  | \"🟥\"\n  | \"🟧\"\n  | \"🟨\"\n  | \"🟩\"\n  | \"🟦\"\n  | \"🟪\"\n  | \"🟫\"\n  | \"⬛\"\n  | \"⬜\"\n  | \"◼️\"\n  | \"◼\"\n  | \"◻️\"\n  | \"◻\"\n  | \"◾\"\n  | \"◽\"\n  | \"▪️\"\n  | \"▪\"\n  | \"▫️\"\n  | \"▫\"\n  | \"🔶\"\n  | \"🔷\"\n  | \"🔸\"\n  | \"🔹\"\n  | \"🔺\"\n  | \"🔻\"\n  | \"💠\"\n  | \"🔘\"\n  | \"🔳\"\n  | \"🔲\"\n  | \"🏁\"\n  | \"🚩\"\n  | \"🎌\"\n  | \"🏴\"\n  | \"🏳️\"\n  | \"🏳\"\n  | \"🏳️‍🌈\"\n  | \"🏳‍🌈\"\n  | \"🏳️‍⚧️\"\n  | \"🏴‍☠️\"\n  | \"🏴‍☠\"\n  | \"🇦🇨\"\n  | \"🇦🇩\"\n  | \"🇦🇪\"\n  | \"🇦🇫\"\n  | \"🇦🇬\"\n  | \"🇦🇮\"\n  | \"🇦🇱\"\n  | \"🇦🇲\"\n  | \"🇦🇴\"\n  | \"🇦🇶\"\n  | \"🇦🇷\"\n  | \"🇦🇸\"\n  | \"🇦🇹\"\n  | \"🇦🇺\"\n  | \"🇦🇼\"\n  | \"🇦🇽\"\n  | \"🇦🇿\"\n  | \"🇧🇦\"\n  | \"🇧🇧\"\n  | \"🇧🇩\"\n  | \"🇧🇪\"\n  | \"🇧🇫\"\n  | \"🇧🇬\"\n  | \"🇧🇭\"\n  | \"🇧🇮\"\n  | \"🇧🇯\"\n  | \"🇧🇱\"\n  | \"🇧🇲\"\n  | \"🇧🇳\"\n  | \"🇧🇴\"\n  | \"🇧🇶\"\n  | \"🇧🇷\"\n  | \"🇧🇸\"\n  | \"🇧🇹\"\n  | \"🇧🇻\"\n  | \"🇧🇼\"\n  | \"🇧🇾\"\n  | \"🇧🇿\"\n  | \"🇨🇦\"\n  | \"🇨🇨\"\n  | \"🇨🇩\"\n  | \"🇨🇫\"\n  | \"🇨🇬\"\n  | \"🇨🇭\"\n  | \"🇨🇮\"\n  | \"🇨🇰\"\n  | \"🇨🇱\"\n  | \"🇨🇲\"\n  | \"🇨🇳\"\n  | \"🇨🇴\"\n  | \"🇨🇵\"\n  | \"🇨🇷\"\n  | \"🇨🇺\"\n  | \"🇨🇻\"\n  | \"🇨🇼\"\n  | \"🇨🇽\"\n  | \"🇨🇾\"\n  | \"🇨🇿\"\n  | \"🇩🇪\"\n  | \"🇩🇬\"\n  | \"🇩🇯\"\n  | \"🇩🇰\"\n  | \"🇩🇲\"\n  | \"🇩🇴\"\n  | \"🇩🇿\"\n  | \"🇪🇦\"\n  | \"🇪🇨\"\n  | \"🇪🇪\"\n  | \"🇪🇬\"\n  | \"🇪🇭\"\n  | \"🇪🇷\"\n  | \"🇪🇸\"\n  | \"🇪🇹\"\n  | \"🇪🇺\"\n  | \"🇫🇮\"\n  | \"🇫🇯\"\n  | \"🇫🇰\"\n  | \"🇫🇲\"\n  | \"🇫🇴\"\n  | \"🇫🇷\"\n  | \"🇬🇦\"\n  | \"🇬🇧\"\n  | \"🇬🇩\"\n  | \"🇬🇪\"\n  | \"🇬🇫\"\n  | \"🇬🇬\"\n  | \"🇬🇭\"\n  | \"🇬🇮\"\n  | \"🇬🇱\"\n  | \"🇬🇲\"\n  | \"🇬🇳\"\n  | \"🇬🇵\"\n  | \"🇬🇶\"\n  | \"🇬🇷\"\n  | \"🇬🇸\"\n  | \"🇬🇹\"\n  | \"🇬🇺\"\n  | \"🇬🇼\"\n  | \"🇬🇾\"\n  | \"🇭🇰\"\n  | \"🇭🇲\"\n  | \"🇭🇳\"\n  | \"🇭🇷\"\n  | \"🇭🇹\"\n  | \"🇭🇺\"\n  | \"🇮🇨\"\n  | \"🇮🇩\"\n  | \"🇮🇪\"\n  | \"🇮🇱\"\n  | \"🇮🇲\"\n  | \"🇮🇳\"\n  | \"🇮🇴\"\n  | \"🇮🇶\"\n  | \"🇮🇷\"\n  | \"🇮🇸\"\n  | \"🇮🇹\"\n  | \"🇯🇪\"\n  | \"🇯🇲\"\n  | \"🇯🇴\"\n  | \"🇯🇵\"\n  | \"🇰🇪\"\n  | \"🇰🇬\"\n  | \"🇰🇭\"\n  | \"🇰🇮\"\n  | \"🇰🇲\"\n  | \"🇰🇳\"\n  | \"🇰🇵\"\n  | \"🇰🇷\"\n  | \"🇰🇼\"\n  | \"🇰🇾\"\n  | \"🇰🇿\"\n  | \"🇱🇦\"\n  | \"🇱🇧\"\n  | \"🇱🇨\"\n  | \"🇱🇮\"\n  | \"🇱🇰\"\n  | \"🇱🇷\"\n  | \"🇱🇸\"\n  | \"🇱🇹\"\n  | \"🇱🇺\"\n  | \"🇱🇻\"\n  | \"🇱🇾\"\n  | \"🇲🇦\"\n  | \"🇲🇨\"\n  | \"🇲🇩\"\n  | \"🇲🇪\"\n  | \"🇲🇫\"\n  | \"🇲🇬\"\n  | \"🇲🇭\"\n  | \"🇲🇰\"\n  | \"🇲🇱\"\n  | \"🇲🇲\"\n  | \"🇲🇳\"\n  | \"🇲🇴\"\n  | \"🇲🇵\"\n  | \"🇲🇶\"\n  | \"🇲🇷\"\n  | \"🇲🇸\"\n  | \"🇲🇹\"\n  | \"🇲🇺\"\n  | \"🇲🇻\"\n  | \"🇲🇼\"\n  | \"🇲🇽\"\n  | \"🇲🇾\"\n  | \"🇲🇿\"\n  | \"🇳🇦\"\n  | \"🇳🇨\"\n  | \"🇳🇪\"\n  | \"🇳🇫\"\n  | \"🇳🇬\"\n  | \"🇳🇮\"\n  | \"🇳🇱\"\n  | \"🇳🇴\"\n  | \"🇳🇵\"\n  | \"🇳🇷\"\n  | \"🇳🇺\"\n  | \"🇳🇿\"\n  | \"🇴🇲\"\n  | \"🇵🇦\"\n  | \"🇵🇪\"\n  | \"🇵🇫\"\n  | \"🇵🇬\"\n  | \"🇵🇭\"\n  | \"🇵🇰\"\n  | \"🇵🇱\"\n  | \"🇵🇲\"\n  | \"🇵🇳\"\n  | \"🇵🇷\"\n  | \"🇵🇸\"\n  | \"🇵🇹\"\n  | \"🇵🇼\"\n  | \"🇵🇾\"\n  | \"🇶🇦\"\n  | \"🇷🇪\"\n  | \"🇷🇴\"\n  | \"🇷🇸\"\n  | \"🇷🇺\"\n  | \"🇷🇼\"\n  | \"🇸🇦\"\n  | \"🇸🇧\"\n  | \"🇸🇨\"\n  | \"🇸🇩\"\n  | \"🇸🇪\"\n  | \"🇸🇬\"\n  | \"🇸🇭\"\n  | \"🇸🇮\"\n  | \"🇸🇯\"\n  | \"🇸🇰\"\n  | \"🇸🇱\"\n  | \"🇸🇲\"\n  | \"🇸🇳\"\n  | \"🇸🇴\"\n  | \"🇸🇷\"\n  | \"🇸🇸\"\n  | \"🇸🇹\"\n  | \"🇸🇻\"\n  | \"🇸🇽\"\n  | \"🇸🇾\"\n  | \"🇸🇿\"\n  | \"🇹🇦\"\n  | \"🇹🇨\"\n  | \"🇹🇩\"\n  | \"🇹🇫\"\n  | \"🇹🇬\"\n  | \"🇹🇭\"\n  | \"🇹🇯\"\n  | \"🇹🇰\"\n  | \"🇹🇱\"\n  | \"🇹🇲\"\n  | \"🇹🇳\"\n  | \"🇹🇴\"\n  | \"🇹🇷\"\n  | \"🇹🇹\"\n  | \"🇹🇻\"\n  | \"🇹🇼\"\n  | \"🇹🇿\"\n  | \"🇺🇦\"\n  | \"🇺🇬\"\n  | \"🇺🇲\"\n  | \"🇺🇳\"\n  | \"🇺🇸\"\n  | \"🇺🇾\"\n  | \"🇺🇿\"\n  | \"🇻🇦\"\n  | \"🇻🇨\"\n  | \"🇻🇪\"\n  | \"🇻🇬\"\n  | \"🇻🇮\"\n  | \"🇻🇳\"\n  | \"🇻🇺\"\n  | \"🇼🇫\"\n  | \"🇼🇸\"\n  | \"🇽🇰\"\n  | \"🇾🇪\"\n  | \"🇾🇹\"\n  | \"🇿🇦\"\n  | \"🇿🇲\"\n  | \"🇿🇼\"\n  | \"🏴󠁧󠁢󠁥󠁮󠁧󠁿\"\n  | \"🏴󠁧󠁢󠁳󠁣󠁴󠁿\"\n  | \"🏴󠁧󠁢󠁷󠁬󠁳󠁿\"\n\ntype EmojiPageIconResponse = {\n  // Type of icon. In this case, an emoji.\n  type: \"emoji\"\n  // The emoji character used as the icon.\n  emoji: EmojiRequest\n}\n\ntype ExternalPageIconResponse = {\n  // Type of icon. In this case, an external URL.\n  type: \"external\"\n  // The external URL for the icon.\n  external: {\n    // The URL of the external file or resource.\n    url: string\n  }\n}\n\ntype FilePageIconResponse = {\n  // Type of icon. In this case, a file.\n  type: \"file\"\n  // The file URL for the icon.\n  file: InternalFileResponse\n}\n\ntype CustomEmojiPageIconResponse = {\n  // Type of icon. In this case, a custom emoji.\n  type: \"custom_emoji\"\n  // The custom emoji details for the icon.\n  custom_emoji: CustomEmojiResponse\n}\n\ntype PageIconResponse =\n  | EmojiPageIconResponse\n  | FilePageIconResponse\n  | ExternalPageIconResponse\n  | CustomEmojiPageIconResponse\n\ntype ExternalPageCoverResponse = {\n  // Type of cover. In this case, an external URL.\n  type: \"external\"\n  // The external URL for the cover.\n  external: {\n    // The URL of the external file or resource.\n    url: string\n  }\n}\n\ntype FilePageCoverResponse = {\n  // Type of cover. In this case, a file.\n  type: \"file\"\n  // The file URL for the cover.\n  file: InternalFileResponse\n}\n\ntype PageCoverResponse = FilePageCoverResponse | ExternalPageCoverResponse\n\nexport type PageObjectResponse = {\n  parent: ParentForBlockBasedObjectResponse\n  properties: Record<\n    string,\n    | { type: \"number\"; number: number | null; id: string }\n    | { type: \"url\"; url: string | null; id: string }\n    | { type: \"select\"; select: PartialSelectResponse | null; id: string }\n    | {\n        type: \"multi_select\"\n        multi_select: Array<PartialSelectResponse>\n        id: string\n      }\n    | { type: \"status\"; status: PartialSelectResponse | null; id: string }\n    | { type: \"date\"; date: DateResponse | null; id: string }\n    | { type: \"email\"; email: string | null; id: string }\n    | { type: \"phone_number\"; phone_number: string | null; id: string }\n    | { type: \"checkbox\"; checkbox: boolean; id: string }\n    | {\n        type: \"files\"\n        files: Array<\n          | { file: InternalFileResponse; name: StringRequest; type?: \"file\" }\n          | {\n              external: { url: TextRequest }\n              name: StringRequest\n              type?: \"external\"\n            }\n        >\n        id: string\n      }\n    | {\n        type: \"created_by\"\n        created_by: PartialUserObjectResponse | UserObjectResponse\n        id: string\n      }\n    | { type: \"created_time\"; created_time: string; id: string }\n    | {\n        type: \"last_edited_by\"\n        last_edited_by: PartialUserObjectResponse | UserObjectResponse\n        id: string\n      }\n    | { type: \"last_edited_time\"; last_edited_time: string; id: string }\n    | { type: \"formula\"; formula: FormulaPropertyResponse; id: string }\n    | { type: \"button\"; button: Record<string, never>; id: string }\n    | {\n        type: \"unique_id\"\n        unique_id: { prefix: string | null; number: number | null }\n        id: string\n      }\n    | {\n        type: \"verification\"\n        verification:\n          | VerificationPropertyUnverifiedResponse\n          | VerificationPropertyResponse\n          | null\n        id: string\n      }\n    | { type: \"title\"; title: Array<RichTextItemResponse>; id: string }\n    | { type: \"rich_text\"; rich_text: Array<RichTextItemResponse>; id: string }\n    | {\n        type: \"people\"\n        people: Array<\n          PartialUserObjectResponse | UserObjectResponse | GroupObjectResponse\n        >\n        id: string\n      }\n    | { type: \"relation\"; relation: Array<{ id: string }>; id: string }\n    | {\n        type: \"rollup\"\n        rollup:\n          | { type: \"number\"; number: number | null; function: RollupFunction }\n          | {\n              type: \"date\"\n              date: DateResponse | null\n              function: RollupFunction\n            }\n          | {\n              type: \"array\"\n              array: Array<\n                | { type: \"number\"; number: number | null }\n                | { type: \"url\"; url: string | null }\n                | { type: \"select\"; select: PartialSelectResponse | null }\n                | {\n                    type: \"multi_select\"\n                    multi_select: Array<PartialSelectResponse>\n                  }\n                | { type: \"status\"; status: PartialSelectResponse | null }\n                | { type: \"date\"; date: DateResponse | null }\n                | { type: \"email\"; email: string | null }\n                | { type: \"phone_number\"; phone_number: string | null }\n                | { type: \"checkbox\"; checkbox: boolean }\n                | {\n                    type: \"files\"\n                    files: Array<\n                      | {\n                          file: InternalFileResponse\n                          name: StringRequest\n                          type?: \"file\"\n                        }\n                      | {\n                          external: { url: TextRequest }\n                          name: StringRequest\n                          type?: \"external\"\n                        }\n                    >\n                  }\n                | {\n                    type: \"created_by\"\n                    created_by: PartialUserObjectResponse | UserObjectResponse\n                  }\n                | { type: \"created_time\"; created_time: string }\n                | {\n                    type: \"last_edited_by\"\n                    last_edited_by:\n                      | PartialUserObjectResponse\n                      | UserObjectResponse\n                  }\n                | { type: \"last_edited_time\"; last_edited_time: string }\n                | { type: \"formula\"; formula: FormulaPropertyResponse }\n                | { type: \"button\"; button: Record<string, never> }\n                | {\n                    type: \"unique_id\"\n                    unique_id: { prefix: string | null; number: number | null }\n                  }\n                | {\n                    type: \"verification\"\n                    verification:\n                      | VerificationPropertyUnverifiedResponse\n                      | VerificationPropertyResponse\n                      | null\n                  }\n                | { type: \"title\"; title: Array<RichTextItemResponse> }\n                | { type: \"rich_text\"; rich_text: Array<RichTextItemResponse> }\n                | {\n                    type: \"people\"\n                    people: Array<\n                      | PartialUserObjectResponse\n                      | UserObjectResponse\n                      | GroupObjectResponse\n                    >\n                  }\n                | { type: \"relation\"; relation: Array<{ id: string }> }\n              >\n              function: RollupFunction\n            }\n        id: string\n      }\n  >\n  icon: PageIconResponse | null\n  cover: PageCoverResponse | null\n  created_by: PartialUserObjectResponse\n  last_edited_by: PartialUserObjectResponse\n  // Whether the page is locked from editing in the Notion app UI.\n  is_locked: boolean\n  object: \"page\"\n  id: string\n  created_time: string\n  last_edited_time: string\n  archived: boolean\n  in_trash: boolean\n  url: string\n  public_url: string | null\n}\n\nexport type PartialPageObjectResponse = { object: \"page\"; id: string }\n\ntype NumberFormat =\n  | \"number\"\n  | \"number_with_commas\"\n  | \"percent\"\n  | \"dollar\"\n  | \"australian_dollar\"\n  | \"canadian_dollar\"\n  | \"singapore_dollar\"\n  | \"euro\"\n  | \"pound\"\n  | \"yen\"\n  | \"ruble\"\n  | \"rupee\"\n  | \"won\"\n  | \"yuan\"\n  | \"real\"\n  | \"lira\"\n  | \"rupiah\"\n  | \"franc\"\n  | \"hong_kong_dollar\"\n  | \"new_zealand_dollar\"\n  | \"krona\"\n  | \"norwegian_krone\"\n  | \"mexican_peso\"\n  | \"rand\"\n  | \"new_taiwan_dollar\"\n  | \"danish_krone\"\n  | \"zloty\"\n  | \"baht\"\n  | \"forint\"\n  | \"koruna\"\n  | \"shekel\"\n  | \"chilean_peso\"\n  | \"philippine_peso\"\n  | \"dirham\"\n  | \"colombian_peso\"\n  | \"riyal\"\n  | \"ringgit\"\n  | \"leu\"\n  | \"argentine_peso\"\n  | \"uruguayan_peso\"\n  | \"peruvian_sol\"\n\ntype PropertyDescriptionRequest = string\n\ntype NumberDatabasePropertyConfigResponse = {\n  // Always `number`\n  type: \"number\"\n  number: {\n    // The number format for the property.\n    format: NumberFormat\n  }\n}\n\ntype FormulaDatabasePropertyConfigResponse = {\n  // Always `formula`\n  type: \"formula\"\n  formula: { expression: string }\n}\n\ntype SelectPropertyResponse = {\n  id: string\n  name: string\n  color: SelectColor\n  description: string | null\n}\n\ntype SelectDatabasePropertyConfigResponse = {\n  // Always `select`\n  type: \"select\"\n  select: { options: Array<SelectPropertyResponse> }\n}\n\ntype MultiSelectDatabasePropertyConfigResponse = {\n  // Always `multi_select`\n  type: \"multi_select\"\n  multi_select: { options: Array<SelectPropertyResponse> }\n}\n\ntype StatusPropertyResponse = {\n  // The ID of the status option.\n  id: string\n  // The name of the status option.\n  name: string\n  // The color of the status option.\n  color: SelectColor\n  // The description of the status option.\n  description: string | null\n}\n\ntype StatusDatabasePropertyConfigResponse = {\n  // Always `status`\n  type: \"status\"\n  status: {\n    // The options for the status property.\n    options: Array<StatusPropertyResponse>\n    // The groups for the status property.\n    groups: Array<{\n      // The ID of the status group.\n      id: string\n      // The name of the status group.\n      name: string\n      // The color of the status group.\n      color: SelectColor\n      // The IDs of the status options in this group.\n      option_ids: Array<string>\n    }>\n  }\n}\n\ntype SinglePropertyDatabasePropertyRelationConfigResponse = {\n  // Always `single_property`\n  type: \"single_property\"\n  single_property: EmptyObject\n}\n\ntype DualPropertyDatabasePropertyRelationConfigResponse = {\n  // Always `dual_property`\n  type?: \"dual_property\"\n  dual_property: { synced_property_id: string; synced_property_name: string }\n}\n\ntype DatabasePropertyRelationConfigResponse =\n  DatabasePropertyRelationConfigResponseCommon &\n    (\n      | SinglePropertyDatabasePropertyRelationConfigResponse\n      | DualPropertyDatabasePropertyRelationConfigResponse\n    )\n\ntype RelationDatabasePropertyConfigResponse = {\n  // Always `relation`\n  type: \"relation\"\n  relation: DatabasePropertyRelationConfigResponse\n}\n\ntype RollupDatabasePropertyConfigResponse = {\n  // Always `rollup`\n  type: \"rollup\"\n  rollup: {\n    // The function to use for the rollup, e.g. count, count_values, percent_not_empty, max.\n    function: RollupFunction\n    rollup_property_name: string\n    relation_property_name: string\n    rollup_property_id: string\n    relation_property_id: string\n  }\n}\n\ntype UniqueIdDatabasePropertyConfigResponse = {\n  // Always `unique_id`\n  type: \"unique_id\"\n  unique_id: {\n    // The prefix for the unique ID.\n    prefix: string | null\n  }\n}\n\ntype TitleDatabasePropertyConfigResponse = {\n  // Always `title`\n  type: \"title\"\n  title: EmptyObject\n}\n\ntype RichTextDatabasePropertyConfigResponse = {\n  // Always `rich_text`\n  type: \"rich_text\"\n  rich_text: EmptyObject\n}\n\ntype UrlDatabasePropertyConfigResponse = {\n  // Always `url`\n  type: \"url\"\n  url: EmptyObject\n}\n\ntype PeopleDatabasePropertyConfigResponse = {\n  // Always `people`\n  type: \"people\"\n  people: EmptyObject\n}\n\ntype FilesDatabasePropertyConfigResponse = {\n  // Always `files`\n  type: \"files\"\n  files: EmptyObject\n}\n\ntype EmailDatabasePropertyConfigResponse = {\n  // Always `email`\n  type: \"email\"\n  email: EmptyObject\n}\n\ntype PhoneNumberDatabasePropertyConfigResponse = {\n  // Always `phone_number`\n  type: \"phone_number\"\n  phone_number: EmptyObject\n}\n\ntype DateDatabasePropertyConfigResponse = {\n  // Always `date`\n  type: \"date\"\n  date: EmptyObject\n}\n\ntype CheckboxDatabasePropertyConfigResponse = {\n  // Always `checkbox`\n  type: \"checkbox\"\n  checkbox: EmptyObject\n}\n\ntype CreatedByDatabasePropertyConfigResponse = {\n  // Always `created_by`\n  type: \"created_by\"\n  created_by: EmptyObject\n}\n\ntype CreatedTimeDatabasePropertyConfigResponse = {\n  // Always `created_time`\n  type: \"created_time\"\n  created_time: EmptyObject\n}\n\ntype LastEditedByDatabasePropertyConfigResponse = {\n  // Always `last_edited_by`\n  type: \"last_edited_by\"\n  last_edited_by: EmptyObject\n}\n\ntype LastEditedTimeDatabasePropertyConfigResponse = {\n  // Always `last_edited_time`\n  type: \"last_edited_time\"\n  last_edited_time: EmptyObject\n}\n\ntype DatabasePropertyConfigResponse = DatabasePropertyConfigResponseCommon &\n  (\n    | NumberDatabasePropertyConfigResponse\n    | FormulaDatabasePropertyConfigResponse\n    | SelectDatabasePropertyConfigResponse\n    | MultiSelectDatabasePropertyConfigResponse\n    | StatusDatabasePropertyConfigResponse\n    | RelationDatabasePropertyConfigResponse\n    | RollupDatabasePropertyConfigResponse\n    | UniqueIdDatabasePropertyConfigResponse\n    | TitleDatabasePropertyConfigResponse\n    | RichTextDatabasePropertyConfigResponse\n    | UrlDatabasePropertyConfigResponse\n    | PeopleDatabasePropertyConfigResponse\n    | FilesDatabasePropertyConfigResponse\n    | EmailDatabasePropertyConfigResponse\n    | PhoneNumberDatabasePropertyConfigResponse\n    | DateDatabasePropertyConfigResponse\n    | CheckboxDatabasePropertyConfigResponse\n    | CreatedByDatabasePropertyConfigResponse\n    | CreatedTimeDatabasePropertyConfigResponse\n    | LastEditedByDatabasePropertyConfigResponse\n    | LastEditedTimeDatabasePropertyConfigResponse\n  )\n\nexport type PartialDataSourceObjectResponse = {\n  // The data source object type name.\n  object: \"data_source\"\n  // The ID of the data source.\n  id: IdResponse\n  // The properties schema of the data source.\n  properties: Record<string, DatabasePropertyConfigResponse>\n}\n\ntype DataSourceParentResponse = {\n  // The parent type.\n  type: \"data_source_id\"\n  // The ID of the parent data source.\n  data_source_id: IdResponse\n}\n\n/**\n * The parent of the data source. This is typically a database (`database_id`), but for\n * externally synced data sources, can be another data source (`data_source_id`).\n */\ntype ParentOfDataSourceResponse =\n  | DatabaseParentResponse\n  | DataSourceParentResponse\n\nexport type DataSourceObjectResponse = {\n  // The data source object type name.\n  object: \"data_source\"\n  // The ID of the data source.\n  id: IdResponse\n  // The title of the data source.\n  title: Array<RichTextItemResponse>\n  // The description of the data source.\n  description: Array<RichTextItemResponse>\n  // The parent of the data source.\n  parent: ParentOfDataSourceResponse\n  // The parent of the data source's containing database.\n  database_parent:\n    | PageIdParentForBlockBasedObjectResponse\n    | WorkspaceParentForBlockBasedObjectResponse\n    | DatabaseParentResponse\n    | BlockIdParentForBlockBasedObjectResponse\n    | DataSourceParentResponse\n  // Whether the data source is inline.\n  is_inline: boolean\n  // Whether the data source is archived.\n  archived: boolean\n  // Whether the data source is in the trash.\n  in_trash: boolean\n  // The time when the data source was created.\n  created_time: string\n  // The time when the data source was last edited.\n  last_edited_time: string\n  // The user who created the data source.\n  created_by: PartialUserObjectResponse\n  // The user who last edited the data source.\n  last_edited_by: PartialUserObjectResponse\n  // The properties schema of the data source.\n  properties: Record<string, DatabasePropertyConfigResponse>\n  // The icon of the data source.\n  icon: PageIconResponse | null\n  // The cover of the data source.\n  cover: PageCoverResponse | null\n  // The URL of the data source.\n  url: string\n  // The public URL of the data source if it is publicly accessible.\n  public_url: string | null\n}\n\nexport type PartialBlockObjectResponse = { object: \"block\"; id: string }\n\n/**\n * One of: `default`, `gray`, `brown`, `orange`, `yellow`, `green`, `blue`, `purple`,\n * `pink`, `red`, `default_background`, `gray_background`, `brown_background`,\n * `orange_background`, `yellow_background`, `green_background`, `blue_background`,\n * `purple_background`, `pink_background`, `red_background`\n */\ntype ApiColor =\n  | \"default\"\n  | \"gray\"\n  | \"brown\"\n  | \"orange\"\n  | \"yellow\"\n  | \"green\"\n  | \"blue\"\n  | \"purple\"\n  | \"pink\"\n  | \"red\"\n  | \"default_background\"\n  | \"gray_background\"\n  | \"brown_background\"\n  | \"orange_background\"\n  | \"yellow_background\"\n  | \"green_background\"\n  | \"blue_background\"\n  | \"purple_background\"\n  | \"pink_background\"\n  | \"red_background\"\n\ntype ContentWithRichTextAndColorResponse = {\n  rich_text: Array<RichTextItemResponse>\n  color: ApiColor\n}\n\nexport type ParagraphBlockObjectResponse = {\n  type: \"paragraph\"\n  paragraph: ContentWithRichTextAndColorResponse\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\ntype HeaderContentWithRichTextAndColorResponse = {\n  rich_text: Array<RichTextItemResponse>\n  color: ApiColor\n  is_toggleable: boolean\n}\n\nexport type Heading1BlockObjectResponse = {\n  type: \"heading_1\"\n  heading_1: HeaderContentWithRichTextAndColorResponse\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type Heading2BlockObjectResponse = {\n  type: \"heading_2\"\n  heading_2: HeaderContentWithRichTextAndColorResponse\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type Heading3BlockObjectResponse = {\n  type: \"heading_3\"\n  heading_3: HeaderContentWithRichTextAndColorResponse\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type BulletedListItemBlockObjectResponse = {\n  type: \"bulleted_list_item\"\n  bulleted_list_item: ContentWithRichTextAndColorResponse\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type NumberedListItemBlockObjectResponse = {\n  type: \"numbered_list_item\"\n  numbered_list_item: ContentWithRichTextAndColorResponse\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type QuoteBlockObjectResponse = {\n  type: \"quote\"\n  quote: ContentWithRichTextAndColorResponse\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type ToDoBlockObjectResponse = {\n  type: \"to_do\"\n  to_do: {\n    rich_text: Array<RichTextItemResponse>\n    color: ApiColor\n    checked: boolean\n  }\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type ToggleBlockObjectResponse = {\n  type: \"toggle\"\n  toggle: ContentWithRichTextAndColorResponse\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type TemplateBlockObjectResponse = {\n  type: \"template\"\n  template: { rich_text: Array<RichTextItemResponse> }\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type SyncedBlockBlockObjectResponse = {\n  type: \"synced_block\"\n  synced_block: {\n    synced_from: { type: \"block_id\"; block_id: IdRequest } | null\n  }\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\ntype TitleObjectResponse = { title: string }\n\nexport type ChildPageBlockObjectResponse = {\n  type: \"child_page\"\n  child_page: TitleObjectResponse\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type ChildDatabaseBlockObjectResponse = {\n  type: \"child_database\"\n  child_database: TitleObjectResponse\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\ntype ExpressionObjectResponse = { expression: string }\n\nexport type EquationBlockObjectResponse = {\n  type: \"equation\"\n  equation: ExpressionObjectResponse\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\ntype LanguageRequest =\n  | \"abap\"\n  | \"abc\"\n  | \"agda\"\n  | \"arduino\"\n  | \"ascii art\"\n  | \"assembly\"\n  | \"bash\"\n  | \"basic\"\n  | \"bnf\"\n  | \"c\"\n  | \"c#\"\n  | \"c++\"\n  | \"clojure\"\n  | \"coffeescript\"\n  | \"coq\"\n  | \"css\"\n  | \"dart\"\n  | \"dhall\"\n  | \"diff\"\n  | \"docker\"\n  | \"ebnf\"\n  | \"elixir\"\n  | \"elm\"\n  | \"erlang\"\n  | \"f#\"\n  | \"flow\"\n  | \"fortran\"\n  | \"gherkin\"\n  | \"glsl\"\n  | \"go\"\n  | \"graphql\"\n  | \"groovy\"\n  | \"haskell\"\n  | \"hcl\"\n  | \"html\"\n  | \"idris\"\n  | \"java\"\n  | \"javascript\"\n  | \"json\"\n  | \"julia\"\n  | \"kotlin\"\n  | \"latex\"\n  | \"less\"\n  | \"lisp\"\n  | \"livescript\"\n  | \"llvm ir\"\n  | \"lua\"\n  | \"makefile\"\n  | \"markdown\"\n  | \"markup\"\n  | \"matlab\"\n  | \"mathematica\"\n  | \"mermaid\"\n  | \"nix\"\n  | \"notion formula\"\n  | \"objective-c\"\n  | \"ocaml\"\n  | \"pascal\"\n  | \"perl\"\n  | \"php\"\n  | \"plain text\"\n  | \"powershell\"\n  | \"prolog\"\n  | \"protobuf\"\n  | \"purescript\"\n  | \"python\"\n  | \"r\"\n  | \"racket\"\n  | \"reason\"\n  | \"ruby\"\n  | \"rust\"\n  | \"sass\"\n  | \"scala\"\n  | \"scheme\"\n  | \"scss\"\n  | \"shell\"\n  | \"smalltalk\"\n  | \"solidity\"\n  | \"sql\"\n  | \"swift\"\n  | \"toml\"\n  | \"typescript\"\n  | \"vb.net\"\n  | \"verilog\"\n  | \"vhdl\"\n  | \"visual basic\"\n  | \"webassembly\"\n  | \"xml\"\n  | \"yaml\"\n  | \"java/c/c++/c#\"\n\nexport type CodeBlockObjectResponse = {\n  type: \"code\"\n  code: {\n    rich_text: Array<RichTextItemResponse>\n    caption: Array<RichTextItemResponse>\n    language: LanguageRequest\n  }\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type CalloutBlockObjectResponse = {\n  type: \"callout\"\n  callout: {\n    rich_text: Array<RichTextItemResponse>\n    color: ApiColor\n    icon: PageIconResponse | null\n  }\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type DividerBlockObjectResponse = {\n  type: \"divider\"\n  divider: EmptyObject\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type BreadcrumbBlockObjectResponse = {\n  type: \"breadcrumb\"\n  breadcrumb: EmptyObject\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type TableOfContentsBlockObjectResponse = {\n  type: \"table_of_contents\"\n  table_of_contents: { color: ApiColor }\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type ColumnListBlockObjectResponse = {\n  type: \"column_list\"\n  column_list: EmptyObject\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\ntype ColumnResponse = {\n  // Ratio between 0 and 1 of the width of this column relative to all columns in the list.\n  // If not provided, uses an equal width.\n  width_ratio?: number\n}\n\nexport type ColumnBlockObjectResponse = {\n  type: \"column\"\n  column: ColumnResponse\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type LinkToPageBlockObjectResponse = {\n  type: \"link_to_page\"\n  link_to_page:\n    | { type: \"page_id\"; page_id: IdRequest }\n    | { type: \"database_id\"; database_id: IdRequest }\n    | { type: \"comment_id\"; comment_id: IdRequest }\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\ntype ContentWithTableResponse = {\n  has_column_header: boolean\n  has_row_header: boolean\n  table_width: number\n}\n\nexport type TableBlockObjectResponse = {\n  type: \"table\"\n  table: ContentWithTableResponse\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\ntype ContentWithTableRowResponse = { cells: Array<Array<RichTextItemResponse>> }\n\nexport type TableRowBlockObjectResponse = {\n  type: \"table_row\"\n  table_row: ContentWithTableRowResponse\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\ntype MediaContentWithUrlAndCaptionResponse = {\n  url: string\n  caption: Array<RichTextItemResponse>\n}\n\nexport type EmbedBlockObjectResponse = {\n  type: \"embed\"\n  embed: MediaContentWithUrlAndCaptionResponse\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type BookmarkBlockObjectResponse = {\n  type: \"bookmark\"\n  bookmark: MediaContentWithUrlAndCaptionResponse\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\ntype ExternalMediaContentWithFileAndCaptionResponse = {\n  type: \"external\"\n  external: { url: TextRequest }\n  caption: Array<RichTextItemResponse>\n}\n\ntype FileMediaContentWithFileAndCaptionResponse = {\n  type: \"file\"\n  file: InternalFileResponse\n  caption: Array<RichTextItemResponse>\n}\n\ntype MediaContentWithFileAndCaptionResponse =\n  | ExternalMediaContentWithFileAndCaptionResponse\n  | FileMediaContentWithFileAndCaptionResponse\n\nexport type ImageBlockObjectResponse = {\n  type: \"image\"\n  image: MediaContentWithFileAndCaptionResponse\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type VideoBlockObjectResponse = {\n  type: \"video\"\n  video: MediaContentWithFileAndCaptionResponse\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type PdfBlockObjectResponse = {\n  type: \"pdf\"\n  pdf: MediaContentWithFileAndCaptionResponse\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\ntype ExternalMediaContentWithFileNameAndCaptionResponse = {\n  type: \"external\"\n  external: { url: TextRequest }\n  caption: Array<RichTextItemResponse>\n  name: string\n}\n\ntype FileMediaContentWithFileNameAndCaptionResponse = {\n  type: \"file\"\n  file: InternalFileResponse\n  caption: Array<RichTextItemResponse>\n  name: string\n}\n\ntype MediaContentWithFileNameAndCaptionResponse =\n  | ExternalMediaContentWithFileNameAndCaptionResponse\n  | FileMediaContentWithFileNameAndCaptionResponse\n\nexport type FileBlockObjectResponse = {\n  type: \"file\"\n  file: MediaContentWithFileNameAndCaptionResponse\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type AudioBlockObjectResponse = {\n  type: \"audio\"\n  audio: MediaContentWithFileAndCaptionResponse\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\ntype MediaContentWithUrlResponse = { url: TextRequest }\n\nexport type LinkPreviewBlockObjectResponse = {\n  type: \"link_preview\"\n  link_preview: MediaContentWithUrlResponse\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type UnsupportedBlockObjectResponse = {\n  type: \"unsupported\"\n  unsupported: EmptyObject\n  parent: ParentForBlockBasedObjectResponse\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n  in_trash: boolean\n}\n\nexport type BlockObjectResponse =\n  | ParagraphBlockObjectResponse\n  | Heading1BlockObjectResponse\n  | Heading2BlockObjectResponse\n  | Heading3BlockObjectResponse\n  | BulletedListItemBlockObjectResponse\n  | NumberedListItemBlockObjectResponse\n  | QuoteBlockObjectResponse\n  | ToDoBlockObjectResponse\n  | ToggleBlockObjectResponse\n  | TemplateBlockObjectResponse\n  | SyncedBlockBlockObjectResponse\n  | ChildPageBlockObjectResponse\n  | ChildDatabaseBlockObjectResponse\n  | EquationBlockObjectResponse\n  | CodeBlockObjectResponse\n  | CalloutBlockObjectResponse\n  | DividerBlockObjectResponse\n  | BreadcrumbBlockObjectResponse\n  | TableOfContentsBlockObjectResponse\n  | ColumnListBlockObjectResponse\n  | ColumnBlockObjectResponse\n  | LinkToPageBlockObjectResponse\n  | TableBlockObjectResponse\n  | TableRowBlockObjectResponse\n  | EmbedBlockObjectResponse\n  | BookmarkBlockObjectResponse\n  | ImageBlockObjectResponse\n  | VideoBlockObjectResponse\n  | PdfBlockObjectResponse\n  | FileBlockObjectResponse\n  | AudioBlockObjectResponse\n  | LinkPreviewBlockObjectResponse\n  | UnsupportedBlockObjectResponse\n\nexport type NumberPropertyItemObjectResponse = {\n  type: \"number\"\n  number: number | null\n  object: \"property_item\"\n  id: string\n}\n\nexport type UrlPropertyItemObjectResponse = {\n  type: \"url\"\n  url: string | null\n  object: \"property_item\"\n  id: string\n}\n\nexport type SelectPropertyItemObjectResponse = {\n  type: \"select\"\n  select: PartialSelectResponse | null\n  object: \"property_item\"\n  id: string\n}\n\nexport type MultiSelectPropertyItemObjectResponse = {\n  type: \"multi_select\"\n  multi_select: Array<PartialSelectResponse>\n  object: \"property_item\"\n  id: string\n}\n\nexport type StatusPropertyItemObjectResponse = {\n  type: \"status\"\n  status: PartialSelectResponse | null\n  object: \"property_item\"\n  id: string\n}\n\nexport type DatePropertyItemObjectResponse = {\n  type: \"date\"\n  date: DateResponse | null\n  object: \"property_item\"\n  id: string\n}\n\nexport type EmailPropertyItemObjectResponse = {\n  type: \"email\"\n  email: string | null\n  object: \"property_item\"\n  id: string\n}\n\nexport type PhoneNumberPropertyItemObjectResponse = {\n  type: \"phone_number\"\n  phone_number: string | null\n  object: \"property_item\"\n  id: string\n}\n\nexport type CheckboxPropertyItemObjectResponse = {\n  type: \"checkbox\"\n  checkbox: boolean\n  object: \"property_item\"\n  id: string\n}\n\nexport type FilesPropertyItemObjectResponse = {\n  type: \"files\"\n  files: Array<\n    | { file: InternalFileResponse; name: StringRequest; type?: \"file\" }\n    | { external: { url: TextRequest }; name: StringRequest; type?: \"external\" }\n  >\n  object: \"property_item\"\n  id: string\n}\n\nexport type CreatedByPropertyItemObjectResponse = {\n  type: \"created_by\"\n  created_by: PartialUserObjectResponse | UserObjectResponse\n  object: \"property_item\"\n  id: string\n}\n\nexport type CreatedTimePropertyItemObjectResponse = {\n  type: \"created_time\"\n  created_time: string\n  object: \"property_item\"\n  id: string\n}\n\nexport type LastEditedByPropertyItemObjectResponse = {\n  type: \"last_edited_by\"\n  last_edited_by: PartialUserObjectResponse | UserObjectResponse\n  object: \"property_item\"\n  id: string\n}\n\nexport type LastEditedTimePropertyItemObjectResponse = {\n  type: \"last_edited_time\"\n  last_edited_time: string\n  object: \"property_item\"\n  id: string\n}\n\nexport type FormulaPropertyItemObjectResponse = {\n  type: \"formula\"\n  formula: FormulaPropertyResponse\n  object: \"property_item\"\n  id: string\n}\n\nexport type ButtonPropertyItemObjectResponse = {\n  type: \"button\"\n  button: Record<string, never>\n  object: \"property_item\"\n  id: string\n}\n\nexport type UniqueIdPropertyItemObjectResponse = {\n  type: \"unique_id\"\n  unique_id: { prefix: string | null; number: number | null }\n  object: \"property_item\"\n  id: string\n}\n\nexport type VerificationPropertyItemObjectResponse = {\n  type: \"verification\"\n  verification:\n    | VerificationPropertyUnverifiedResponse\n    | VerificationPropertyResponse\n    | null\n  object: \"property_item\"\n  id: string\n}\n\nexport type TitlePropertyItemObjectResponse = {\n  type: \"title\"\n  title: RichTextItemResponse\n  object: \"property_item\"\n  id: string\n}\n\nexport type RichTextPropertyItemObjectResponse = {\n  type: \"rich_text\"\n  rich_text: RichTextItemResponse\n  object: \"property_item\"\n  id: string\n}\n\nexport type PeoplePropertyItemObjectResponse = {\n  type: \"people\"\n  people: PartialUserObjectResponse | UserObjectResponse\n  object: \"property_item\"\n  id: string\n}\n\nexport type RelationPropertyItemObjectResponse = {\n  type: \"relation\"\n  relation: { id: string }\n  object: \"property_item\"\n  id: string\n}\n\nexport type RollupPropertyItemObjectResponse = {\n  type: \"rollup\"\n  rollup:\n    | { type: \"number\"; number: number | null; function: RollupFunction }\n    | { type: \"date\"; date: DateResponse | null; function: RollupFunction }\n    | { type: \"array\"; array: Array<EmptyObject>; function: RollupFunction }\n    | {\n        type: \"unsupported\"\n        unsupported: EmptyObject\n        function: RollupFunction\n      }\n    | { type: \"incomplete\"; incomplete: EmptyObject; function: RollupFunction }\n  object: \"property_item\"\n  id: string\n}\n\nexport type PropertyItemObjectResponse =\n  | NumberPropertyItemObjectResponse\n  | UrlPropertyItemObjectResponse\n  | SelectPropertyItemObjectResponse\n  | MultiSelectPropertyItemObjectResponse\n  | StatusPropertyItemObjectResponse\n  | DatePropertyItemObjectResponse\n  | EmailPropertyItemObjectResponse\n  | PhoneNumberPropertyItemObjectResponse\n  | CheckboxPropertyItemObjectResponse\n  | FilesPropertyItemObjectResponse\n  | CreatedByPropertyItemObjectResponse\n  | CreatedTimePropertyItemObjectResponse\n  | LastEditedByPropertyItemObjectResponse\n  | LastEditedTimePropertyItemObjectResponse\n  | FormulaPropertyItemObjectResponse\n  | ButtonPropertyItemObjectResponse\n  | UniqueIdPropertyItemObjectResponse\n  | VerificationPropertyItemObjectResponse\n  | TitlePropertyItemObjectResponse\n  | RichTextPropertyItemObjectResponse\n  | PeoplePropertyItemObjectResponse\n  | RelationPropertyItemObjectResponse\n  | RollupPropertyItemObjectResponse\n\ntype PropertyItemPropertyItemListResponse = {\n  type: \"property_item\"\n  property_item:\n    | { type: \"title\"; title: EmptyObject; next_url: string | null; id: string }\n    | {\n        type: \"rich_text\"\n        rich_text: EmptyObject\n        next_url: string | null\n        id: string\n      }\n    | {\n        type: \"people\"\n        people: EmptyObject\n        next_url: string | null\n        id: string\n      }\n    | {\n        type: \"relation\"\n        relation: EmptyObject\n        next_url: string | null\n        id: string\n      }\n    | {\n        type: \"rollup\"\n        rollup:\n          | { type: \"number\"; number: number | null; function: RollupFunction }\n          | {\n              type: \"date\"\n              date: DateResponse | null\n              function: RollupFunction\n            }\n          | {\n              type: \"array\"\n              array: Array<EmptyObject>\n              function: RollupFunction\n            }\n          | {\n              type: \"unsupported\"\n              unsupported: EmptyObject\n              function: RollupFunction\n            }\n          | {\n              type: \"incomplete\"\n              incomplete: EmptyObject\n              function: RollupFunction\n            }\n        next_url: string | null\n        id: string\n      }\n  object: \"list\"\n  next_cursor: string | null\n  has_more: boolean\n  results: Array<PropertyItemObjectResponse>\n}\n\nexport type PropertyItemListResponse = PropertyItemPropertyItemListResponse\n\ntype IdResponse = string\n\ntype DatabasePropertyRelationConfigResponseCommon = {\n  database_id: IdResponse\n  data_source_id: IdResponse\n}\n\ntype DatabasePropertyConfigResponseCommon = {\n  // The ID of the property.\n  id: string\n  // The name of the property.\n  name: string\n  // The description of the property.\n  description: PropertyDescriptionRequest | null\n}\n\nexport type UserObjectResponseCommon = {\n  // The ID of the user.\n  id: IdResponse\n  // The user object type name.\n  object: \"user\"\n  // The name of the user.\n  name: string | null\n  // The avatar URL of the user.\n  avatar_url: string | null\n}\n\nexport type RichTextItemResponseCommon = {\n  // The plain text content of the rich text object, without any styling.\n  plain_text: string\n  // A URL that the rich text object links to or mentions.\n  href: string | null\n  // All rich text objects contain an annotations object that sets the styling for the rich\n  // text.\n  annotations: AnnotationResponse\n}\n\nexport type PartialCommentObjectResponse = {\n  // The comment object type name.\n  object: \"comment\"\n  // The ID of the comment.\n  id: IdResponse\n}\n\ntype PageIdCommentParentResponse = {\n  // Always `page_id`\n  type: \"page_id\"\n  page_id: IdResponse\n}\n\ntype BlockIdCommentParentResponse = {\n  // Always `block_id`\n  type: \"block_id\"\n  block_id: IdResponse\n}\n\ntype CommentParentResponse =\n  | PageIdCommentParentResponse\n  | BlockIdCommentParentResponse\n\nexport type CommentObjectResponse = {\n  // The comment object type name.\n  object: \"comment\"\n  // The ID of the comment.\n  id: IdResponse\n  // The parent of the comment.\n  parent: CommentParentResponse\n  // The ID of the discussion thread this comment belongs to.\n  discussion_id: IdResponse\n  // The time when the comment was created.\n  created_time: string\n  // The time when the comment was last edited.\n  last_edited_time: string\n  // The user who created the comment.\n  created_by: PartialUserObjectResponse\n  // The rich text content of the comment.\n  rich_text: Array<RichTextItemResponse>\n  // The display name of the comment.\n  display_name: {\n    // One of: `custom`, `user`, `integration`\n    type: \"custom\" | \"user\" | \"integration\"\n    resolved_name: string | null\n  }\n  // Any file attachments associated with the comment.\n  attachments?: Array<{\n    // One of: `audio`, `image`, `pdf`, `productivity`, `video`\n    category: \"audio\" | \"image\" | \"pdf\" | \"productivity\" | \"video\"\n    file: InternalFileResponse\n  }>\n}\n\nexport type FileUploadObjectResponse = {\n  // Always `file_upload`\n  object: \"file_upload\"\n  id: IdResponse\n  created_time: string\n  created_by: {\n    id: IdResponse\n    // One of: `person`, `bot`, `agent`\n    type: \"person\" | \"bot\" | \"agent\"\n  }\n  last_edited_time: string\n  archived: boolean\n  expiry_time: string | null\n  // One of: `pending`, `uploaded`, `expired`, `failed`\n  status: \"pending\" | \"uploaded\" | \"expired\" | \"failed\"\n  filename: string | null\n  content_type: string | null\n  content_length: number | null\n  upload_url?: string\n  complete_url?: string\n  file_import_result?: {\n    // The time the file was imported into Notion. ISO 8601 format.\n    imported_time: string\n  } & (\n    | {\n        // Indicates a successful import.\n        type: \"success\"\n        // Empty object for success type.\n        success: EmptyObject\n      }\n    | {\n        // Indicates an error occurred during import.\n        type: \"error\"\n        // Details about the error that occurred during file import.\n        error: {\n          // The type of error that occurred during file import.\n          type:\n            | \"validation_error\"\n            | \"internal_system_error\"\n            | \"download_error\"\n            | \"upload_error\"\n          // A short string code representing the error.\n          code: string\n          // A human-readable message describing the error.\n          message: string\n          // The parameter related to the error, if applicable. Null if not applicable.\n          parameter: string | null\n          // The HTTP status code associated with the error, if available. Null if not applicable.\n          status_code: number | null\n        }\n      }\n  )\n  number_of_parts?: { total: number; sent: number }\n}\n\nexport type PartialDatabaseObjectResponse = {\n  // The database object type name.\n  object: \"database\"\n  // The ID of the database.\n  id: IdResponse\n}\n\ntype DataSourceReferenceResponse = {\n  // The ID of the data source.\n  id: IdResponse\n  // The name of the data source.\n  name: string\n}\n\nexport type DatabaseObjectResponse = {\n  // The database object type name.\n  object: \"database\"\n  // The ID of the database.\n  id: IdResponse\n  // The title of the database.\n  title: Array<RichTextItemResponse>\n  // The description of the database.\n  description: Array<RichTextItemResponse>\n  // The parent of the database.\n  parent:\n    | PageIdParentForBlockBasedObjectResponse\n    | WorkspaceParentForBlockBasedObjectResponse\n    | DatabaseParentResponse\n    | BlockIdParentForBlockBasedObjectResponse\n  // Whether the database is inline.\n  is_inline: boolean\n  // Whether the database is in the trash.\n  in_trash: boolean\n  // Whether the database is locked from editing in the Notion app UI.\n  is_locked: boolean\n  // The time when the database was created.\n  created_time: string\n  // The time when the database was last edited.\n  last_edited_time: string\n  // The data sources of the database.\n  data_sources: Array<DataSourceReferenceResponse>\n  // The icon of the database.\n  icon: PageIconResponse | null\n  // The cover of the database.\n  cover: PageCoverResponse | null\n  // The URL of the database.\n  url: string\n  // The public URL of the database if it is publicly accessible.\n  public_url: string | null\n}\n\ntype AnnotationRequest = {\n  // Whether the text is formatted as bold.\n  bold?: boolean\n  // Whether the text is formatted as italic.\n  italic?: boolean\n  // Whether the text is formatted with a strikethrough.\n  strikethrough?: boolean\n  // Whether the text is formatted with an underline.\n  underline?: boolean\n  // Whether the text is formatted as code.\n  code?: boolean\n  // The color of the text.\n  color?: ApiColor\n}\n\ntype DateRequest = {\n  // The start date of the date object.\n  start: string\n  // The end date of the date object, if any.\n  end?: string | null\n  // The time zone of the date object, if any. E.g. America/Los_Angeles, Europe/London,\n  // etc.\n  time_zone?: TimeZoneRequest | null\n}\n\ntype TemplateMentionRequest =\n  | TemplateMentionDateTemplateMentionRequest\n  | TemplateMentionUserTemplateMentionRequest\n\ntype RichTextItemRequest = RichTextItemRequestCommon &\n  (\n    | TextRichTextItemRequest\n    | MentionRichTextItemRequest\n    | EquationRichTextItemRequest\n  )\n\ntype GroupObjectRequest = {\n  id: IdRequest\n  name?: string | null\n  object?: \"group\"\n}\n\ntype InternalFileRequest = { url: string; expiry_time?: string }\n\ntype ExternalFileRequest = { url: TextRequest }\n\ntype InternalOrExternalFileWithNameRequest =\n  | { file: InternalFileRequest; name: StringRequest; type?: \"file\" }\n  | { external: ExternalFileRequest; name: StringRequest; type?: \"external\" }\n\ntype FileUploadIdRequest = { id: IdRequest }\n\ntype FileUploadWithOptionalNameRequest = {\n  file_upload: FileUploadIdRequest\n  type?: \"file_upload\"\n  name?: StringRequest\n}\n\ntype PageIconRequest =\n  | FileUploadPageIconRequest\n  | EmojiPageIconRequest\n  | ExternalPageIconRequest\n  | CustomEmojiPageIconRequest\n\ntype PageCoverRequest = FileUploadPageCoverRequest | ExternalPageCoverRequest\n\ntype MediaContentWithUrlAndCaptionRequest = {\n  url: string\n  caption?: Array<RichTextItemRequest>\n}\n\ntype MediaContentWithFileAndCaptionRequest =\n  | {\n      external: ExternalFileRequest\n      type?: \"external\"\n      caption?: Array<RichTextItemRequest>\n    }\n  | {\n      file_upload: FileUploadIdRequest\n      type?: \"file_upload\"\n      caption?: Array<RichTextItemRequest>\n    }\n\ntype MediaContentWithFileNameAndCaptionRequest =\n  | {\n      external: ExternalFileRequest\n      type?: \"external\"\n      caption?: Array<RichTextItemRequest>\n      name?: StringRequest\n    }\n  | {\n      file_upload: FileUploadIdRequest\n      type?: \"file_upload\"\n      caption?: Array<RichTextItemRequest>\n      name?: StringRequest\n    }\n\ntype ContentWithExpressionRequest = { expression: string }\n\ntype ContentWithTableRowRequest = { cells: Array<Array<RichTextItemRequest>> }\n\ntype TableRowRequest = {\n  table_row: ContentWithTableRowRequest\n  type?: \"table_row\"\n  object?: \"block\"\n}\n\ntype TableRequestWithTableRowChildren = {\n  table_width: number\n  children: Array<TableRowRequest>\n  has_column_header?: boolean\n  has_row_header?: boolean\n}\n\ntype HeaderContentWithRichTextAndColorRequest = {\n  rich_text: Array<RichTextItemRequest>\n  color?: ApiColor\n  is_toggleable?: boolean\n}\n\ntype ContentWithRichTextAndColorRequest = {\n  rich_text: Array<RichTextItemRequest>\n  color?: ApiColor\n}\n\ntype ContentWithRichTextRequest = { rich_text: Array<RichTextItemRequest> }\n\nexport type BlockObjectRequestWithoutChildren =\n  | {\n      embed: MediaContentWithUrlAndCaptionRequest\n      type?: \"embed\"\n      object?: \"block\"\n    }\n  | {\n      bookmark: MediaContentWithUrlAndCaptionRequest\n      type?: \"bookmark\"\n      object?: \"block\"\n    }\n  | {\n      image: MediaContentWithFileAndCaptionRequest\n      type?: \"image\"\n      object?: \"block\"\n    }\n  | {\n      video: MediaContentWithFileAndCaptionRequest\n      type?: \"video\"\n      object?: \"block\"\n    }\n  | {\n      pdf: MediaContentWithFileAndCaptionRequest\n      type?: \"pdf\"\n      object?: \"block\"\n    }\n  | {\n      file: MediaContentWithFileNameAndCaptionRequest\n      type?: \"file\"\n      object?: \"block\"\n    }\n  | {\n      audio: MediaContentWithFileAndCaptionRequest\n      type?: \"audio\"\n      object?: \"block\"\n    }\n  | {\n      code: {\n        rich_text: Array<RichTextItemRequest>\n        language: LanguageRequest\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"code\"\n      object?: \"block\"\n    }\n  | {\n      equation: ContentWithExpressionRequest\n      type?: \"equation\"\n      object?: \"block\"\n    }\n  | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n  | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n  | {\n      table_of_contents: { color?: ApiColor }\n      type?: \"table_of_contents\"\n      object?: \"block\"\n    }\n  | {\n      link_to_page:\n        | { page_id: IdRequest; type?: \"page_id\" }\n        | { database_id: IdRequest; type?: \"database_id\" }\n        | { comment_id: IdRequest; type?: \"comment_id\" }\n      type?: \"link_to_page\"\n      object?: \"block\"\n    }\n  | {\n      table_row: ContentWithTableRowRequest\n      type?: \"table_row\"\n      object?: \"block\"\n    }\n  | {\n      heading_1: HeaderContentWithRichTextAndColorRequest\n      type?: \"heading_1\"\n      object?: \"block\"\n    }\n  | {\n      heading_2: HeaderContentWithRichTextAndColorRequest\n      type?: \"heading_2\"\n      object?: \"block\"\n    }\n  | {\n      heading_3: HeaderContentWithRichTextAndColorRequest\n      type?: \"heading_3\"\n      object?: \"block\"\n    }\n  | {\n      paragraph: ContentWithRichTextAndColorRequest\n      type?: \"paragraph\"\n      object?: \"block\"\n    }\n  | {\n      bulleted_list_item: ContentWithRichTextAndColorRequest\n      type?: \"bulleted_list_item\"\n      object?: \"block\"\n    }\n  | {\n      numbered_list_item: ContentWithRichTextAndColorRequest\n      type?: \"numbered_list_item\"\n      object?: \"block\"\n    }\n  | {\n      quote: ContentWithRichTextAndColorRequest\n      type?: \"quote\"\n      object?: \"block\"\n    }\n  | {\n      to_do: {\n        rich_text: Array<RichTextItemRequest>\n        checked?: boolean\n        color?: ApiColor\n      }\n      type?: \"to_do\"\n      object?: \"block\"\n    }\n  | {\n      toggle: ContentWithRichTextAndColorRequest\n      type?: \"toggle\"\n      object?: \"block\"\n    }\n  | {\n      template: ContentWithRichTextRequest\n      type?: \"template\"\n      object?: \"block\"\n    }\n  | {\n      callout: {\n        rich_text: Array<RichTextItemRequest>\n        icon?: PageIconRequest\n        color?: ApiColor\n      }\n      type?: \"callout\"\n      object?: \"block\"\n    }\n  | {\n      synced_block: {\n        synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n      }\n      type?: \"synced_block\"\n      object?: \"block\"\n    }\n\ntype HeaderContentWithSingleLevelOfChildrenRequest = {\n  rich_text: Array<RichTextItemRequest>\n  color?: ApiColor\n  is_toggleable?: boolean\n  children?: Array<BlockObjectRequestWithoutChildren>\n}\n\ntype ContentWithSingleLevelOfChildrenRequest = {\n  rich_text: Array<RichTextItemRequest>\n  color?: ApiColor\n  children?: Array<BlockObjectRequestWithoutChildren>\n}\n\ntype BlockObjectWithSingleLevelOfChildrenRequest =\n  | {\n      embed: MediaContentWithUrlAndCaptionRequest\n      type?: \"embed\"\n      object?: \"block\"\n    }\n  | {\n      bookmark: MediaContentWithUrlAndCaptionRequest\n      type?: \"bookmark\"\n      object?: \"block\"\n    }\n  | {\n      image: MediaContentWithFileAndCaptionRequest\n      type?: \"image\"\n      object?: \"block\"\n    }\n  | {\n      video: MediaContentWithFileAndCaptionRequest\n      type?: \"video\"\n      object?: \"block\"\n    }\n  | {\n      pdf: MediaContentWithFileAndCaptionRequest\n      type?: \"pdf\"\n      object?: \"block\"\n    }\n  | {\n      file: MediaContentWithFileNameAndCaptionRequest\n      type?: \"file\"\n      object?: \"block\"\n    }\n  | {\n      audio: MediaContentWithFileAndCaptionRequest\n      type?: \"audio\"\n      object?: \"block\"\n    }\n  | {\n      code: {\n        rich_text: Array<RichTextItemRequest>\n        language: LanguageRequest\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"code\"\n      object?: \"block\"\n    }\n  | {\n      equation: ContentWithExpressionRequest\n      type?: \"equation\"\n      object?: \"block\"\n    }\n  | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n  | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n  | {\n      table_of_contents: { color?: ApiColor }\n      type?: \"table_of_contents\"\n      object?: \"block\"\n    }\n  | {\n      link_to_page:\n        | { page_id: IdRequest; type?: \"page_id\" }\n        | { database_id: IdRequest; type?: \"database_id\" }\n        | { comment_id: IdRequest; type?: \"comment_id\" }\n      type?: \"link_to_page\"\n      object?: \"block\"\n    }\n  | {\n      table_row: ContentWithTableRowRequest\n      type?: \"table_row\"\n      object?: \"block\"\n    }\n  | {\n      heading_1: HeaderContentWithSingleLevelOfChildrenRequest\n      type?: \"heading_1\"\n      object?: \"block\"\n    }\n  | {\n      heading_2: HeaderContentWithSingleLevelOfChildrenRequest\n      type?: \"heading_2\"\n      object?: \"block\"\n    }\n  | {\n      heading_3: HeaderContentWithSingleLevelOfChildrenRequest\n      type?: \"heading_3\"\n      object?: \"block\"\n    }\n  | {\n      paragraph: ContentWithSingleLevelOfChildrenRequest\n      type?: \"paragraph\"\n      object?: \"block\"\n    }\n  | {\n      bulleted_list_item: ContentWithSingleLevelOfChildrenRequest\n      type?: \"bulleted_list_item\"\n      object?: \"block\"\n    }\n  | {\n      numbered_list_item: ContentWithSingleLevelOfChildrenRequest\n      type?: \"numbered_list_item\"\n      object?: \"block\"\n    }\n  | {\n      quote: ContentWithSingleLevelOfChildrenRequest\n      type?: \"quote\"\n      object?: \"block\"\n    }\n  | {\n      table: TableRequestWithTableRowChildren\n      type?: \"table\"\n      object?: \"block\"\n    }\n  | {\n      to_do: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        children?: Array<BlockObjectRequestWithoutChildren>\n        checked?: boolean\n      }\n      type?: \"to_do\"\n      object?: \"block\"\n    }\n  | {\n      toggle: ContentWithSingleLevelOfChildrenRequest\n      type?: \"toggle\"\n      object?: \"block\"\n    }\n  | {\n      template: {\n        rich_text: Array<RichTextItemRequest>\n        children?: Array<BlockObjectRequestWithoutChildren>\n      }\n      type?: \"template\"\n      object?: \"block\"\n    }\n  | {\n      callout: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        children?: Array<BlockObjectRequestWithoutChildren>\n        icon?: PageIconRequest\n      }\n      type?: \"callout\"\n      object?: \"block\"\n    }\n  | {\n      synced_block: {\n        synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n        children?: Array<BlockObjectRequestWithoutChildren>\n      }\n      type?: \"synced_block\"\n      object?: \"block\"\n    }\n\ntype ColumnWithChildrenRequest = {\n  children: Array<BlockObjectWithSingleLevelOfChildrenRequest>\n  // Ratio between 0 and 1 of the width of this column relative to all columns in the list.\n  // If not provided, uses an equal width.\n  width_ratio?: number\n}\n\ntype ColumnBlockWithChildrenRequest = {\n  column: ColumnWithChildrenRequest\n  type?: \"column\"\n  object?: \"block\"\n}\n\ntype ColumnListRequest = { children: Array<ColumnBlockWithChildrenRequest> }\n\nexport type BlockObjectRequest =\n  | {\n      embed: MediaContentWithUrlAndCaptionRequest\n      type?: \"embed\"\n      object?: \"block\"\n    }\n  | {\n      bookmark: MediaContentWithUrlAndCaptionRequest\n      type?: \"bookmark\"\n      object?: \"block\"\n    }\n  | {\n      image: MediaContentWithFileAndCaptionRequest\n      type?: \"image\"\n      object?: \"block\"\n    }\n  | {\n      video: MediaContentWithFileAndCaptionRequest\n      type?: \"video\"\n      object?: \"block\"\n    }\n  | {\n      pdf: MediaContentWithFileAndCaptionRequest\n      type?: \"pdf\"\n      object?: \"block\"\n    }\n  | {\n      file: MediaContentWithFileNameAndCaptionRequest\n      type?: \"file\"\n      object?: \"block\"\n    }\n  | {\n      audio: MediaContentWithFileAndCaptionRequest\n      type?: \"audio\"\n      object?: \"block\"\n    }\n  | {\n      code: {\n        rich_text: Array<RichTextItemRequest>\n        language: LanguageRequest\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"code\"\n      object?: \"block\"\n    }\n  | {\n      equation: ContentWithExpressionRequest\n      type?: \"equation\"\n      object?: \"block\"\n    }\n  | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n  | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n  | {\n      table_of_contents: { color?: ApiColor }\n      type?: \"table_of_contents\"\n      object?: \"block\"\n    }\n  | {\n      link_to_page:\n        | { page_id: IdRequest; type?: \"page_id\" }\n        | { database_id: IdRequest; type?: \"database_id\" }\n        | { comment_id: IdRequest; type?: \"comment_id\" }\n      type?: \"link_to_page\"\n      object?: \"block\"\n    }\n  | {\n      table_row: ContentWithTableRowRequest\n      type?: \"table_row\"\n      object?: \"block\"\n    }\n  | {\n      table: TableRequestWithTableRowChildren\n      type?: \"table\"\n      object?: \"block\"\n    }\n  | { column_list: ColumnListRequest; type?: \"column_list\"; object?: \"block\" }\n  | { column: ColumnWithChildrenRequest; type?: \"column\"; object?: \"block\" }\n  | {\n      heading_1: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        is_toggleable?: boolean\n        children?: Array<BlockObjectWithSingleLevelOfChildrenRequest>\n      }\n      type?: \"heading_1\"\n      object?: \"block\"\n    }\n  | {\n      heading_2: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        is_toggleable?: boolean\n        children?: Array<BlockObjectWithSingleLevelOfChildrenRequest>\n      }\n      type?: \"heading_2\"\n      object?: \"block\"\n    }\n  | {\n      heading_3: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        is_toggleable?: boolean\n        children?: Array<BlockObjectWithSingleLevelOfChildrenRequest>\n      }\n      type?: \"heading_3\"\n      object?: \"block\"\n    }\n  | {\n      paragraph: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        children?: Array<BlockObjectWithSingleLevelOfChildrenRequest>\n      }\n      type?: \"paragraph\"\n      object?: \"block\"\n    }\n  | {\n      bulleted_list_item: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        children?: Array<BlockObjectWithSingleLevelOfChildrenRequest>\n      }\n      type?: \"bulleted_list_item\"\n      object?: \"block\"\n    }\n  | {\n      numbered_list_item: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        children?: Array<BlockObjectWithSingleLevelOfChildrenRequest>\n      }\n      type?: \"numbered_list_item\"\n      object?: \"block\"\n    }\n  | {\n      quote: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        children?: Array<BlockObjectWithSingleLevelOfChildrenRequest>\n      }\n      type?: \"quote\"\n      object?: \"block\"\n    }\n  | {\n      to_do: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        children?: Array<BlockObjectWithSingleLevelOfChildrenRequest>\n        checked?: boolean\n      }\n      type?: \"to_do\"\n      object?: \"block\"\n    }\n  | {\n      toggle: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        children?: Array<BlockObjectWithSingleLevelOfChildrenRequest>\n      }\n      type?: \"toggle\"\n      object?: \"block\"\n    }\n  | {\n      template: {\n        rich_text: Array<RichTextItemRequest>\n        children?: Array<BlockObjectWithSingleLevelOfChildrenRequest>\n      }\n      type?: \"template\"\n      object?: \"block\"\n    }\n  | {\n      callout: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        children?: Array<BlockObjectWithSingleLevelOfChildrenRequest>\n        icon?: PageIconRequest\n      }\n      type?: \"callout\"\n      object?: \"block\"\n    }\n  | {\n      synced_block: {\n        synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n        children?: Array<BlockObjectWithSingleLevelOfChildrenRequest>\n      }\n      type?: \"synced_block\"\n      object?: \"block\"\n    }\n\ntype UpdateMediaContentWithUrlAndCaptionRequest = {\n  url?: string\n  caption?: Array<RichTextItemRequest>\n}\n\ntype UpdateMediaContentWithFileAndCaptionRequest = {\n  caption?: Array<RichTextItemRequest>\n  external?: ExternalFileRequest\n  file_upload?: FileUploadIdRequest\n}\n\ntype UpdateMediaContentWithFileNameAndCaptionRequest = {\n  caption?: Array<RichTextItemRequest>\n  external?: ExternalFileRequest\n  file_upload?: FileUploadIdRequest\n  name?: StringRequest\n}\n\ntype ExistencePropertyFilter = { is_empty: true } | { is_not_empty: true }\n\ntype TextPropertyFilter =\n  | { equals: string }\n  | { does_not_equal: string }\n  | { contains: string }\n  | { does_not_contain: string }\n  | { starts_with: string }\n  | { ends_with: string }\n  | ExistencePropertyFilter\n\ntype NumberPropertyFilter =\n  | { equals: number }\n  | { does_not_equal: number }\n  | { greater_than: number }\n  | { less_than: number }\n  | { greater_than_or_equal_to: number }\n  | { less_than_or_equal_to: number }\n  | ExistencePropertyFilter\n\ntype CheckboxPropertyFilter = { equals: boolean } | { does_not_equal: boolean }\n\ntype SelectPropertyFilter =\n  | { equals: string }\n  | { does_not_equal: string }\n  | ExistencePropertyFilter\n\ntype MultiSelectPropertyFilter =\n  | { contains: string }\n  | { does_not_contain: string }\n  | ExistencePropertyFilter\n\ntype StatusPropertyFilter =\n  | { equals: string }\n  | { does_not_equal: string }\n  | ExistencePropertyFilter\n\ntype DatePropertyFilter =\n  | { equals: string }\n  | { before: string }\n  | { after: string }\n  | { on_or_before: string }\n  | { on_or_after: string }\n  | { this_week: EmptyObject }\n  | { past_week: EmptyObject }\n  | { past_month: EmptyObject }\n  | { past_year: EmptyObject }\n  | { next_week: EmptyObject }\n  | { next_month: EmptyObject }\n  | { next_year: EmptyObject }\n  | ExistencePropertyFilter\n\ntype PeoplePropertyFilter =\n  | { contains: IdRequest }\n  | { does_not_contain: IdRequest }\n  | ExistencePropertyFilter\n\ntype RelationPropertyFilter =\n  | { contains: IdRequest }\n  | { does_not_contain: IdRequest }\n  | ExistencePropertyFilter\n\ntype FormulaPropertyFilter =\n  | { string: TextPropertyFilter }\n  | { checkbox: CheckboxPropertyFilter }\n  | { number: NumberPropertyFilter }\n  | { date: DatePropertyFilter }\n\ntype RollupSubfilterPropertyFilter =\n  | { rich_text: TextPropertyFilter }\n  | { number: NumberPropertyFilter }\n  | { checkbox: CheckboxPropertyFilter }\n  | { select: SelectPropertyFilter }\n  | { multi_select: MultiSelectPropertyFilter }\n  | { relation: RelationPropertyFilter }\n  | { date: DatePropertyFilter }\n  | { people: PeoplePropertyFilter }\n  | { files: ExistencePropertyFilter }\n  | { status: StatusPropertyFilter }\n\ntype RollupPropertyFilter =\n  | { any: RollupSubfilterPropertyFilter }\n  | { none: RollupSubfilterPropertyFilter }\n  | { every: RollupSubfilterPropertyFilter }\n  | { date: DatePropertyFilter }\n  | { number: NumberPropertyFilter }\n\ntype VerificationPropertyStatusFilter = {\n  status: \"verified\" | \"expired\" | \"none\"\n}\n\ntype PropertyFilter =\n  | { title: TextPropertyFilter; property: string; type?: \"title\" }\n  | { rich_text: TextPropertyFilter; property: string; type?: \"rich_text\" }\n  | { number: NumberPropertyFilter; property: string; type?: \"number\" }\n  | { checkbox: CheckboxPropertyFilter; property: string; type?: \"checkbox\" }\n  | { select: SelectPropertyFilter; property: string; type?: \"select\" }\n  | {\n      multi_select: MultiSelectPropertyFilter\n      property: string\n      type?: \"multi_select\"\n    }\n  | { status: StatusPropertyFilter; property: string; type?: \"status\" }\n  | { date: DatePropertyFilter; property: string; type?: \"date\" }\n  | { people: PeoplePropertyFilter; property: string; type?: \"people\" }\n  | { files: ExistencePropertyFilter; property: string; type?: \"files\" }\n  | { url: TextPropertyFilter; property: string; type?: \"url\" }\n  | { email: TextPropertyFilter; property: string; type?: \"email\" }\n  | {\n      phone_number: TextPropertyFilter\n      property: string\n      type?: \"phone_number\"\n    }\n  | { relation: RelationPropertyFilter; property: string; type?: \"relation\" }\n  | { created_by: PeoplePropertyFilter; property: string; type?: \"created_by\" }\n  | {\n      created_time: DatePropertyFilter\n      property: string\n      type?: \"created_time\"\n    }\n  | {\n      last_edited_by: PeoplePropertyFilter\n      property: string\n      type?: \"last_edited_by\"\n    }\n  | {\n      last_edited_time: DatePropertyFilter\n      property: string\n      type?: \"last_edited_time\"\n    }\n  | { formula: FormulaPropertyFilter; property: string; type?: \"formula\" }\n  | { unique_id: NumberPropertyFilter; property: string; type?: \"unique_id\" }\n  | { rollup: RollupPropertyFilter; property: string; type?: \"rollup\" }\n  | {\n      verification: VerificationPropertyStatusFilter\n      property: string\n      type?: \"verification\"\n    }\n\ntype TimestampCreatedTimeFilter = {\n  created_time: DatePropertyFilter\n  timestamp: \"created_time\"\n  type?: \"created_time\"\n}\n\ntype TimestampLastEditedTimeFilter = {\n  last_edited_time: DatePropertyFilter\n  timestamp: \"last_edited_time\"\n  type?: \"last_edited_time\"\n}\n\ntype TimestampFilter =\n  | TimestampCreatedTimeFilter\n  | TimestampLastEditedTimeFilter\n\ntype PropertyOrTimestampFilter = PropertyFilter | TimestampFilter\n\ntype PropertyOrTimestampFilterArray = Array<PropertyOrTimestampFilter>\n\ntype GroupFilterOperatorArray = Array<\n  | PropertyOrTimestampFilter\n  | { or: PropertyOrTimestampFilterArray }\n  | { and: PropertyOrTimestampFilterArray }\n>\n\ntype ParentOfDataSourceRequest = {\n  // Always `database_id`\n  type?: \"database_id\"\n  // The ID of the parent database (with or without dashes), for example,\n  // 195de9221179449fab8075a27c979105\n  database_id: IdRequest\n}\n\ntype NumberPropertyConfigurationRequest = {\n  // Always `number`\n  type?: \"number\"\n  number: { format?: NumberFormat }\n}\n\ntype FormulaPropertyConfigurationRequest = {\n  // Always `formula`\n  type?: \"formula\"\n  formula: { expression?: string }\n}\n\ntype SelectPropertyConfigurationRequest = {\n  // Always `select`\n  type?: \"select\"\n  select: {\n    options?: Array<{\n      name: string\n      color?: SelectColor\n      description?: string | null\n    }>\n  }\n}\n\ntype MultiSelectPropertyConfigurationRequest = {\n  // Always `multi_select`\n  type?: \"multi_select\"\n  multi_select: {\n    options?: Array<{\n      name: string\n      color?: SelectColor\n      description?: string | null\n    }>\n  }\n}\n\ntype StatusPropertyConfigurationRequest = {\n  // Always `status`\n  type?: \"status\"\n  status: EmptyObject\n}\n\ntype RelationPropertyConfigurationRequest = {\n  // Always `relation`\n  type?: \"relation\"\n  relation: { data_source_id: IdRequest } & (\n    | {\n        // Always `single_property`\n        type?: \"single_property\"\n        single_property: EmptyObject\n      }\n    | {\n        // Always `dual_property`\n        type?: \"dual_property\"\n        dual_property: {\n          synced_property_id?: string\n          synced_property_name?: string\n        }\n      }\n  )\n}\n\ntype RollupPropertyConfigurationRequest = {\n  // Always `rollup`\n  type?: \"rollup\"\n  rollup: {\n    // The function to use for the rollup, e.g. count, count_values, percent_not_empty, max.\n    function: RollupFunction\n  } & (\n    | { relation_property_name: string; rollup_property_name: string }\n    | { relation_property_id: string; rollup_property_name: string }\n    | { relation_property_name: string; rollup_property_id: string }\n    | { relation_property_id: string; rollup_property_id: string }\n  )\n}\n\ntype UniqueIdPropertyConfigurationRequest = {\n  // Always `unique_id`\n  type?: \"unique_id\"\n  unique_id: { prefix?: string | null }\n}\n\ntype TitlePropertyConfigurationRequest = {\n  // Always `title`\n  type?: \"title\"\n  title: EmptyObject\n}\n\ntype RichTextPropertyConfigurationRequest = {\n  // Always `rich_text`\n  type?: \"rich_text\"\n  rich_text: EmptyObject\n}\n\ntype UrlPropertyConfigurationRequest = {\n  // Always `url`\n  type?: \"url\"\n  url: EmptyObject\n}\n\ntype PeoplePropertyConfigurationRequest = {\n  // Always `people`\n  type?: \"people\"\n  people: EmptyObject\n}\n\ntype FilesPropertyConfigurationRequest = {\n  // Always `files`\n  type?: \"files\"\n  files: EmptyObject\n}\n\ntype EmailPropertyConfigurationRequest = {\n  // Always `email`\n  type?: \"email\"\n  email: EmptyObject\n}\n\ntype PhoneNumberPropertyConfigurationRequest = {\n  // Always `phone_number`\n  type?: \"phone_number\"\n  phone_number: EmptyObject\n}\n\ntype DatePropertyConfigurationRequest = {\n  // Always `date`\n  type?: \"date\"\n  date: EmptyObject\n}\n\ntype CheckboxPropertyConfigurationRequest = {\n  // Always `checkbox`\n  type?: \"checkbox\"\n  checkbox: EmptyObject\n}\n\ntype CreatedByPropertyConfigurationRequest = {\n  // Always `created_by`\n  type?: \"created_by\"\n  created_by: EmptyObject\n}\n\ntype CreatedTimePropertyConfigurationRequest = {\n  // Always `created_time`\n  type?: \"created_time\"\n  created_time: EmptyObject\n}\n\ntype LastEditedByPropertyConfigurationRequest = {\n  // Always `last_edited_by`\n  type?: \"last_edited_by\"\n  last_edited_by: EmptyObject\n}\n\ntype LastEditedTimePropertyConfigurationRequest = {\n  // Always `last_edited_time`\n  type?: \"last_edited_time\"\n  last_edited_time: EmptyObject\n}\n\ntype ButtonPropertyConfigurationRequest = {\n  // Always `button`\n  type?: \"button\"\n  button: EmptyObject\n}\n\ntype LocationPropertyConfigurationRequest = {\n  // Always `location`\n  type?: \"location\"\n  location: EmptyObject\n}\n\ntype VerificationPropertyConfigurationRequest = {\n  // Always `verification`\n  type?: \"verification\"\n  verification: EmptyObject\n}\n\ntype LastVisitedTimePropertyConfigurationRequest = {\n  // Always `last_visited_time`\n  type?: \"last_visited_time\"\n  last_visited_time: EmptyObject\n}\n\ntype PlacePropertyConfigurationRequest = {\n  // Always `place`\n  type?: \"place\"\n  place: EmptyObject\n}\n\ntype PropertyConfigurationRequestCommon = {\n  // The description of the property.\n  description?: PropertyDescriptionRequest | null\n}\n\ntype PropertyConfigurationRequest = PropertyConfigurationRequestCommon &\n  (\n    | NumberPropertyConfigurationRequest\n    | FormulaPropertyConfigurationRequest\n    | SelectPropertyConfigurationRequest\n    | MultiSelectPropertyConfigurationRequest\n    | StatusPropertyConfigurationRequest\n    | RelationPropertyConfigurationRequest\n    | RollupPropertyConfigurationRequest\n    | UniqueIdPropertyConfigurationRequest\n    | TitlePropertyConfigurationRequest\n    | RichTextPropertyConfigurationRequest\n    | UrlPropertyConfigurationRequest\n    | PeoplePropertyConfigurationRequest\n    | FilesPropertyConfigurationRequest\n    | EmailPropertyConfigurationRequest\n    | PhoneNumberPropertyConfigurationRequest\n    | DatePropertyConfigurationRequest\n    | CheckboxPropertyConfigurationRequest\n    | CreatedByPropertyConfigurationRequest\n    | CreatedTimePropertyConfigurationRequest\n    | LastEditedByPropertyConfigurationRequest\n    | LastEditedTimePropertyConfigurationRequest\n    | ButtonPropertyConfigurationRequest\n    | LocationPropertyConfigurationRequest\n    | VerificationPropertyConfigurationRequest\n    | LastVisitedTimePropertyConfigurationRequest\n    | PlacePropertyConfigurationRequest\n  )\n\ntype TemplateMentionDateTemplateMentionRequest = {\n  // Always `template_mention_date`\n  type?: \"template_mention_date\"\n  // The date of the template mention.\n  template_mention_date: \"today\" | \"now\"\n}\n\ntype TemplateMentionUserTemplateMentionRequest = {\n  // Always `template_mention_user`\n  type?: \"template_mention_user\"\n  // The user of the template mention.\n  template_mention_user: \"me\"\n}\n\ntype TextRichTextItemRequest = {\n  // Always `text`\n  type?: \"text\"\n  // If a rich text object's type value is `text`, then the corresponding text field\n  // contains an object including the text content and any inline link.\n  text: {\n    // The actual text content of the text.\n    content: string\n    // An object with information about any inline link in this text, if included.\n    link?: {\n      // The URL of the link.\n      url: string\n    } | null\n  }\n}\n\ntype MentionRichTextItemRequest = {\n  // Always `mention`\n  type?: \"mention\"\n  // Mention objects represent an inline mention of a database, date, link preview mention,\n  // page, template mention, or user. A mention is created in the Notion UI when a user\n  // types `@` followed by the name of the reference.\n  mention:\n    | {\n        // Always `user`\n        type?: \"user\"\n        // Details of the user mention.\n        user: PartialUserObjectRequest\n      }\n    | {\n        // Always `date`\n        type?: \"date\"\n        // Details of the date mention.\n        date: DateRequest\n      }\n    | {\n        // Always `page`\n        type?: \"page\"\n        // Details of the page mention.\n        page: {\n          // The ID of the page in the mention.\n          id: IdRequest\n        }\n      }\n    | {\n        // Always `database`\n        type?: \"database\"\n        // Details of the database mention.\n        database: {\n          // The ID of the database in the mention.\n          id: IdRequest\n        }\n      }\n    | {\n        // Always `template_mention`\n        type?: \"template_mention\"\n        // Details of the template mention.\n        template_mention: TemplateMentionRequest\n      }\n    | {\n        // Always `custom_emoji`\n        type?: \"custom_emoji\"\n        // Details of the custom emoji mention.\n        custom_emoji: {\n          // The ID of the custom emoji.\n          id: IdRequest\n          // The name of the custom emoji.\n          name?: string\n          // The URL of the custom emoji.\n          url?: string\n        }\n      }\n}\n\ntype EquationRichTextItemRequest = {\n  // Always `equation`\n  type?: \"equation\"\n  // Notion supports inline LaTeX equations as rich text objects with a type value of\n  // `equation`.\n  equation: {\n    // A KaTeX compatible string.\n    expression: string\n  }\n}\n\ntype RichTextItemRequestCommon = {\n  // All rich text objects contain an annotations object that sets the styling for the rich\n  // text.\n  annotations?: AnnotationRequest\n}\n\ntype FileUploadPageIconRequest = {\n  // Always `file_upload`\n  type?: \"file_upload\"\n  file_upload: {\n    // ID of a FileUpload object that has the status `uploaded`.\n    id: string\n  }\n}\n\ntype EmojiPageIconRequest = {\n  // Always `emoji`\n  type?: \"emoji\"\n  // An emoji character.\n  emoji: EmojiRequest\n}\n\ntype ExternalPageIconRequest = {\n  // Always `external`\n  type?: \"external\"\n  external: {\n    // The URL of the external file.\n    url: string\n  }\n}\n\ntype CustomEmojiPageIconRequest = {\n  // Always `custom_emoji`\n  type?: \"custom_emoji\"\n  custom_emoji: {\n    // The ID of the custom emoji.\n    id: IdRequest\n    // The name of the custom emoji.\n    name?: string\n    // The URL of the custom emoji.\n    url?: string\n  }\n}\n\ntype InitialDataSourceRequest = {\n  // Property schema for the initial data source, if you'd like to create one.\n  properties?: Record<string, PropertyConfigurationRequest>\n}\n\ntype FileUploadPageCoverRequest = {\n  // Always `file_upload`\n  type?: \"file_upload\"\n  // The file upload for the cover.\n  file_upload: {\n    // ID of a FileUpload object that has the status `uploaded`.\n    id: string\n  }\n}\n\ntype ExternalPageCoverRequest = {\n  // Always `external`\n  type?: \"external\"\n  // External URL for the cover.\n  external: {\n    // The URL of the external file.\n    url: string\n  }\n}\nexport type GetSelfParameters = Record<string, never>\n\nexport type GetSelfResponse = UserObjectResponse\n\n/**\n * Retrieve your token's bot user\n */\nexport const getSelf = {\n  method: \"get\",\n  pathParams: [],\n  queryParams: [],\n  bodyParams: [],\n\n  path: (): string => `users/me`,\n} as const\n\ntype GetUserPathParameters = {\n  user_id: IdRequest\n}\n\nexport type GetUserParameters = GetUserPathParameters\n\nexport type GetUserResponse = UserObjectResponse\n\n/**\n * Retrieve a user\n */\nexport const getUser = {\n  method: \"get\",\n  pathParams: [\"user_id\"],\n  queryParams: [],\n  bodyParams: [],\n\n  path: (p: GetUserPathParameters): string => `users/${p.user_id}`,\n} as const\n\ntype ListUsersQueryParameters = {\n  start_cursor?: string\n  page_size?: number\n}\n\nexport type ListUsersParameters = ListUsersQueryParameters\n\nexport type ListUsersResponse = {\n  type: \"user\"\n  user: EmptyObject\n  object: \"list\"\n  next_cursor: string | null\n  has_more: boolean\n  results: Array<UserObjectResponse>\n}\n\n/**\n * List all users\n */\nexport const listUsers = {\n  method: \"get\",\n  pathParams: [],\n  queryParams: [\"start_cursor\", \"page_size\"],\n  bodyParams: [],\n\n  path: (): string => `users`,\n} as const\n\ntype CreatePageBodyParameters = {\n  parent?:\n    | { page_id: IdRequest; type?: \"page_id\" }\n    | { database_id: IdRequest; type?: \"database_id\" }\n    | { data_source_id: IdRequest; type?: \"data_source_id\" }\n    | { workspace: true; type?: \"workspace\" }\n  properties?: Record<\n    string,\n    | { title: Array<RichTextItemRequest>; type?: \"title\" }\n    | { rich_text: Array<RichTextItemRequest>; type?: \"rich_text\" }\n    | { number: number | null; type?: \"number\" }\n    | { url: TextRequest | null; type?: \"url\" }\n    | {\n        select:\n          | {\n              id: StringRequest\n              name?: TextRequest\n              color?: SelectColor\n              description?: TextRequest | null\n            }\n          | {\n              name: TextRequest\n              id?: StringRequest\n              color?: SelectColor\n              description?: TextRequest | null\n            }\n          | null\n        type?: \"select\"\n      }\n    | {\n        multi_select: Array<\n          | {\n              id: StringRequest\n              name?: TextRequest\n              color?: SelectColor\n              description?: TextRequest | null\n            }\n          | {\n              name: TextRequest\n              id?: StringRequest\n              color?: SelectColor\n              description?: TextRequest | null\n            }\n        >\n        type?: \"multi_select\"\n      }\n    | {\n        people: Array<PartialUserObjectRequest | GroupObjectRequest>\n        type?: \"people\"\n      }\n    | { email: StringRequest | null; type?: \"email\" }\n    | { phone_number: StringRequest | null; type?: \"phone_number\" }\n    | { date: DateRequest | null; type?: \"date\" }\n    | { checkbox: boolean; type?: \"checkbox\" }\n    | { relation: Array<{ id: IdRequest }>; type?: \"relation\" }\n    | {\n        files: Array<\n          | InternalOrExternalFileWithNameRequest\n          | FileUploadWithOptionalNameRequest\n        >\n        type?: \"files\"\n      }\n    | {\n        status:\n          | {\n              id: StringRequest\n              name?: TextRequest\n              color?: SelectColor\n              description?: TextRequest | null\n            }\n          | {\n              name: TextRequest\n              id?: StringRequest\n              color?: SelectColor\n              description?: TextRequest | null\n            }\n          | null\n        type?: \"status\"\n      }\n  >\n  icon?: PageIconRequest | null\n  cover?: PageCoverRequest | null\n  content?: Array<BlockObjectRequest>\n  children?: Array<BlockObjectRequest>\n}\n\nexport type CreatePageParameters = CreatePageBodyParameters\n\nexport type CreatePageResponse = PageObjectResponse | PartialPageObjectResponse\n\n/**\n * Create a page\n */\nexport const createPage = {\n  method: \"post\",\n  pathParams: [],\n  queryParams: [],\n  bodyParams: [\"parent\", \"properties\", \"icon\", \"cover\", \"content\", \"children\"],\n\n  path: (): string => `pages`,\n} as const\n\ntype GetPagePathParameters = {\n  page_id: IdRequest\n}\n\ntype GetPageQueryParameters = {\n  filter_properties?: Array<string>\n}\n\nexport type GetPageParameters = GetPagePathParameters & GetPageQueryParameters\n\nexport type GetPageResponse = PageObjectResponse | PartialPageObjectResponse\n\n/**\n * Retrieve a page\n */\nexport const getPage = {\n  method: \"get\",\n  pathParams: [\"page_id\"],\n  queryParams: [\"filter_properties\"],\n  bodyParams: [],\n\n  path: (p: GetPagePathParameters): string => `pages/${p.page_id}`,\n} as const\n\ntype UpdatePagePathParameters = {\n  page_id: IdRequest\n}\n\ntype UpdatePageBodyParameters = {\n  properties?: Record<\n    string,\n    | { title: Array<RichTextItemRequest>; type?: \"title\" }\n    | { rich_text: Array<RichTextItemRequest>; type?: \"rich_text\" }\n    | { number: number | null; type?: \"number\" }\n    | { url: TextRequest | null; type?: \"url\" }\n    | {\n        select:\n          | {\n              id: StringRequest\n              name?: TextRequest\n              color?: SelectColor\n              description?: TextRequest | null\n            }\n          | {\n              name: TextRequest\n              id?: StringRequest\n              color?: SelectColor\n              description?: TextRequest | null\n            }\n          | null\n        type?: \"select\"\n      }\n    | {\n        multi_select: Array<\n          | {\n              id: StringRequest\n              name?: TextRequest\n              color?: SelectColor\n              description?: TextRequest | null\n            }\n          | {\n              name: TextRequest\n              id?: StringRequest\n              color?: SelectColor\n              description?: TextRequest | null\n            }\n        >\n        type?: \"multi_select\"\n      }\n    | {\n        people: Array<PartialUserObjectRequest | GroupObjectRequest>\n        type?: \"people\"\n      }\n    | { email: StringRequest | null; type?: \"email\" }\n    | { phone_number: StringRequest | null; type?: \"phone_number\" }\n    | { date: DateRequest | null; type?: \"date\" }\n    | { checkbox: boolean; type?: \"checkbox\" }\n    | { relation: Array<{ id: IdRequest }>; type?: \"relation\" }\n    | {\n        files: Array<\n          | InternalOrExternalFileWithNameRequest\n          | FileUploadWithOptionalNameRequest\n        >\n        type?: \"files\"\n      }\n    | {\n        status:\n          | {\n              id: StringRequest\n              name?: TextRequest\n              color?: SelectColor\n              description?: TextRequest | null\n            }\n          | {\n              name: TextRequest\n              id?: StringRequest\n              color?: SelectColor\n              description?: TextRequest | null\n            }\n          | null\n        type?: \"status\"\n      }\n  >\n  icon?: PageIconRequest | null\n  cover?: PageCoverRequest | null\n  // Whether the page should be locked from editing in the Notion app UI. If not provided,\n  // the locked state will not be updated.\n  is_locked?: boolean\n  archived?: boolean\n  in_trash?: boolean\n}\n\nexport type UpdatePageParameters = UpdatePagePathParameters &\n  UpdatePageBodyParameters\n\nexport type UpdatePageResponse = PageObjectResponse | PartialPageObjectResponse\n\n/**\n * Update page properties\n */\nexport const updatePage = {\n  method: \"patch\",\n  pathParams: [\"page_id\"],\n  queryParams: [],\n  bodyParams: [\n    \"properties\",\n    \"icon\",\n    \"cover\",\n    \"is_locked\",\n    \"archived\",\n    \"in_trash\",\n  ],\n\n  path: (p: UpdatePagePathParameters): string => `pages/${p.page_id}`,\n} as const\n\ntype GetPagePropertyPathParameters = {\n  page_id: IdRequest\n  property_id: string\n}\n\ntype GetPagePropertyQueryParameters = {\n  start_cursor?: string\n  page_size?: number\n}\n\nexport type GetPagePropertyParameters = GetPagePropertyPathParameters &\n  GetPagePropertyQueryParameters\n\nexport type GetPagePropertyResponse =\n  | PropertyItemObjectResponse\n  | PropertyItemListResponse\n\n/**\n * Retrieve a page property item\n */\nexport const getPageProperty = {\n  method: \"get\",\n  pathParams: [\"page_id\", \"property_id\"],\n  queryParams: [\"start_cursor\", \"page_size\"],\n  bodyParams: [],\n\n  path: (p: GetPagePropertyPathParameters): string =>\n    `pages/${p.page_id}/properties/${p.property_id}`,\n} as const\n\ntype GetBlockPathParameters = {\n  block_id: IdRequest\n}\n\nexport type GetBlockParameters = GetBlockPathParameters\n\nexport type GetBlockResponse = PartialBlockObjectResponse | BlockObjectResponse\n\n/**\n * Retrieve a block\n */\nexport const getBlock = {\n  method: \"get\",\n  pathParams: [\"block_id\"],\n  queryParams: [],\n  bodyParams: [],\n\n  path: (p: GetBlockPathParameters): string => `blocks/${p.block_id}`,\n} as const\n\ntype UpdateBlockPathParameters = {\n  block_id: IdRequest\n}\n\ntype UpdateBlockBodyParameters =\n  | {\n      embed: UpdateMediaContentWithUrlAndCaptionRequest\n      type?: \"embed\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      bookmark: UpdateMediaContentWithUrlAndCaptionRequest\n      type?: \"bookmark\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      image: UpdateMediaContentWithFileAndCaptionRequest\n      type?: \"image\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      video: UpdateMediaContentWithFileAndCaptionRequest\n      type?: \"video\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      pdf: UpdateMediaContentWithFileAndCaptionRequest\n      type?: \"pdf\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      file: UpdateMediaContentWithFileNameAndCaptionRequest\n      type?: \"file\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      audio: UpdateMediaContentWithFileAndCaptionRequest\n      type?: \"audio\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      code: {\n        rich_text?: Array<RichTextItemRequest>\n        language?: LanguageRequest\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"code\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      equation: ContentWithExpressionRequest\n      type?: \"equation\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      divider: EmptyObject\n      type?: \"divider\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      breadcrumb: EmptyObject\n      type?: \"breadcrumb\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      table_of_contents: { color?: ApiColor }\n      type?: \"table_of_contents\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      link_to_page:\n        | { page_id: IdRequest; type?: \"page_id\" }\n        | { database_id: IdRequest; type?: \"database_id\" }\n        | { comment_id: IdRequest; type?: \"comment_id\" }\n      type?: \"link_to_page\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      table_row: ContentWithTableRowRequest\n      type?: \"table_row\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      heading_1: HeaderContentWithRichTextAndColorRequest\n      type?: \"heading_1\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      heading_2: HeaderContentWithRichTextAndColorRequest\n      type?: \"heading_2\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      heading_3: HeaderContentWithRichTextAndColorRequest\n      type?: \"heading_3\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      paragraph: ContentWithRichTextAndColorRequest\n      type?: \"paragraph\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      bulleted_list_item: ContentWithRichTextAndColorRequest\n      type?: \"bulleted_list_item\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      numbered_list_item: ContentWithRichTextAndColorRequest\n      type?: \"numbered_list_item\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      quote: ContentWithRichTextAndColorRequest\n      type?: \"quote\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      to_do: {\n        rich_text?: Array<RichTextItemRequest>\n        checked?: boolean\n        color?: ApiColor\n      }\n      type?: \"to_do\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      toggle: ContentWithRichTextAndColorRequest\n      type?: \"toggle\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      template: ContentWithRichTextRequest\n      type?: \"template\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      callout: {\n        rich_text?: Array<RichTextItemRequest>\n        icon?: PageIconRequest\n        color?: ApiColor\n      }\n      type?: \"callout\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      synced_block: {\n        synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n      }\n      type?: \"synced_block\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      table: { has_column_header?: boolean; has_row_header?: boolean }\n      type?: \"table\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | {\n      column: {\n        // Ratio between 0 and 1 of the width of this column relative to all columns in the list.\n        // If not provided, uses an equal width.\n        width_ratio?: number\n      }\n      type?: \"column\"\n      archived?: boolean\n      in_trash?: boolean\n    }\n  | { archived?: boolean; in_trash?: boolean }\n\nexport type UpdateBlockParameters = UpdateBlockPathParameters &\n  UpdateBlockBodyParameters\n\nexport type UpdateBlockResponse =\n  | PartialBlockObjectResponse\n  | BlockObjectResponse\n\n/**\n * Update a block\n */\nexport const updateBlock = {\n  method: \"patch\",\n  pathParams: [\"block_id\"],\n  queryParams: [],\n  bodyParams: [\n    \"embed\",\n    \"type\",\n    \"archived\",\n    \"in_trash\",\n    \"bookmark\",\n    \"image\",\n    \"video\",\n    \"pdf\",\n    \"file\",\n    \"audio\",\n    \"code\",\n    \"equation\",\n    \"divider\",\n    \"breadcrumb\",\n    \"table_of_contents\",\n    \"link_to_page\",\n    \"table_row\",\n    \"heading_1\",\n    \"heading_2\",\n    \"heading_3\",\n    \"paragraph\",\n    \"bulleted_list_item\",\n    \"numbered_list_item\",\n    \"quote\",\n    \"to_do\",\n    \"toggle\",\n    \"template\",\n    \"callout\",\n    \"synced_block\",\n    \"table\",\n    \"column\",\n  ],\n\n  path: (p: UpdateBlockPathParameters): string => `blocks/${p.block_id}`,\n} as const\n\ntype DeleteBlockPathParameters = {\n  block_id: IdRequest\n}\n\nexport type DeleteBlockParameters = DeleteBlockPathParameters\n\nexport type DeleteBlockResponse =\n  | PartialBlockObjectResponse\n  | BlockObjectResponse\n\n/**\n * Delete a block\n */\nexport const deleteBlock = {\n  method: \"delete\",\n  pathParams: [\"block_id\"],\n  queryParams: [],\n  bodyParams: [],\n\n  path: (p: DeleteBlockPathParameters): string => `blocks/${p.block_id}`,\n} as const\n\ntype ListBlockChildrenPathParameters = {\n  block_id: IdRequest\n}\n\ntype ListBlockChildrenQueryParameters = {\n  start_cursor?: string\n  page_size?: number\n}\n\nexport type ListBlockChildrenParameters = ListBlockChildrenPathParameters &\n  ListBlockChildrenQueryParameters\n\nexport type ListBlockChildrenResponse = {\n  type: \"block\"\n  block: EmptyObject\n  object: \"list\"\n  next_cursor: string | null\n  has_more: boolean\n  results: Array<PartialBlockObjectResponse | BlockObjectResponse>\n}\n\n/**\n * Retrieve block children\n */\nexport const listBlockChildren = {\n  method: \"get\",\n  pathParams: [\"block_id\"],\n  queryParams: [\"start_cursor\", \"page_size\"],\n  bodyParams: [],\n\n  path: (p: ListBlockChildrenPathParameters): string =>\n    `blocks/${p.block_id}/children`,\n} as const\n\ntype AppendBlockChildrenPathParameters = {\n  block_id: IdRequest\n}\n\ntype AppendBlockChildrenBodyParameters = {\n  children: Array<BlockObjectRequest>\n  after?: IdRequest\n}\n\nexport type AppendBlockChildrenParameters = AppendBlockChildrenPathParameters &\n  AppendBlockChildrenBodyParameters\n\nexport type AppendBlockChildrenResponse = {\n  type: \"block\"\n  block: EmptyObject\n  object: \"list\"\n  next_cursor: string | null\n  has_more: boolean\n  results: Array<PartialBlockObjectResponse | BlockObjectResponse>\n}\n\n/**\n * Append block children\n */\nexport const appendBlockChildren = {\n  method: \"patch\",\n  pathParams: [\"block_id\"],\n  queryParams: [],\n  bodyParams: [\"children\", \"after\"],\n\n  path: (p: AppendBlockChildrenPathParameters): string =>\n    `blocks/${p.block_id}/children`,\n} as const\n\ntype GetDataSourcePathParameters = {\n  // ID of a Notion data source.\n  data_source_id: IdRequest\n}\n\nexport type GetDataSourceParameters = GetDataSourcePathParameters\n\nexport type GetDataSourceResponse =\n  | PartialDataSourceObjectResponse\n  | DataSourceObjectResponse\n\n/**\n * Retrieve a data source\n */\nexport const getDataSource = {\n  method: \"get\",\n  pathParams: [\"data_source_id\"],\n  queryParams: [],\n  bodyParams: [],\n\n  path: (p: GetDataSourcePathParameters): string =>\n    `data_sources/${p.data_source_id}`,\n} as const\n\ntype UpdateDataSourcePathParameters = {\n  // ID of a Notion data source.\n  data_source_id: IdRequest\n}\n\ntype UpdateDataSourceBodyParameters = {\n  // Title of data source as it appears in Notion.\n  title?: Array<RichTextItemRequest>\n  // Page icon.\n  icon?: PageIconRequest | null\n  // The property schema of the data source. The keys are property names or IDs, and the\n  // values are property configuration objects. Properties set to null will be removed.\n  properties?: Record<\n    string,\n    | ({\n        // The name of the property.\n        name?: string\n        // The description of the property.\n        description?: PropertyDescriptionRequest | null\n      } & (\n        | {\n            // Always `number`\n            type?: \"number\"\n            number: { format?: NumberFormat }\n          }\n        | {\n            // Always `formula`\n            type?: \"formula\"\n            formula: { expression?: string }\n          }\n        | {\n            // Always `select`\n            type?: \"select\"\n            select: {\n              options?: Array<\n                { color?: SelectColor; description?: string | null } & (\n                  | { name: string; id?: string }\n                  | { id: string; name?: string }\n                )\n              >\n            }\n          }\n        | {\n            // Always `multi_select`\n            type?: \"multi_select\"\n            multi_select: {\n              options?: Array<\n                { color?: SelectColor; description?: string | null } & (\n                  | { name: string; id?: string }\n                  | { id: string; name?: string }\n                )\n              >\n            }\n          }\n        | {\n            // Always `status`\n            type?: \"status\"\n            status: EmptyObject\n          }\n        | {\n            // Always `relation`\n            type?: \"relation\"\n            relation: { data_source_id: IdRequest } & (\n              | {\n                  // Always `single_property`\n                  type?: \"single_property\"\n                  single_property: EmptyObject\n                }\n              | {\n                  // Always `dual_property`\n                  type?: \"dual_property\"\n                  dual_property: {\n                    synced_property_id?: string\n                    synced_property_name?: string\n                  }\n                }\n            )\n          }\n        | {\n            // Always `rollup`\n            type?: \"rollup\"\n            rollup: {\n              // The function to use for the rollup, e.g. count, count_values, percent_not_empty, max.\n              function: RollupFunction\n            } & (\n              | { relation_property_name: string; rollup_property_name: string }\n              | { relation_property_id: string; rollup_property_name: string }\n              | { relation_property_name: string; rollup_property_id: string }\n              | { relation_property_id: string; rollup_property_id: string }\n            )\n          }\n        | {\n            // Always `unique_id`\n            type?: \"unique_id\"\n            unique_id: { prefix?: string | null }\n          }\n        | {\n            // Always `title`\n            type?: \"title\"\n            title: EmptyObject\n          }\n        | {\n            // Always `rich_text`\n            type?: \"rich_text\"\n            rich_text: EmptyObject\n          }\n        | {\n            // Always `url`\n            type?: \"url\"\n            url: EmptyObject\n          }\n        | {\n            // Always `people`\n            type?: \"people\"\n            people: EmptyObject\n          }\n        | {\n            // Always `files`\n            type?: \"files\"\n            files: EmptyObject\n          }\n        | {\n            // Always `email`\n            type?: \"email\"\n            email: EmptyObject\n          }\n        | {\n            // Always `phone_number`\n            type?: \"phone_number\"\n            phone_number: EmptyObject\n          }\n        | {\n            // Always `date`\n            type?: \"date\"\n            date: EmptyObject\n          }\n        | {\n            // Always `checkbox`\n            type?: \"checkbox\"\n            checkbox: EmptyObject\n          }\n        | {\n            // Always `created_by`\n            type?: \"created_by\"\n            created_by: EmptyObject\n          }\n        | {\n            // Always `created_time`\n            type?: \"created_time\"\n            created_time: EmptyObject\n          }\n        | {\n            // Always `last_edited_by`\n            type?: \"last_edited_by\"\n            last_edited_by: EmptyObject\n          }\n        | {\n            // Always `last_edited_time`\n            type?: \"last_edited_time\"\n            last_edited_time: EmptyObject\n          }\n      ))\n    | {\n        // The new name of the property.\n        name: string\n      }\n    | null\n  >\n  // Whether the database should be moved to or from the trash. If not provided, the trash\n  // status will not be updated.\n  in_trash?: boolean\n  // Whether the database should be moved to or from the trash. If not provided, the trash\n  // status will not be updated. Equivalent to `in_trash`.\n  archived?: boolean\n  // The parent of the data source, when moving it to a different database. If not\n  // provided, the parent will not be updated.\n  parent?: ParentOfDataSourceRequest\n}\n\nexport type UpdateDataSourceParameters = UpdateDataSourcePathParameters &\n  UpdateDataSourceBodyParameters\n\nexport type UpdateDataSourceResponse =\n  | PartialDataSourceObjectResponse\n  | DataSourceObjectResponse\n\n/**\n * Update a data source\n */\nexport const updateDataSource = {\n  method: \"patch\",\n  pathParams: [\"data_source_id\"],\n  queryParams: [],\n  bodyParams: [\"title\", \"icon\", \"properties\", \"in_trash\", \"archived\", \"parent\"],\n\n  path: (p: UpdateDataSourcePathParameters): string =>\n    `data_sources/${p.data_source_id}`,\n} as const\n\ntype QueryDataSourcePathParameters = {\n  data_source_id: IdRequest\n}\n\ntype QueryDataSourceQueryParameters = {\n  filter_properties?: Array<string>\n}\n\ntype QueryDataSourceBodyParameters = {\n  sorts?: Array<\n    | { property: string; direction: \"ascending\" | \"descending\" }\n    | {\n        timestamp: \"created_time\" | \"last_edited_time\"\n        direction: \"ascending\" | \"descending\"\n      }\n  >\n  filter?:\n    | { or: GroupFilterOperatorArray }\n    | { and: GroupFilterOperatorArray }\n    | PropertyFilter\n    | TimestampFilter\n  start_cursor?: string\n  page_size?: number\n  archived?: boolean\n  in_trash?: boolean\n}\n\nexport type QueryDataSourceParameters = QueryDataSourcePathParameters &\n  QueryDataSourceQueryParameters &\n  QueryDataSourceBodyParameters\n\nexport type QueryDataSourceResponse = {\n  type: \"page_or_data_source\"\n  page_or_data_source: EmptyObject\n  object: \"list\"\n  next_cursor: string | null\n  has_more: boolean\n  results: Array<\n    | PageObjectResponse\n    | PartialPageObjectResponse\n    | PartialDataSourceObjectResponse\n    | DataSourceObjectResponse\n  >\n}\n\n/**\n * Query a data source\n */\nexport const queryDataSource = {\n  method: \"post\",\n  pathParams: [\"data_source_id\"],\n  queryParams: [\"filter_properties\"],\n  bodyParams: [\n    \"sorts\",\n    \"filter\",\n    \"start_cursor\",\n    \"page_size\",\n    \"archived\",\n    \"in_trash\",\n  ],\n\n  path: (p: QueryDataSourcePathParameters): string =>\n    `data_sources/${p.data_source_id}/query`,\n} as const\n\ntype CreateDataSourceBodyParameters = {\n  // An object specifying the parent of the new data source to be created.\n  parent: ParentOfDataSourceRequest\n  // Property schema of data source.\n  properties: Record<string, PropertyConfigurationRequest>\n  // Title of data source as it appears in Notion.\n  title?: Array<RichTextItemRequest>\n  // Page icon.\n  icon?: PageIconRequest | null\n}\n\nexport type CreateDataSourceParameters = CreateDataSourceBodyParameters\n\nexport type CreateDataSourceResponse =\n  | PartialDataSourceObjectResponse\n  | DataSourceObjectResponse\n\n/**\n * Create a data source\n */\nexport const createDataSource = {\n  method: \"post\",\n  pathParams: [],\n  queryParams: [],\n  bodyParams: [\"parent\", \"properties\", \"title\", \"icon\"],\n\n  path: (): string => `data_sources`,\n} as const\n\ntype GetDatabasePathParameters = {\n  // ID of a Notion database, a container for one or more data sources.\n  database_id: IdRequest\n}\n\nexport type GetDatabaseParameters = GetDatabasePathParameters\n\nexport type GetDatabaseResponse =\n  | PartialDatabaseObjectResponse\n  | DatabaseObjectResponse\n\n/**\n * Retrieve a database\n */\nexport const getDatabase = {\n  method: \"get\",\n  pathParams: [\"database_id\"],\n  queryParams: [],\n  bodyParams: [],\n\n  path: (p: GetDatabasePathParameters): string => `databases/${p.database_id}`,\n} as const\n\ntype UpdateDatabasePathParameters = {\n  // ID of a Notion database, a container for one or more data sources.\n  database_id: IdRequest\n}\n\ntype UpdateDatabaseBodyParameters = {\n  // The parent page or workspace to move the database to. If not provided, the database\n  // will not be moved.\n  parent?: {\n    // The type of parent.\n    type: \"page_id\" | \"workspace\"\n  } & (\n    | {\n        // Always `page_id`\n        type: \"page_id\"\n        page_id: IdRequest\n      }\n    | {\n        // Always `workspace`\n        type: \"workspace\"\n        // Always `true`\n        workspace: true\n      }\n  )\n  // The updated title of the database, if any. If not provided, the title will not be\n  // updated.\n  title?: Array<RichTextItemRequest>\n  // The updated description of the database, if any. If not provided, the description will\n  // not be updated.\n  description?: Array<RichTextItemRequest>\n  // Whether the database should be displayed inline in the parent page. If not provided,\n  // the inline status will not be updated.\n  is_inline?: boolean\n  // The updated icon for the database, if any. If not provided, the icon will not be\n  // updated.\n  icon?: PageIconRequest\n  // The updated cover image for the database, if any. If not provided, the cover will not\n  // be updated.\n  cover?: PageCoverRequest\n  // Whether the database should be moved to or from the trash. If not provided, the trash\n  // status will not be updated.\n  in_trash?: boolean\n  // Whether the database should be locked from editing in the Notion app UI. If not\n  // provided, the locked state will not be updated.\n  is_locked?: boolean\n}\n\nexport type UpdateDatabaseParameters = UpdateDatabasePathParameters &\n  UpdateDatabaseBodyParameters\n\nexport type UpdateDatabaseResponse =\n  | PartialDatabaseObjectResponse\n  | DatabaseObjectResponse\n\n/**\n * Update a database\n */\nexport const updateDatabase = {\n  method: \"patch\",\n  pathParams: [\"database_id\"],\n  queryParams: [],\n  bodyParams: [\n    \"parent\",\n    \"title\",\n    \"description\",\n    \"is_inline\",\n    \"icon\",\n    \"cover\",\n    \"in_trash\",\n    \"is_locked\",\n  ],\n\n  path: (p: UpdateDatabasePathParameters): string =>\n    `databases/${p.database_id}`,\n} as const\n\ntype CreateDatabaseBodyParameters = {\n  // The parent page or workspace where the database will be created.\n  parent: {\n    // The type of parent.\n    type: \"page_id\" | \"workspace\"\n  } & (\n    | {\n        // Always `page_id`\n        type: \"page_id\"\n        page_id: IdRequest\n      }\n    | {\n        // Always `workspace`\n        type: \"workspace\"\n        // Always `true`\n        workspace: true\n      }\n  )\n  // The title of the database.\n  title?: Array<RichTextItemRequest>\n  // The description of the database.\n  description?: Array<RichTextItemRequest>\n  // Whether the database should be displayed inline in the parent page. Defaults to false.\n  is_inline?: boolean\n  // Initial data source configuration for the database.\n  initial_data_source?: InitialDataSourceRequest\n  // The icon for the database.\n  icon?: PageIconRequest\n  // The cover image for the database.\n  cover?: PageCoverRequest\n}\n\nexport type CreateDatabaseParameters = CreateDatabaseBodyParameters\n\nexport type CreateDatabaseResponse =\n  | PartialDatabaseObjectResponse\n  | DatabaseObjectResponse\n\n/**\n * Create a database\n */\nexport const createDatabase = {\n  method: \"post\",\n  pathParams: [],\n  queryParams: [],\n  bodyParams: [\n    \"parent\",\n    \"title\",\n    \"description\",\n    \"is_inline\",\n    \"initial_data_source\",\n    \"icon\",\n    \"cover\",\n  ],\n\n  path: (): string => `databases`,\n} as const\n\ntype SearchBodyParameters = {\n  sort?: {\n    timestamp: \"last_edited_time\"\n    direction: \"ascending\" | \"descending\"\n  }\n  query?: string\n  start_cursor?: string\n  page_size?: number\n  filter?: { property: \"object\"; value: \"page\" | \"data_source\" }\n}\n\nexport type SearchParameters = SearchBodyParameters\n\nexport type SearchResponse = {\n  type: \"page_or_data_source\"\n  page_or_data_source: EmptyObject\n  object: \"list\"\n  next_cursor: string | null\n  has_more: boolean\n  results: Array<\n    | PageObjectResponse\n    | PartialPageObjectResponse\n    | PartialDataSourceObjectResponse\n    | DataSourceObjectResponse\n  >\n}\n\n/**\n * Search by title\n */\nexport const search = {\n  method: \"post\",\n  pathParams: [],\n  queryParams: [],\n  bodyParams: [\"sort\", \"query\", \"start_cursor\", \"page_size\", \"filter\"],\n\n  path: (): string => `search`,\n} as const\n\ntype CreateCommentBodyParameters = {\n  // An array of rich text objects that represent the content of the comment.\n  rich_text: Array<RichTextItemRequest>\n  // An array of files to attach to the comment. Maximum of 3 allowed.\n  attachments?: Array<{\n    // ID of a FileUpload object that has the status `uploaded`.\n    file_upload_id: string\n    // Always `file_upload`\n    type?: \"file_upload\"\n  }>\n  // Display name for the comment.\n  display_name?:\n    | {\n        // Always `integration`\n        type: \"integration\"\n      }\n    | {\n        // Always `user`\n        type: \"user\"\n      }\n    | {\n        // Always `custom`\n        type: \"custom\"\n        custom: {\n          // The custom display name to use\n          name: string\n        }\n      }\n} & (\n  | {\n      // The parent of the comment. This can be a page or a block.\n      parent:\n        | {\n            // The ID of the parent page (with or without dashes), for example,\n            // 195de9221179449fab8075a27c979105\n            page_id: IdRequest\n            // Always `page_id`\n            type?: \"page_id\"\n          }\n        | {\n            // The ID of the parent block (with or without dashes), for example,\n            // 195de9221179449fab8075a27c979105\n            block_id: IdRequest\n            // Always `block_id`\n            type?: \"block_id\"\n          }\n    }\n  | {\n      // The ID of the discussion to comment on.\n      discussion_id: IdRequest\n    }\n)\n\nexport type CreateCommentParameters = CreateCommentBodyParameters\n\nexport type CreateCommentResponse =\n  | PartialCommentObjectResponse\n  | CommentObjectResponse\n\n/**\n * Create a comment\n */\nexport const createComment = {\n  method: \"post\",\n  pathParams: [],\n  queryParams: [],\n  bodyParams: [\n    \"rich_text\",\n    \"attachments\",\n    \"display_name\",\n    \"parent\",\n    \"discussion_id\",\n  ],\n\n  path: (): string => `comments`,\n} as const\n\ntype ListCommentsQueryParameters = {\n  // Identifier for a Notion block or page.\n  block_id: IdRequest\n  // If supplied, this endpoint will return a page of results starting after the cursor\n  // provided. If not supplied, this endpoint will return the first page of results.\n  start_cursor?: string\n  // The number of items from the full list desired in the response. Maximum: 100\n  page_size?: number\n}\n\nexport type ListCommentsParameters = ListCommentsQueryParameters\n\nexport type ListCommentsResponse = {\n  // Always `list`\n  object: \"list\"\n  next_cursor: IdResponse | null\n  has_more: boolean\n  results: Array<CommentObjectResponse>\n  // Always `comment`\n  type: \"comment\"\n  comment: EmptyObject\n}\n\n/**\n * List comments\n */\nexport const listComments = {\n  method: \"get\",\n  pathParams: [],\n  queryParams: [\"block_id\", \"start_cursor\", \"page_size\"],\n  bodyParams: [],\n\n  path: (): string => `comments`,\n} as const\n\ntype GetCommentPathParameters = {\n  // The ID of the comment to retrieve.\n  comment_id: IdRequest\n}\n\nexport type GetCommentParameters = GetCommentPathParameters\n\nexport type GetCommentResponse =\n  | PartialCommentObjectResponse\n  | CommentObjectResponse\n\n/**\n * Retrieve a comment\n */\nexport const getComment = {\n  method: \"get\",\n  pathParams: [\"comment_id\"],\n  queryParams: [],\n  bodyParams: [],\n\n  path: (p: GetCommentPathParameters): string => `comments/${p.comment_id}`,\n} as const\n\ntype CreateFileUploadBodyParameters = {\n  // How the file is being sent. Use `multi_part` for files larger than 20MB. Use\n  // `external_url` for files that are temporarily hosted publicly elsewhere. Default is\n  // `single_part`.\n  mode?: \"single_part\" | \"multi_part\" | \"external_url\"\n  // Name of the file to be created. Required when `mode` is `multi_part`. Otherwise\n  // optional, and used to override the filename. Must include an extension, or have one\n  // inferred from the `content_type` parameter.\n  filename?: string\n  // MIME type of the file to be created. Recommended when sending the file in multiple\n  // parts. Must match the content type of the file that's sent, and the extension of the\n  // `filename` parameter if any.\n  content_type?: string\n  // When `mode` is `multi_part`, the number of parts you are uploading. This must match\n  // the number of parts as well as the final `part_number` you send.\n  number_of_parts?: number\n  // When `mode` is `external_url`, provide the HTTPS URL of a publicly accessible file to\n  // import into your workspace.\n  external_url?: string\n}\n\nexport type CreateFileUploadParameters = CreateFileUploadBodyParameters\n\nexport type CreateFileUploadResponse = FileUploadObjectResponse\n\n/**\n * Create a file upload\n */\nexport const createFileUpload = {\n  method: \"post\",\n  pathParams: [],\n  queryParams: [],\n  bodyParams: [\n    \"mode\",\n    \"filename\",\n    \"content_type\",\n    \"number_of_parts\",\n    \"external_url\",\n  ],\n\n  path: (): string => `file_uploads`,\n} as const\n\ntype ListFileUploadsQueryParameters = {\n  // If supplied, the endpoint will return file uploads with the specified status.\n  status?: \"pending\" | \"uploaded\" | \"expired\" | \"failed\"\n  // If supplied, this endpoint will return a page of results starting after the cursor\n  // provided. If not supplied, this endpoint will return the first page of results.\n  start_cursor?: string\n  // The number of items from the full list desired in the response. Maximum: 100\n  page_size?: number\n}\n\nexport type ListFileUploadsParameters = ListFileUploadsQueryParameters\n\nexport type ListFileUploadsResponse = {\n  // Always `list`\n  object: \"list\"\n  next_cursor: IdResponse | null\n  has_more: boolean\n  results: Array<FileUploadObjectResponse>\n  // Always `file_upload`\n  type: \"file_upload\"\n  file_upload: EmptyObject\n}\n\n/**\n * List file uploads\n */\nexport const listFileUploads = {\n  method: \"get\",\n  pathParams: [],\n  queryParams: [\"status\", \"start_cursor\", \"page_size\"],\n  bodyParams: [],\n\n  path: (): string => `file_uploads`,\n} as const\n\ntype SendFileUploadPathParameters = {\n  // Identifier for a Notion file upload object.\n  file_upload_id: IdRequest\n}\n\ntype SendFileUploadFormDataParameters = {\n  file: { filename?: string; data: string | Blob }\n  part_number?: string\n}\n\nexport type SendFileUploadParameters = SendFileUploadPathParameters &\n  SendFileUploadFormDataParameters\n\nexport type SendFileUploadResponse = FileUploadObjectResponse\n\n/**\n * Upload a file\n */\nexport const sendFileUpload = {\n  method: \"post\",\n  pathParams: [\"file_upload_id\"],\n  queryParams: [],\n  bodyParams: [],\n  formDataParams: [\"file\", \"part_number\"],\n  path: (p: SendFileUploadPathParameters): string =>\n    `file_uploads/${p.file_upload_id}/send`,\n} as const\n\ntype CompleteFileUploadPathParameters = {\n  // Identifier for a Notion file upload object.\n  file_upload_id: IdRequest\n}\n\nexport type CompleteFileUploadParameters = CompleteFileUploadPathParameters\n\nexport type CompleteFileUploadResponse = FileUploadObjectResponse\n\n/**\n * Complete a multi-part file upload\n */\nexport const completeFileUpload = {\n  method: \"post\",\n  pathParams: [\"file_upload_id\"],\n  queryParams: [],\n  bodyParams: [],\n\n  path: (p: CompleteFileUploadPathParameters): string =>\n    `file_uploads/${p.file_upload_id}/complete`,\n} as const\n\ntype GetFileUploadPathParameters = {\n  // Identifier for a Notion file upload object.\n  file_upload_id: IdRequest\n}\n\nexport type GetFileUploadParameters = GetFileUploadPathParameters\n\nexport type GetFileUploadResponse = FileUploadObjectResponse\n\n/**\n * Retrieve a file upload\n */\nexport const getFileUpload = {\n  method: \"get\",\n  pathParams: [\"file_upload_id\"],\n  queryParams: [],\n  bodyParams: [],\n\n  path: (p: GetFileUploadPathParameters): string =>\n    `file_uploads/${p.file_upload_id}`,\n} as const\n\ntype OauthTokenBodyParameters =\n  | {\n      grant_type: \"authorization_code\"\n      code: string\n      redirect_uri?: string\n      external_account?: { key: string; name: string }\n    }\n  | { grant_type: \"refresh_token\"; refresh_token: string }\n\nexport type OauthTokenParameters = OauthTokenBodyParameters\n\nexport type OauthTokenResponse = {\n  access_token: string\n  token_type: \"bearer\"\n  refresh_token: string | null\n  bot_id: string\n  workspace_icon: string | null\n  workspace_name: string | null\n  workspace_id: string\n  owner:\n    | {\n        type: \"user\"\n        user:\n          | {\n              type: \"person\"\n              person: { email: string }\n              name: string | null\n              avatar_url: string | null\n              id: IdRequest\n              object: \"user\"\n            }\n          | PartialUserObjectResponse\n      }\n    | { type: \"workspace\"; workspace: true }\n  duplicated_template_id: string | null\n  request_id?: string\n}\n\n/**\n * Exchange an authorization code for an access and refresh token\n */\nexport const oauthToken = {\n  method: \"post\",\n  pathParams: [],\n  queryParams: [],\n  bodyParams: [\n    \"grant_type\",\n    \"code\",\n    \"redirect_uri\",\n    \"external_account\",\n    \"refresh_token\",\n  ],\n\n  path: (): string => `oauth/token`,\n} as const\n\ntype OauthRevokeBodyParameters = { token: string }\n\nexport type OauthRevokeParameters = OauthRevokeBodyParameters\n\nexport type OauthRevokeResponse = { request_id?: string }\n\n/**\n * Revoke a token\n */\nexport const oauthRevoke = {\n  method: \"post\",\n  pathParams: [],\n  queryParams: [],\n  bodyParams: [\"token\"],\n\n  path: (): string => `oauth/revoke`,\n} as const\n\ntype OauthIntrospectBodyParameters = { token: string }\n\nexport type OauthIntrospectParameters = OauthIntrospectBodyParameters\n\nexport type OauthIntrospectResponse = {\n  active: boolean\n  scope?: string\n  iat?: number\n  request_id?: string\n}\n\n/**\n * Introspect a token\n */\nexport const oauthIntrospect = {\n  method: \"post\",\n  pathParams: [],\n  queryParams: [],\n  bodyParams: [\"token\"],\n\n  path: (): string => `oauth/introspect`,\n} as const\n"]}